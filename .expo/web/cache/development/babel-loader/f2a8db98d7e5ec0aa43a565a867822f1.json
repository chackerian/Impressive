{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/StartScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState, setState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Logo from \"./Logo\";\nimport Footer from \"./Footer\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Facebook from 'expo-facebook';\nimport Button from \"./Button\";\nimport * as AppleAuthentication from 'expo-apple-authentication';\nimport firebase from 'firebase/app';\nimport { storage, store } from \"../App.js\";\nimport 'firebase/auth';\nimport AppleAuth from \"./AppleAuth.js\";\nexport default function StartScreen(props) {\n  function logIn() {}\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersc = _useState2[0],\n      setUserSc = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var profile = function profile() {\n    navigation.navigate('LoginScreen');\n  };\n\n  if (Platform.OS == \"web\") {\n    window.fbAsyncInit = function () {\n      FB.init({\n        appId: '603428947262435',\n        autoLogAppEvents: true,\n        xfbml: true,\n        version: 'v10.0'\n      });\n    };\n\n    logIn = function logIn() {\n      FB.login(function (response) {\n        if (response.authResponse) {\n          FB.api('/me?fields=email,picture.type(normal),name', function (response) {\n            console.log(\"GRAPH\", response);\n            props.route.params.login(response);\n          });\n        }\n      }, {\n        scope: 'public_profile,email'\n      });\n    };\n  } else {\n    logIn = function logIn() {\n      var _await$Facebook$logIn, type, token, expirationDate, permissions, declinedPermissions, response, user, message;\n\n      return _regeneratorRuntime.async(function logIn$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Facebook.initializeAsync({\n                appId: '603428947262435'\n              }));\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n                permissions: ['public_profile', 'email']\n              }));\n\n            case 5:\n              _await$Facebook$logIn = _context.sent;\n              type = _await$Facebook$logIn.type;\n              token = _await$Facebook$logIn.token;\n              expirationDate = _await$Facebook$logIn.expirationDate;\n              permissions = _await$Facebook$logIn.permissions;\n              declinedPermissions = _await$Facebook$logIn.declinedPermissions;\n\n              if (!(type === 'success')) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?fields=email,picture.type(large),name&access_token=\" + token));\n\n            case 14:\n              response = _context.sent;\n              console.log(response);\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 18:\n              user = _context.sent;\n              props.route.params.login(user);\n              _context.next = 22;\n              break;\n\n            case 22:\n              _context.next = 28;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](0);\n              message = _context.t0.message;\n              Alert.alert(\"Facebook Login Error: \" + message);\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 24]], Promise);\n    };\n  }\n\n  var styles = StyleSheet.create({\n    button: {\n      borderRadius: 1,\n      backgroundColor: 'green'\n    },\n    buttons: {\n      borderRadius: 1,\n      backgroundColor: '#4267B2'\n    },\n    login: {\n      marginTop: 100,\n      alignItems: 'center',\n      borderRadius: 80,\n      padding: 20\n    },\n    facebook: {\n      backgroundColor: '#4267B2'\n    },\n    container: {\n      flex: 1,\n      backgroundColor: 'white'\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    mode: \"outlined\",\n    color: \"white\",\n    style: styles.button,\n    onPress: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(Button, {\n    mode: \"outlined\",\n    style: styles.buttons,\n    color: \"white\",\n    onPress: logIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Facebook Sign In\"), React.createElement(AppleAuth, {\n    login: props.route.params.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }))), React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/StartScreen.js"],"names":["React","useEffect","useRef","useState","setState","Logo","Footer","getAuth","createUserWithEmailAndPassword","useNavigation","Facebook","Button","AppleAuthentication","firebase","storage","store","AppleAuth","StartScreen","props","logIn","usersc","setUserSc","user","setUser","navigation","profile","navigate","Platform","OS","window","fbAsyncInit","FB","init","appId","autoLogAppEvents","xfbml","version","login","response","authResponse","api","console","log","route","params","scope","initializeAsync","logInWithReadPermissionsAsync","permissions","type","token","expirationDate","declinedPermissions","fetch","json","message","Alert","alert","styles","StyleSheet","create","button","borderRadius","backgroundColor","buttons","marginTop","alignItems","padding","facebook","container","flex"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState, setState} from 'react'\nimport { Image, StyleSheet, Text, View, ScrollView, Alert, Platform } from \"react-native\";\nimport Logo from './Logo'\nimport Footer from './Footer'\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Facebook from 'expo-facebook';\nimport Button from './Button'\nimport * as AppleAuthentication from 'expo-apple-authentication';\n\nimport firebase from 'firebase/app';\nimport { storage, store } from \"../App.js\";\nimport 'firebase/auth';\nimport AppleAuth from './AppleAuth.js';\n\nexport default function StartScreen(props) {\n\n  function logIn(){}\n\n  const [usersc, setUserSc] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigation = useNavigation();\n\n  var profile = function(){\n    navigation.navigate('LoginScreen')\n  }\n  \n  if (Platform.OS == \"web\") {\n\n    // require('./fb')\n\n      window.fbAsyncInit = function() {\n        FB.init({\n          appId            : '603428947262435',\n          autoLogAppEvents : true,\n          xfbml            : true,\n          version          : 'v10.0'\n        });\n      };\n\n      logIn = function() {\n\n      FB.login(function(response) {\n        if (response.authResponse) {\n         FB.api('/me?fields=email,picture.type(normal),name', function(response) {\n           console.log(\"GRAPH\", response)\n           props.route.params.login(response)\n         });\n        }\n    }, {scope: 'public_profile,email'});\n\n  } \n  \n  } else {\n\n  logIn = async function() {\n      try {\n        await Facebook.initializeAsync({\n          appId: '603428947262435',\n        });\n        const {\n          type,\n          token,\n          expirationDate,\n          permissions,\n          declinedPermissions,\n        } = await Facebook.logInWithReadPermissionsAsync({\n          permissions: ['public_profile', 'email'],\n        });\n        if (type === 'success') {\n          // Get the user's name using Facebook's Graph API\n          const response = await fetch(`https://graph.facebook.com/me?fields=email,picture.type(large),name&access_token=${token}`);\n          console.log(response)\n          var user = (await response.json())\n          props.route.params.login(user)\n        } else {\n          // type === 'cancel'\n        }\n      } catch ({ message }) {\n        Alert.alert(`Facebook Login Error: ${message}`);\n      }\n    }\n\n  }\n\n  const styles = StyleSheet.create({\n    button: {\n      borderRadius: 1,\n      backgroundColor: 'green',\n    },\n    buttons: {\n      borderRadius: 1,\n      backgroundColor: '#4267B2',\n    },\n    login: {\n      marginTop: 100,\n      alignItems: 'center',\n      borderRadius: 80,\n      padding: 20,\n    },\n    facebook: {\n      backgroundColor: '#4267B2',\n    },\n    container: {\n      flex: 1,\n      backgroundColor: 'white',\n    },\n  })\n\n  return (\n    <View style={styles.container}>\n      <Logo />\n      <ScrollView>\n        <View style={styles.login}>\n        <Button\n          mode=\"outlined\"\n          color='white'\n          style={styles.button}\n          onPress={profile}>Login\n        </Button>\n        \n        <Button\n          mode=\"outlined\"\n          style={styles.buttons}\n          color='white'\n          onPress={logIn}>Facebook Sign In\n        </Button>\n        <AppleAuth login={props.route.params.login}/>\n      </View>\n      </ScrollView>\n      <Footer />\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
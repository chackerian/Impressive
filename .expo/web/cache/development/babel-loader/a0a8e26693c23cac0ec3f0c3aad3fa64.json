{"ast":null,"code":"var _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/AppleAuth.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState, setState } from 'react';\nimport * as AppleAuthentication from 'expo-apple-authentication';\nexport default function AppleAuth(props) {\n  return React.createElement(AppleAuthentication.AppleAuthenticationButton, {\n    buttonType: AppleAuthentication.AppleAuthenticationButtonType.SIGN_IN,\n    buttonStyle: AppleAuthentication.AppleAuthenticationButtonStyle.BLACK,\n    cornerRadius: 5,\n    style: {\n      width: 224,\n      height: 54\n    },\n    onPress: function _callee() {\n      var credential;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AppleAuthentication.signInAsync({\n                requestedScopes: [AppleAuthentication.AppleAuthenticationScope.FULL_NAME, AppleAuthentication.AppleAuthenticationScope.EMAIL]\n              }));\n\n            case 3:\n              credential = _context.sent;\n              console.log(\"CRED\", credential);\n              props.login(\"A\");\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"ERROR\", _context.t0);\n\n              if (_context.t0.code === 'ERR_CANCELED') {} else {}\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/AppleAuth.js"],"names":["React","useEffect","useRef","useState","setState","AppleAuthentication","AppleAuth","props","AppleAuthenticationButtonType","SIGN_IN","AppleAuthenticationButtonStyle","BLACK","width","height","signInAsync","requestedScopes","AppleAuthenticationScope","FULL_NAME","EMAIL","credential","console","log","login","code"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,QAA5C,QAA2D,OAA3D;AACA,OAAO,KAAKC,mBAAZ,MAAqC,2BAArC;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,SACE,oBAAC,mBAAD,CAAqB,yBAArB;AACE,IAAA,UAAU,EAAEF,mBAAmB,CAACG,6BAApB,CAAkDC,OADhE;AAEE,IAAA,WAAW,EAAEJ,mBAAmB,CAACK,8BAApB,CAAmDC,KAFlE;AAGE,IAAA,YAAY,EAAE,CAHhB;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAJT;AAKE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEoBR,mBAAmB,CAACS,WAApB,CAAgC;AACvDC,gBAAAA,eAAe,EAAE,CACfV,mBAAmB,CAACW,wBAApB,CAA6CC,SAD9B,EAEfZ,mBAAmB,CAACW,wBAApB,CAA6CE,KAF9B;AADsC,eAAhC,CAFpB;;AAAA;AAECC,cAAAA,UAFD;AAQLC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,UAApB;AACAZ,cAAAA,KAAK,CAACe,KAAN,CAAY,GAAZ;AATK;AAAA;;AAAA;AAAA;AAAA;AAWLF,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,kBAAI,YAAEE,IAAF,KAAW,cAAf,EAA+B,CAE9B,CAFD,MAEO,CAEN;;AAhBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA2BD","sourcesContent":["import React, {useEffect, useRef, useState, setState} from 'react'\nimport * as AppleAuthentication from 'expo-apple-authentication';\n\nexport default function AppleAuth(props) {\n  return (\n    <AppleAuthentication.AppleAuthenticationButton\n      buttonType={AppleAuthentication.AppleAuthenticationButtonType.SIGN_IN}\n      buttonStyle={AppleAuthentication.AppleAuthenticationButtonStyle.BLACK}\n      cornerRadius={5}\n      style={{ width: 224, height: 54 }}\n      onPress={async () => {\n        try {\n          const credential = await AppleAuthentication.signInAsync({\n            requestedScopes: [\n              AppleAuthentication.AppleAuthenticationScope.FULL_NAME,\n              AppleAuthentication.AppleAuthenticationScope.EMAIL,\n            ],\n          });\n          console.log(\"CRED\", credential)\n          props.login(\"A\")\n        } catch (e) {\n          console.log(\"ERROR\", e)\n          if (e.code === 'ERR_CANCELED') {\n            // handle that the user canceled the sign-in flow\n          } else {\n            // handle other errors\n          }\n        }\n      }}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}
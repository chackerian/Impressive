{"ast":null,"code":"(function (global) {\n  var startY = 0;\n  var enabled = false;\n\n  var handleTouchmove = function handleTouchmove(evt) {\n    var el = evt.target;\n    evt.preventDefault();\n  };\n\n  var enable = function enable() {\n    window.addEventListener('touchmove', handleTouchmove);\n    enabled = true;\n  };\n\n  var testDiv = document.createElement('div');\n  document.documentElement.appendChild(testDiv);\n  testDiv.style.WebkitOverflowScrolling = 'touch';\n  var scrollSupport = 'getComputedStyle' in window && window.getComputedStyle(testDiv)['-webkit-overflow-scrolling'] === 'touch';\n  document.documentElement.removeChild(testDiv);\n\n  if (scrollSupport) {\n    enable();\n  }\n})(this);","map":{"version":3,"sources":["/Users/rando/Desktop/Impressive/screens/nobounce.js"],"names":["global","startY","enabled","handleTouchmove","evt","el","target","preventDefault","enable","window","addEventListener","testDiv","document","createElement","documentElement","appendChild","style","WebkitOverflowScrolling","scrollSupport","getComputedStyle","removeChild"],"mappings":"AAGC,WAASA,MAAT,EAAiB;AAEjB,MAAIC,MAAM,GAAG,CAAb;AAGA,MAAIC,OAAO,GAAG,KAAd;;AAYA,MAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAASC,GAAT,EAAc;AAEnC,QAAIC,EAAE,GAAGD,GAAG,CAACE,MAAb;AACAF,IAAAA,GAAG,CAACG,cAAJ;AACA,GAJD;;AAMA,MAAIC,MAAM,GAAG,SAATA,MAAS,GAAW;AACvBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCP,eAArC;AACAD,IAAAA,OAAO,GAAG,IAAV;AACA,GAHD;;AAQA,MAAIS,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAD,EAAAA,QAAQ,CAACE,eAAT,CAAyBC,WAAzB,CAAqCJ,OAArC;AACAA,EAAAA,OAAO,CAACK,KAAR,CAAcC,uBAAd,GAAwC,OAAxC;AACA,MAAIC,aAAa,GAAG,sBAAsBT,MAAtB,IAAgCA,MAAM,CAACU,gBAAP,CAAwBR,OAAxB,EAAiC,4BAAjC,MAAmE,OAAvH;AACAC,EAAAA,QAAQ,CAACE,eAAT,CAAyBM,WAAzB,CAAqCT,OAArC;;AAEA,MAAIO,aAAJ,EAAmB;AAClBV,IAAAA,MAAM;AACN;AAED,CAzCA,EAyCC,IAzCD,CAAD","sourcesContent":["/*! iNoBounce - v0.1.6\n* https://github.com/lazd/iNoBounce/\n* Copyright (c) 2013 Larry Davis <lazdnet@gmail.com>; Licensed BSD */\n(function(global) {\n\t// Stores the Y position where the touch started\n\tvar startY = 0;\n\n\t// Store enabled status\n\tvar enabled = false;\n\n\t// var supportsPassiveOption = false;\n\t// try {\n\t// \tvar opts = Object.defineProperty({}, 'passive', {\n\t// \t\tget: function() {\n\t// \t\t\tsupportsPassiveOption = true;\n\t// \t\t}\n\t// \t});\n\t// \twindow.addEventListener('test', null, opts);\n\t// } catch (e) {}\n\n\tvar handleTouchmove = function(evt) {\n\t\t// Get the element that was scrolled upon\n\t\tvar el = evt.target;\n\t\tevt.preventDefault();\n\t};\n\n\tvar enable = function() {\n\t\twindow.addEventListener('touchmove', handleTouchmove);\n\t\tenabled = true;\n\t};\n\n\t// Enable by default if the browser supports -webkit-overflow-scrolling\n\t// Test this by setting the property with JavaScript on an element that exists in the DOM\n\t// Then, see if the property is reflected in the computed style\n\tvar testDiv = document.createElement('div');\n\tdocument.documentElement.appendChild(testDiv);\n\ttestDiv.style.WebkitOverflowScrolling = 'touch';\n\tvar scrollSupport = 'getComputedStyle' in window && window.getComputedStyle(testDiv)['-webkit-overflow-scrolling'] === 'touch';\n\tdocument.documentElement.removeChild(testDiv);\n\n\tif (scrollSupport) {\n\t\tenable();\n\t}\n\n}(this));"]},"metadata":{},"sourceType":"script"}
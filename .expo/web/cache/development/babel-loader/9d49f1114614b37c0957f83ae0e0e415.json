{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _MediaTypeInput;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Platform } from '@unimodules/core';\nimport { PermissionStatus } from 'unimodules-permissions-interface';\nimport { v4 } from 'uuid';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nvar MediaTypeInput = (_MediaTypeInput = {}, _defineProperty(_MediaTypeInput, MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Images, 'image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nexport default {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n\n  launchImageLibraryAsync: function launchImageLibraryAsync(_ref) {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n      var _ref$mediaTypes, mediaTypes, _ref$allowsMultipleSe, allowsMultipleSelection;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref$mediaTypes = _ref.mediaTypes, mediaTypes = _ref$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref$mediaTypes, _ref$allowsMultipleSe = _ref.allowsMultipleSelection, allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe;\n\n              if (Platform.isDOMAvailable) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 3:\n              _context.next = 5;\n              return openFileBrowserAsync({\n                mediaTypes: mediaTypes,\n                allowsMultipleSelection: allowsMultipleSelection\n              });\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  launchCameraAsync: function launchCameraAsync(_ref2) {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {\n      var _ref2$mediaTypes, mediaTypes, _ref2$allowsMultipleS, allowsMultipleSelection;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref2$mediaTypes = _ref2.mediaTypes, mediaTypes = _ref2$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref2$mediaTypes, _ref2$allowsMultipleS = _ref2.allowsMultipleSelection, allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS;\n\n              if (Platform.isDOMAvailable) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 3:\n              _context2.next = 5;\n              return openFileBrowserAsync({\n                mediaTypes: mediaTypes,\n                allowsMultipleSelection: allowsMultipleSelection,\n                capture: true\n              });\n\n            case 5:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  getCameraPermissionsAsync: function getCameraPermissionsAsync() {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  requestCameraPermissionsAsync: function requestCameraPermissionsAsync() {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  getMediaLibraryPermissionsAsync: function getMediaLibraryPermissionsAsync(_writeOnly) {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  requestMediaLibraryPermissionsAsync: function requestMediaLibraryPermissionsAsync(_writeOnly) {\n    return _asyncToGenerator(_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  }\n};\n\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\n\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n      _ref3$capture = _ref3.capture,\n      capture = _ref3$capture === void 0 ? false : _ref3$capture,\n      _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n      allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n\n  document.body.appendChild(input);\n  return new Promise(function (resolve, reject) {\n    input.addEventListener('change', _asyncToGenerator(_regeneratorRuntime.mark(function _callee7() {\n      var img, imgs;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!input.files) {\n                _context7.next = 12;\n                break;\n              }\n\n              if (allowsMultipleSelection) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 4;\n              return readFile(input.files[0]);\n\n            case 4:\n              img = _context7.sent;\n              resolve(_objectSpread({\n                cancelled: false\n              }, img));\n              _context7.next = 12;\n              break;\n\n            case 8:\n              _context7.next = 10;\n              return Promise.all(Array.from(input.files).map(readFile));\n\n            case 10:\n              imgs = _context7.sent;\n              resolve({\n                cancelled: false,\n                selected: imgs\n              });\n\n            case 12:\n              document.body.removeChild(input);\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })));\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onerror = function () {\n      reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n    };\n\n    reader.onload = function (_ref5) {\n      var target = _ref5.target;\n      var uri = target.result;\n\n      var returnRaw = function returnRaw() {\n        return resolve({\n          uri: uri,\n          width: 0,\n          height: 0\n        });\n      };\n\n      if (typeof (target === null || target === void 0 ? void 0 : target.result) === 'string') {\n        var image = new Image();\n        image.src = target.result;\n\n        image.onload = function () {\n          var _image$naturalWidth, _image$naturalHeight;\n\n          return resolve({\n            uri: uri,\n            width: (_image$naturalWidth = image.naturalWidth) !== null && _image$naturalWidth !== void 0 ? _image$naturalWidth : image.width,\n            height: (_image$naturalHeight = image.naturalHeight) !== null && _image$naturalHeight !== void 0 ? _image$naturalHeight : image.height\n          });\n        };\n\n        image.onerror = function () {\n          return returnRaw();\n        };\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"sources":["../src/ExponentImagePicker.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from '@unimodules/core';\nimport { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\nimport { v4 } from 'uuid';\n\nimport {\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync<T extends OpenFileBrowserOptions>({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n}: T): Promise<ExpandImagePickerResult<T>> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        if (!allowsMultipleSelection) {\n          const img: ImageInfo = await readFile(input.files[0]);\n          resolve({\n            cancelled: false,\n            ...img,\n          } as ExpandImagePickerResult<T>);\n        } else {\n          const imgs: ImageInfo[] = await Promise.all(Array.from(input.files).map(readFile));\n          resolve({\n            cancelled: false,\n            selected: imgs,\n          } as ExpandImagePickerResult<T>);\n        }\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob): Promise<ImageInfo> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () =>\n        resolve({\n          uri,\n          width: 0,\n          height: 0,\n        });\n\n      if (typeof target?.result === 'string') {\n        const image = new Image();\n        image.src = target.result;\n        image.onload = () =>\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n          });\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
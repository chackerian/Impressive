{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _AppleAuthenticationB, _AppleAuthenticationB2, _AppleAuthenticationB3, _ButtonComponents;\n\nvar _excluded = [\"onPress\", \"buttonStyle\", \"buttonType\"];\nimport React from 'react';\nimport { AppleAuthenticationButtonStyle, AppleAuthenticationButtonType } from \"./AppleAuthentication.types\";\nimport { ExpoAppleAuthenticationButtonSignInWhite, ExpoAppleAuthenticationButtonSignInWhiteOutline, ExpoAppleAuthenticationButtonSignInBlack, ExpoAppleAuthenticationButtonContinueWhite, ExpoAppleAuthenticationButtonContinueWhiteOutline, ExpoAppleAuthenticationButtonContinueBlack, ExpoAppleAuthenticationButtonSignUpWhite, ExpoAppleAuthenticationButtonSignUpWhiteOutline, ExpoAppleAuthenticationButtonSignUpBlack } from \"./ExpoAppleAuthenticationButton\";\n\nvar AppleAuthenticationButton = function AppleAuthenticationButton(props) {\n  if (!ExpoAppleAuthenticationButtonSignInWhite) {\n    if (__DEV__) {\n      console.warn(\"'AppleAuthenticationButton' is not available.\");\n    }\n\n    return null;\n  }\n\n  var onPress = props.onPress,\n      buttonStyle = props.buttonStyle,\n      buttonType = props.buttonType,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var AppleAuthenticationButtonComponent = selectButtonComponent(buttonType, buttonStyle);\n  return React.createElement(AppleAuthenticationButtonComponent, _extends({\n    onButtonPress: onPress\n  }, restProps));\n};\n\nvar ButtonComponents = (_ButtonComponents = {}, _defineProperty(_ButtonComponents, AppleAuthenticationButtonType.SIGN_IN, (_AppleAuthenticationB = {}, _defineProperty(_AppleAuthenticationB, AppleAuthenticationButtonStyle.WHITE, ExpoAppleAuthenticationButtonSignInWhite), _defineProperty(_AppleAuthenticationB, AppleAuthenticationButtonStyle.WHITE_OUTLINE, ExpoAppleAuthenticationButtonSignInWhiteOutline), _defineProperty(_AppleAuthenticationB, AppleAuthenticationButtonStyle.BLACK, ExpoAppleAuthenticationButtonSignInBlack), _AppleAuthenticationB)), _defineProperty(_ButtonComponents, AppleAuthenticationButtonType.CONTINUE, (_AppleAuthenticationB2 = {}, _defineProperty(_AppleAuthenticationB2, AppleAuthenticationButtonStyle.WHITE, ExpoAppleAuthenticationButtonContinueWhite), _defineProperty(_AppleAuthenticationB2, AppleAuthenticationButtonStyle.WHITE_OUTLINE, ExpoAppleAuthenticationButtonContinueWhiteOutline), _defineProperty(_AppleAuthenticationB2, AppleAuthenticationButtonStyle.BLACK, ExpoAppleAuthenticationButtonContinueBlack), _AppleAuthenticationB2)), _defineProperty(_ButtonComponents, AppleAuthenticationButtonType.SIGN_UP, (_AppleAuthenticationB3 = {}, _defineProperty(_AppleAuthenticationB3, AppleAuthenticationButtonStyle.WHITE, ExpoAppleAuthenticationButtonSignUpWhite), _defineProperty(_AppleAuthenticationB3, AppleAuthenticationButtonStyle.WHITE_OUTLINE, ExpoAppleAuthenticationButtonSignUpWhiteOutline), _defineProperty(_AppleAuthenticationB3, AppleAuthenticationButtonStyle.BLACK, ExpoAppleAuthenticationButtonSignUpBlack), _AppleAuthenticationB3)), _ButtonComponents);\n\nfunction selectButtonComponent(type, style) {\n  return ButtonComponents[type][style];\n}\n\nexport default AppleAuthenticationButton;","map":{"version":3,"sources":["../src/AppleAuthenticationButton.tsx"],"names":[],"mappings":";;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAEE,8BAFF,EAGE,6BAHF;AAKA,SACE,wCADF,EAEE,+CAFF,EAGE,wCAHF,EAIE,0CAJF,EAKE,iDALF,EAME,0CANF,EAOE,wCAPF,EAQE,+CARF,EASE,wCATF;;AAgCA,IAAM,yBAAyB,GAA4D,SAArF,yBAAqF,CAAA,KAAK,EAAG;AACjG,MAAI,CAAC,wCAAL,EAA+C;AAC7C,QAAI,OAAJ,EAAa;AACX,MAAA,OAAO,CAAC,IAAR,CAAa,+CAAb;AACD;;AACD,WAAO,IAAP;AACD;;AAED,MAAQ,OAAR,GAA2D,KAA3D,CAAQ,OAAR;AAAA,MAAiB,WAAjB,GAA2D,KAA3D,CAAiB,WAAjB;AAAA,MAA8B,UAA9B,GAA2D,KAA3D,CAA8B,UAA9B;AAAA,MAA6C,SAA7C,4BAA2D,KAA3D;;AAEA,MAAM,kCAAkC,GAAG,qBAAqB,CAAC,UAAD,EAAa,WAAb,CAAhE;AAEA,SAAO,KAAA,CAAA,aAAA,CAAC,kCAAD,EAAmC,SAAA;AAAC,IAAA,aAAa,EAAE;AAAhB,GAAA,EAA6B,SAA7B,CAAnC,CAAP;AACD,CAbD;;AAeA,IAAM,gBAAgB,+DACnB,6BAA6B,CAAC,OADX,sEAEjB,8BAA8B,CAAC,KAFd,EAEsB,wCAFtB,0CAGjB,8BAA8B,CAAC,aAHd,EAG8B,+CAH9B,0CAIjB,8BAA8B,CAAC,KAJd,EAIsB,wCAJtB,+DAMnB,6BAA6B,CAAC,QANX,wEAOjB,8BAA8B,CAAC,KAPd,EAOsB,0CAPtB,2CAQjB,8BAA8B,CAAC,aARd,EAQ8B,iDAR9B,2CASjB,8BAA8B,CAAC,KATd,EASsB,0CATtB,gEAWnB,6BAA6B,CAAC,OAXX,wEAYjB,8BAA8B,CAAC,KAZd,EAYsB,wCAZtB,2CAajB,8BAA8B,CAAC,aAbd,EAa8B,+CAb9B,2CAcjB,8BAA8B,CAAC,KAdd,EAcsB,wCAdtB,+CAAtB;;AAkBA,SAAS,qBAAT,CACE,IADF,EAEE,KAFF,EAEuC;AAErC,SAAO,gBAAgB,CAAC,IAAD,CAAhB,CAAuB,KAAvB,CAAP;AACD;;AAED,eAAe,yBAAf","sourcesContent":["import React from 'react';\n\nimport {\n  AppleAuthenticationButtonProps,\n  AppleAuthenticationButtonStyle,\n  AppleAuthenticationButtonType,\n} from './AppleAuthentication.types';\nimport {\n  ExpoAppleAuthenticationButtonSignInWhite,\n  ExpoAppleAuthenticationButtonSignInWhiteOutline,\n  ExpoAppleAuthenticationButtonSignInBlack,\n  ExpoAppleAuthenticationButtonContinueWhite,\n  ExpoAppleAuthenticationButtonContinueWhiteOutline,\n  ExpoAppleAuthenticationButtonContinueBlack,\n  ExpoAppleAuthenticationButtonSignUpWhite,\n  ExpoAppleAuthenticationButtonSignUpWhiteOutline,\n  ExpoAppleAuthenticationButtonSignUpBlack,\n} from './ExpoAppleAuthenticationButton';\n\n/**\n * This component displays the proprietary \"Sign In with Apple\" / \"Continue with Apple\" button on\n * your screen. The App Store Guidelines require you to use this component to start the sign in\n * process instead of a custom button. You can customize the design of the button using the\n * properties. You should start the sign in process when the `onPress` property is called.\n *\n * You should only attempt to render this if `AppleAuthentication.isAvailableAsync()` resolves to\n * true. This component will render nothing if it is not available and you will get a warning if\n * `__DEV__ === true`.\n *\n * The properties of this component extend from `View`; however, you should not attempt to set\n * `backgroundColor` or `borderRadius` with the `style` property. This will not work and is against\n * the App Store Guidelines. Instead, you should use the `buttonStyle` property to choose one of the\n * predefined color styles and the `cornerRadius` property to change the border radius of the\n * button.\n *\n * @see [Apple\n * Documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\n * for more details.\n */\nconst AppleAuthenticationButton: React.FunctionComponent<AppleAuthenticationButtonProps> = props => {\n  if (!ExpoAppleAuthenticationButtonSignInWhite) {\n    if (__DEV__) {\n      console.warn(\"'AppleAuthenticationButton' is not available.\");\n    }\n    return null;\n  }\n\n  const { onPress, buttonStyle, buttonType, ...restProps } = props;\n\n  const AppleAuthenticationButtonComponent = selectButtonComponent(buttonType, buttonStyle);\n\n  return <AppleAuthenticationButtonComponent onButtonPress={onPress} {...restProps} />;\n};\n\nconst ButtonComponents: { [type: number]: { [style: number]: React.ElementType } } = {\n  [AppleAuthenticationButtonType.SIGN_IN]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonSignInWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonSignInWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonSignInBlack,\n  },\n  [AppleAuthenticationButtonType.CONTINUE]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonContinueWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonContinueWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonContinueBlack,\n  },\n  [AppleAuthenticationButtonType.SIGN_UP]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonSignUpWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonSignUpWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonSignUpBlack,\n  },\n};\n\nfunction selectButtonComponent(\n  type: AppleAuthenticationButtonType,\n  style: AppleAuthenticationButtonStyle\n): React.ElementType {\n  return ButtonComponents[type][style];\n}\n\nexport default AppleAuthenticationButton;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
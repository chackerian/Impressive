{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/MessagesScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Background from \"./Background\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Navbar from \"./Navbar\";\nimport TextInput from \"./TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase/app';\nimport { storage, store, authenticate } from \"../App.js\";\nvar convo = String(Math.floor(Math.random() * 1000000000000000));\nexport default function ChatScreen(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      matches = _useState6[0],\n      setMatches = _useState6[1];\n\n  useEffect(function () {\n    store.collection('messages').doc(convo).collection('convo').orderBy('createdAt').limit(50).onSnapshot(function (snapshot) {\n      setMessages(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n    });\n    var matchSnap = store.collection('users').doc(props.route.params.user.email);\n    matchSnap.get().then(function (doc) {\n      setMatches(doc.data().matches);\n    });\n  }, []);\n\n  function sendMessage(_x) {\n    return _sendMessage.apply(this, arguments);\n  }\n\n  function _sendMessage() {\n    _sendMessage = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(e) {\n      var uid, avatar;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              uid = authenticate.currentUser.uid;\n              avatar = authenticate.currentUser.photoURL;\n\n              if (!(message.length > 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return store.collection('messages').doc(convo).set({\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              });\n\n            case 6:\n              _context.next = 8;\n              return store.collection('messages').doc(convo).collection('convo').add({\n                text: message,\n                avatar: avatar,\n                uid: uid,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              });\n\n            case 8:\n              setMessage('');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sendMessage.apply(this, arguments);\n  }\n\n  function changeMessage() {\n    alert(\"item\");\n  }\n\n  var Item = function Item(_ref) {\n    var name = _ref.name;\n    return React.createElement(View, {\n      style: styles.item,\n      onClick: changeMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, name));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(Item, {\n      name: item.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      borderWidth: 1,\n      borderColor: '#e7e6e7',\n      marginTop: 80,\n      marginLeft: 30,\n      marginRight: 30\n    },\n    contacts: {\n      flex: 2,\n      backgroundColor: 'white',\n      borderRightWidth: 1,\n      borderRightColor: '#e7e6e7'\n    },\n    messagesBox: {\n      flex: 4,\n      marginTop: 20\n    },\n    item: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderBottomColor: '#e7e6e7',\n      marginHorizontal: 8\n    },\n    msge: {\n      flexDirection: \"row\",\n      color: 'white'\n    },\n    message: {\n      alignSelf: \"flex-start\",\n      margin: 10,\n      borderRadius: 20,\n      borderWidth: 10,\n      borderColor: \"blue\",\n      color: 'white',\n      backgroundColor: 'blue'\n    },\n    sendMessage: {\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: '#e7e6e7'\n    }\n  });\n  var window = useWindowDimensions();\n  var msgStyle = {\n    maxHeight: window.height - 400,\n    overflow: 'scroll',\n    minHeight: 200\n  };\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 6\n    }\n  }, React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.contacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: matches,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.messagesBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: msgStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, messages.map(function (_ref3) {\n    var id = _ref3.id,\n        text = _ref3.text,\n        photoURL = _ref3.photoURL,\n        uid = _ref3.uid;\n    return React.createElement(View, {\n      key: id,\n      style: styles.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      src: photoURL,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      style: styles.msge,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, text));\n  })), React.createElement(View, {\n    style: styles.sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      width: '78%',\n      fontSize: 15,\n      marginLeft: 15,\n      outline: 'none'\n    },\n    placeholder: \"Message...\",\n    value: message,\n    onChangeText: function onChangeText(e) {\n      return setMessage(e);\n    },\n    onSubmitEditing: function onSubmitEditing(event) {\n      return sendMessage(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/MessagesScreen.js"],"names":["React","useState","useEffect","useCallback","Background","MaterialCommunityIcons","Navbar","TextInput","firebase","storage","store","authenticate","convo","String","Math","floor","random","ChatScreen","props","message","setMessage","messages","setMessages","matches","setMatches","collection","doc","orderBy","limit","onSnapshot","snapshot","docs","map","data","matchSnap","route","params","user","email","get","then","sendMessage","e","preventDefault","uid","currentUser","avatar","photoURL","length","set","createdAt","firestore","FieldValue","serverTimestamp","add","text","changeMessage","alert","Item","name","styles","item","title","renderItem","StyleSheet","create","container","flex","flexDirection","borderWidth","borderColor","marginTop","marginLeft","marginRight","contacts","backgroundColor","borderRightWidth","borderRightColor","messagesBox","padding","borderBottomWidth","borderBottomColor","marginHorizontal","msge","color","alignSelf","margin","borderRadius","width","borderTopWidth","borderTopColor","window","useWindowDimensions","msgStyle","maxHeight","height","overflow","minHeight","id","fontSize","outline","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {View, ScrollView, Text, Button, StyleSheet, FlatList, useWindowDimensions, Platform} from 'react-native'\nimport Background from './Background'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Navbar from './Navbar'\nimport TextInput from './TextInput'\nimport { TouchableOpacity, Image } from 'react-native';\n\nimport firebase from 'firebase/app';\n\nimport { storage, store, authenticate } from \"../App.js\";\n\n// Random number\nconst convo = String(Math.floor(Math.random()*1000000000000000))\n\nexport default function ChatScreen(props) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([])\n  const [matches, setMatches] = useState([])\n\n  useEffect(() => {\n      store.collection('messages').doc(convo).collection('convo').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n          setMessages(snapshot.docs.map(doc => doc.data()))\n      })\n\n      const matchSnap = store.collection('users').doc(props.route.params.user.email)\n\n      matchSnap.get().then((doc) => {\n          setMatches(doc.data().matches)\n      })\n  }, [])\n\n   async function sendMessage(e) {\n      e.preventDefault()\n      const uid = authenticate.currentUser.uid\n      const avatar = authenticate.currentUser.photoURL\n\n      if (message.length > 0){\n        await store.collection('messages').doc(convo).set({\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        await store.collection('messages').doc(convo).collection('convo').add({\n            text: message,\n            avatar,\n            uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n      }\n      setMessage('')\n  }\n\n  // let DATA = []\n  // matches.forEach((key)=>{\n  //   DATA.push({title: key})\n  // }); \n\n  function changeMessage() {\n    alert(\"item\")\n  }\n\n  const Item = ({ name }) => (\n    <View style={styles.item} onClick={changeMessage}>\n      <Text style={styles.title}>{name}</Text>\n    </View>\n  );\n\n  const renderItem = ({ item }) => (\n    <Item name={item.name} />\n  );\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      borderWidth: 1,\n      borderColor: '#e7e6e7',\n      marginTop: 80,\n      marginLeft: 30,\n      marginRight: 30,\n    },\n    contacts: {\n      flex: 2,\n      backgroundColor: 'white',\n      borderRightWidth: 1,\n      borderRightColor: '#e7e6e7',\n    },\n    messagesBox: {\n      flex: 4,\n      marginTop: 20,\n    },\n    item: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderBottomColor: '#e7e6e7',\n      marginHorizontal: 8,\n    },\n    msge: {\n      flexDirection: \"row\",\n      color: 'white',\n    },\n    message: {\n      alignSelf: \"flex-start\",\n      margin: 10,\n      borderRadius: 20,\n      borderWidth: 10,\n      borderColor: \"blue\",\n      color: 'white',\n      backgroundColor: 'blue',\n    },\n    sendMessage: {\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: '#e7e6e7',\n    }\n  });\n\n  const window = useWindowDimensions();\n  const msgStyle = { maxHeight: window.height-400, overflow: 'scroll', minHeight: 200}\n\n  return (\n    <Background>\n     <ScrollView>\n      <Navbar />\n      <View style={styles.container}>\n        <View style={styles.contacts}>\n          <FlatList\n            data={matches}\n            renderItem={renderItem}\n          /> \n        </View>\n        <View style={styles.messagesBox}>\n          <View style={msgStyle}>\n              {messages.map(({ id, text, photoURL, uid }) => (\n                  <View key={id} style={styles.message}>\n                      <Image src={photoURL} alt=\"\" />\n                      <Text style={styles.msge}>{text}</Text>\n                  </View>\n              ))}\n          </View>\n          <View style={styles.sendMessage}>\n            <TextInput \n               style={{ width: '78%', fontSize: 15, marginLeft: 15, outline: 'none' }}\n               placeholder='Message...'\n               value={message}\n               onChangeText={e => setMessage(e)} \n               onSubmitEditing={(event) => sendMessage(event)}\n            />\n        </View>\n       </View>\n      </View>\n      </ScrollView>\n    </Background>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}
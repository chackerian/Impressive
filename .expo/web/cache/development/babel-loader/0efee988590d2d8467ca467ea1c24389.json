{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/menu/components/form/Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport colors from \"./../../resources/styles/colors\";\nimport Icon from \"@expo/vector-icons/SimpleLineIcons\";\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type || {};\n      var txtType = type + 'Txt';\n      return React.createElement(TouchableOpacity, {\n        onPress: this.props.onPress,\n        style: [styles.default, styles[type], this.props.style || {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, type == 'facebook' && React.createElement(Icon, {\n        style: [styles.defaultTxt, styles[txtType], this.props.titleStyle || {}],\n        name: \"social-facebook\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 41\n        }\n      }), React.createElement(Text, {\n        style: [styles.defaultTxt, styles[txtType], this.props.titleStyle || {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, this.props.title));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nvar styles = StyleSheet.create({\n  default: {\n    height: 40,\n    borderRadius: 5,\n    backgroundColor: colors.bgMainRed,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 30\n  },\n  defaultTxt: {\n    color: colors.txtWhite,\n    fontSize: 16\n  },\n  facebook: {\n    backgroundColor: '#3C5A99'\n  },\n  facebookTxt: {\n    color: colors.txtWhite\n  },\n  submit: {\n    backgroundColor: colors.bgMain\n  },\n  submitTxt: {\n    color: colors.txtWhite\n  },\n  borderMain: {\n    borderColor: colors.bdMain,\n    borderRadius: 5,\n    paddingHorizontal: 25\n  },\n  borderMainTxt: {\n    color: colors.txtMain\n  }\n});\nmodule.exports = Button;","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/menu/components/form/Button.js"],"names":["React","Component","colors","Icon","Button","type","props","txtType","onPress","styles","default","style","defaultTxt","titleStyle","title","StyleSheet","create","height","borderRadius","backgroundColor","bgMainRed","justifyContent","alignItems","flexDirection","paddingHorizontal","color","txtWhite","fontSize","facebook","facebookTxt","submit","bgMain","submitTxt","borderMain","borderColor","bdMain","borderMainTxt","txtMain","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAKA,OAAOC,MAAP;AACA,OAAOC,IAAP;;IAEMC,M;;;;;;;;;;;;;WACF,kBAAS;AACL,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAX,IAAmB,EAAhC;AACA,UAAME,OAAO,GAAGF,IAAI,GAAG,KAAvB;AACA,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAG,KAAKC,KAAL,CAAWE,OAAvC;AAAiD,QAAA,KAAK,EAAE,CAAEC,MAAM,CAACC,OAAT,EAAkBD,MAAM,CAACJ,IAAD,CAAxB,EAAgC,KAAKC,KAAL,CAAWK,KAAX,IAAoB,EAApD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMN,IAAI,IAAI,UAAR,IAAsB,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAEI,MAAM,CAACG,UAAT,EAAqBH,MAAM,CAACF,OAAD,CAA3B,EAAsC,KAAKD,KAAL,CAAWO,UAAX,IAAyB,EAA/D,CAAb;AAAkF,QAAA,IAAI,EAAC,iBAAvF;AAAyG,QAAA,IAAI,EAAE,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD5B,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAEJ,MAAM,CAACG,UAAT,EAAqBH,MAAM,CAACF,OAAD,CAA3B,EAAsC,KAAKD,KAAL,CAAWO,UAAX,IAAyB,EAA/D,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoF,KAAKP,KAAL,CAAWQ,KAA/F,CAHJ,CADJ;AAOH;;;;EAXgBb,S;;AAcrB,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAE7BN,EAAAA,OAAO,EAAE;AACLO,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,YAAY,EAAE,CAFT;AAGLC,IAAAA,eAAe,EAAEjB,MAAM,CAACkB,SAHnB;AAILC,IAAAA,cAAc,EAAE,QAJX;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLC,IAAAA,aAAa,EAAE,KANV;AAOLC,IAAAA,iBAAiB,EAAE;AAPd,GAFoB;AAW7BZ,EAAAA,UAAU,EAAE;AACRa,IAAAA,KAAK,EAAEvB,MAAM,CAACwB,QADN;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAXiB;AAe7BC,EAAAA,QAAQ,EAAE;AACNT,IAAAA,eAAe,EAAE;AADX,GAfmB;AAkB7BU,EAAAA,WAAW,EAAE;AACTJ,IAAAA,KAAK,EAAEvB,MAAM,CAACwB;AADL,GAlBgB;AAsB7BI,EAAAA,MAAM,EAAE;AACJX,IAAAA,eAAe,EAAEjB,MAAM,CAAC6B;AADpB,GAtBqB;AAyB7BC,EAAAA,SAAS,EAAE;AACPP,IAAAA,KAAK,EAAEvB,MAAM,CAACwB;AADP,GAzBkB;AA4B7BO,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAEhC,MAAM,CAACiC,MADZ;AAERjB,IAAAA,YAAY,EAAE,CAFN;AAGRM,IAAAA,iBAAiB,EAAE;AAHX,GA5BiB;AAiC7BY,EAAAA,aAAa,EAAE;AACXX,IAAAA,KAAK,EAAEvB,MAAM,CAACmC;AADH;AAjCc,CAAlB,CAAf;AAsCAC,MAAM,CAACC,OAAP,GAAiBnC,MAAjB","sourcesContent":["'use strict'\nimport React, { Component } from 'react'\nimport {\n    TouchableOpacity, StyleSheet, Text\n} from 'react-native'\n\nimport colors                   from './../../resources/styles/colors'\nimport Icon                     from 'react-native-vector-icons/SimpleLineIcons'\n\nclass Button extends Component {\n    render() {\n        const type = this.props.type || {}\n        const txtType = type + 'Txt'\n        return (\n            <TouchableOpacity onPress={ this.props.onPress } style={[ styles.default, styles[type], this.props.style || {} ]}>\n                { type == 'facebook' && <Icon style={[ styles.defaultTxt, styles[txtType], this.props.titleStyle || {} ]} name='social-facebook' size={20} /> }\n\n                <Text style={[ styles.defaultTxt, styles[txtType], this.props.titleStyle || {} ]}>{ this.props.title }</Text>\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    // Border button type by default\n    default: {\n        height: 40,\n        borderRadius: 5,\n        backgroundColor: colors.bgMainRed,\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'row',\n        paddingHorizontal: 30\n    },\n    defaultTxt: {\n        color: colors.txtWhite,\n        fontSize: 16\n    },\n    facebook: {\n        backgroundColor: '#3C5A99',\n    },\n    facebookTxt: {\n        color: colors.txtWhite\n    },\n    // Button with background color\n    submit: {\n        backgroundColor: colors.bgMain\n    },\n    submitTxt: {\n        color: colors.txtWhite\n    },\n    borderMain: {\n        borderColor: colors.bdMain,\n        borderRadius: 5,\n        paddingHorizontal: 25\n    },\n    borderMainTxt: {\n        color: colors.txtMain\n    }\n})\n\nmodule.exports = Button\n"]},"metadata":{},"sourceType":"module"}
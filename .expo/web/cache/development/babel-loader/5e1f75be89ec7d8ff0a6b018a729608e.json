{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/SwipeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef, createRef, setState, ReactNode } from 'react';\nimport Background from \"./Background\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Slider from '@react-native-community/slider';\nimport PushNotificationIOS from '@react-native-community/push-notification-ios';\nimport NavSwipe from \"./NavSwipe\";\nimport CardStack, { Card } from \"./swipe\";\nimport { storage, store, authenticate } from \"../App.js\";\nimport firebase from 'firebase/app';\nimport { useNavigation } from '@react-navigation/native';\nimport Drawer from 'react-native-drawer';\nimport Alerts from \"./Alerts.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart, faTimesCircle, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    margin: 16,\n    paddingBottom: 32\n  },\n  sliderContainer: {\n    paddingVertical: 16\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar ControlPanel = function (_Component) {\n  _inherits(ControlPanel, _Component);\n\n  var _super = _createSuper(ControlPanel);\n\n  function ControlPanel() {\n    var _this;\n\n    _classCallCheck(this, ControlPanel);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleSwitch\", function (value) {\n      _this.setState({\n        switchValue: value\n      });\n    });\n\n    _this.state = {\n      switchValue: \"false\"\n    };\n    return _this;\n  }\n\n  _createClass(ControlPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Filters\"), React.createElement(View, {\n        contentContainerStyle: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, React.createElement(Slider, {\n        style: {\n          width: 200,\n          height: 40\n        },\n        minimumValue: 0,\n        maximumValue: 1,\n        minimumTrackTintColor: \"#FFFFFF\",\n        maximumTrackTintColor: \"#000000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, \"Interests\"), React.createElement(Switch, {\n        style: {\n          marginTop: 30\n        },\n        onValueChange: this.toggleSwitch,\n        value: this.state.switchValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }))), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.props.closeDrawer();\n        },\n        title: \"Back to Swipe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ControlPanel;\n}(Component);\n\nexport default function SwipeScreen(props) {\n  var _this3 = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      swiper = _useState4[0],\n      setSwiper = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drawer = _useState6[0],\n      setDrawer = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      shadowColor = _useState8[0],\n      setShadowColor = _useState8[1];\n\n  var _useState9 = useState(createRef()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      slide = _useState10[0],\n      setSlide = _useState10[1];\n\n  var navigation = useNavigation();\n  var alertRef = React.createRef();\n  var styles = StyleSheet.create({\n    image: {\n      opacity: 1,\n      height: 420\n    },\n    info: {\n      padding: 20,\n      color: 'white',\n      fontWeight: \"bold\",\n      backgroundColor: \"#313174\"\n    },\n    description: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'white',\n      marginLeft: 12\n    },\n    viewport: {\n      height: 250,\n      marginTop: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      alignItems: 'center'\n    },\n    button: {\n      padding: 30\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    buttonContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    content: {\n      flex: 5,\n      marginTop: 200,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    card: {\n      width: 320,\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowOpacity: 0.5\n    },\n    label: {\n      marginLeft: 12,\n      fontSize: 25,\n      color: 'white',\n      fontWeight: 'bold',\n      fontFamily: 'System',\n      backgroundColor: 'transparent'\n    },\n    topNav: {\n      backgroundColor: 'rgb(12,0,51)',\n      position: 'absolute',\n      height: '10%',\n      top: 0,\n      width: 100 + '%'\n    },\n    slider: {\n      paddingTop: 70,\n      paddingRight: 20,\n      alignItems: \"flex-end\"\n    },\n    text: {\n      color: 'rgb(255,255,255)',\n      alignSelf: 'center',\n      fontSize: 30\n    }\n  });\n\n  function cards() {\n    return _cards.apply(this, arguments);\n  }\n\n  function _cards() {\n    _cards = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n      var user, userLikes, userDislikes, interacted, batches, snaps, snapshot, images;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return store.collection(\"users\").doc(props.route.params.user.email).get();\n\n            case 2:\n              user = _context.sent;\n              userLikes = user.data().likes || [];\n              userDislikes = user.data().dislikes || [];\n              interacted = userLikes.concat(userDislikes);\n              batches = [];\n              interacted.push(\"A\");\n              batches.push(interacted.slice(0, 10));\n              console.log(\"BATCHES\", batches, \"INTERACTED\", interacted);\n              snaps = [];\n              _context.next = 13;\n              return store.collection(\"users\").where(\"email\", \"not-in\", interacted).get();\n\n            case 13:\n              snapshot = _context.sent;\n              console.log(\"SNAPSHOT\", snapshot);\n              snaps.push(snapshot);\n              console.log('SNAPS', snaps);\n              images = [];\n              snapshot.docs.forEach(function (s) {\n                images.push(s.data());\n              });\n              setImages(images);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _cards.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    cards();\n  }, []);\n\n  function addLike(_x) {\n    return _addLike.apply(this, arguments);\n  }\n\n  function _addLike() {\n    _addLike = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(email) {\n      var snapshot, data, likes, liked, otherliked;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              store.collection('users').doc(props.route.params.user.email).update({\n                likes: firebase.firestore.FieldValue.arrayUnion(email)\n              });\n              _context2.next = 3;\n              return store.collection('users').doc(email).get();\n\n            case 3:\n              snapshot = _context2.sent;\n              data = snapshot.data();\n              likes = data.likes;\n              console.log(\"SWIPE LIKE\", data.likes);\n              liked = {\n                name: data.name,\n                email: email\n              };\n              otherliked = {\n                name: props.route.params.user.name,\n                email: props.route.params.user.email,\n                conversation: convo\n              };\n\n              if (likes.includes(props.route.params.user.email)) {\n                console.log(\"New Match\");\n                store.collection('users').doc(props.route.params.user.email).update({\n                  matches: firebase.firestore.FieldValue.arrayUnion(liked)\n                });\n                store.collection('users').doc(email).update({\n                  matches: firebase.firestore.FieldValue.arrayUnion(otherliked)\n                });\n\n                if (Platform.OS == \"web\") {} else {\n                  Alert.alert(\"New Match\", \"\", [{\n                    text: \"Cancel\",\n                    onPress: function onPress() {\n                      return console.log(\"Cancel Pressed\");\n                    },\n                    style: \"cancel\"\n                  }, {\n                    text: \"Go to match\",\n                    onPress: function onPress() {\n                      return navigation.navigate('Messages');\n                    }\n                  }]);\n                }\n              }\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _addLike.apply(this, arguments);\n  }\n\n  var addDislike = function addDislike(email) {\n    store.collection('users').doc(props.route.params.user.email).update({\n      dislikes: firebase.firestore.FieldValue.arrayUnion(email)\n    });\n  };\n\n  var changeShadow = function changeShadow(a) {\n    setShadowColor('red');\n  };\n\n  var closeFilter = function closeFilter() {\n    drawer.close();\n  };\n\n  var openFilter = function openFilter() {\n    console.log(\"OPEN\");\n    drawer.open();\n  };\n\n  return React.createElement(Drawer, {\n    ref: function ref(_ref) {\n      return setDrawer(_ref);\n    },\n    content: React.createElement(ControlPanel, {\n      closeDrawer: closeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.body,\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, React.createElement(Alerts, {\n    ref: alertRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 6\n    }\n  }), React.createElement(View, {\n    style: styles.topNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.slider,\n    onPress: function onPress() {\n      openFilter();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSlidersH,\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.viewport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 6\n    }\n  }, React.createElement(CardStack, {\n    style: styles.content,\n    ref: function ref(swiper) {\n      setSwiper(swiper);\n    },\n    onSwipeLeft: console.log(\"LEFT\"),\n    changeShadowColor: function changeShadowColor(color) {\n      changeShadow(color);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, images.map(function (i) {\n    var name = i.name.split(\" \")[0];\n    return React.createElement(Card, {\n      style: [styles.card, styles.card1],\n      key: i.name,\n      onSwipedRight: function onSwipedRight(event) {\n        return addLike(i.email);\n      },\n      onSwipedLeft: function onSwipedLeft(event) {\n        return addDislike(i.email);\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: i.picture\n      },\n      style: styles.image,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }), React.createElement(View, {\n      style: styles.info,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 14\n      }\n    }, name, \", \", i.age), React.createElement(Text, {\n      style: styles.description,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 14\n      }\n    }, i.city, \", \", i.state)));\n  }))), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: function onPress() {\n      swiper.swipeLeft();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faTimesCircle,\n    color: '#ff2400',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: function onPress() {\n      swiper.swipeRight();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faHeart,\n    color: '#02ff02',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/SwipeScreen.js"],"names":["React","Component","useState","useEffect","useRef","createRef","setState","ReactNode","Background","Slider","PushNotificationIOS","NavSwipe","CardStack","Card","storage","store","authenticate","firebase","useNavigation","Drawer","Alerts","FontAwesomeIcon","faHeart","faTimesCircle","faSlidersH","styles","StyleSheet","create","container","alignItems","justifyContent","margin","paddingBottom","sliderContainer","paddingVertical","titleContainer","ControlPanel","value","switchValue","state","width","height","marginTop","toggleSwitch","props","closeDrawer","SwipeScreen","images","setImages","swiper","setSwiper","drawer","setDrawer","shadowColor","setShadowColor","slide","setSlide","navigation","alertRef","image","opacity","info","padding","color","fontWeight","backgroundColor","description","fontSize","marginLeft","viewport","marginRight","button","flex","flexDirection","buttonContainer","content","card","borderRadius","shadowOffset","shadowOpacity","label","fontFamily","topNav","position","top","slider","paddingTop","paddingRight","text","alignSelf","cards","collection","doc","route","params","user","email","get","userLikes","data","likes","userDislikes","dislikes","interacted","concat","batches","push","slice","console","log","snaps","where","snapshot","docs","forEach","s","addLike","update","firestore","FieldValue","arrayUnion","liked","name","otherliked","conversation","convo","includes","matches","Platform","OS","Alert","alert","onPress","style","navigate","addDislike","changeShadow","a","closeFilter","close","openFilter","open","ref","body","map","i","split","card1","event","uri","picture","age","city","swipeLeft","swipeRight"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect, useRef, createRef, setState, ReactNode} from 'react'\nimport Background from './Background'\nimport {StyleSheet, SafeAreaView, ScrollView, StatusBar, Image, TextInput, Text, View, Platform, Dimensions, PanResponder, Animated, TouchableOpacity, Alert, Button, Switch } from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport PushNotificationIOS from '@react-native-community/push-notification-ios';\n\nimport NavSwipe from './NavSwipe';\nimport CardStack, { Card } from './swipe';\nimport { storage, store, authenticate } from \"../App.js\";\nimport firebase from 'firebase/app';\n// import './nobounce.js'\nimport { useNavigation } from '@react-navigation/native';\n\nimport Drawer from 'react-native-drawer';\nimport Alerts from './Alerts.js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart, faTimesCircle, faSlidersH } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'stretch',\n        justifyContent: 'flex-start',\n        margin: 16,\n        paddingBottom: 32,\n    },\n    sliderContainer: {\n        paddingVertical: 16,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nclass ControlPanel extends Component {\n\n  constructor() {\n    super();\n    this.state = {switchValue: \"false\"};\n  }\n\n  toggleSwitch = value => {\n    this.setState({ switchValue: value });\n  };\n\n  render() {\n    return (\n      <View>\n        <SafeAreaView style={styles.container}>\n          <Text style={styles.titleContainer}>\n            Filters\n          </Text>\n          <View contentContainerStyle={styles.container}>\n              <Slider\n                style={{width: 200, height: 40}}\n                minimumValue={0}\n                maximumValue={1}\n                minimumTrackTintColor=\"#FFFFFF\"\n                maximumTrackTintColor=\"#000000\"\n              />\n          </View>\n          <View>\n            <Text style={styles.titleContainer}>Interests</Text>\n            <Switch\n              style={{ marginTop: 30 }}\n              onValueChange={this.toggleSwitch}\n              value={this.state.switchValue}\n            />\n          </View>\n        </SafeAreaView>\n\n        <Button\n          onPress={() => {\n            this.props.closeDrawer();\n          }}\n          title=\"Back to Swipe\"\n        />\n      </View>\n    )\n  }\n}\n\nexport default function SwipeScreen(props) {\n\n  const [images, setImages] = useState([]);\n  const [swiper, setSwiper] = useState();\n  const [drawer, setDrawer] = useState();\n  const [shadowColor, setShadowColor] = useState(\"\");\n  const [slide, setSlide] = useState(createRef());\n  const navigation = useNavigation();\n  const alertRef = React.createRef();\n\n  const styles = StyleSheet.create({\n    image: {\n      opacity: 1,\n      height: 420,\n    },\n    info: {\n      padding: 20,\n      color: 'white',\n      fontWeight: \"bold\",\n      backgroundColor: \"#313174\",\n    },\n    description: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'white',\n      marginLeft: 12,\n    },\n    viewport: {\n      height: 250,\n      marginTop: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      alignItems: 'center',\n    },\n    button: {\n      padding: 30,\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n    },\n    buttonContainer:{\n      flexDirection:'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    content:{\n      flex: 5,\n      marginTop: 200,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    card:{\n      width: 320,\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowOpacity:0.5,\n    },\n    label: {\n      marginLeft: 12,\n      fontSize: 25,\n      color: 'white',\n      fontWeight: 'bold',\n      fontFamily: 'System',\n      backgroundColor: 'transparent',\n    },\n    topNav: {\n        backgroundColor:'rgb(12,0,51)',\n        position:'absolute',\n        height: '10%',\n        top:0,\n        width:100+'%'\n    },\n    slider: {\n        paddingTop: 70,\n        paddingRight: 20,\n        alignItems: \"flex-end\",\n    },\n    text:{\n        color:'rgb(255,255,255)',\n        alignSelf: 'center',\n        fontSize: 30\n    },\n  })\n\n  async function cards(){\n    const user = await store.collection(\"users\").doc(props.route.params.user.email).get()\n    const userLikes = user.data().likes || []\n    const userDislikes = user.data().dislikes || []\n\n    var interacted = userLikes.concat(userDislikes)\n    var batches = [];\n\n    interacted.push(\"A\")\n    batches.push(interacted.slice(0, 10));\n\n    console.log(\"BATCHES\", batches, \"INTERACTED\", interacted)\n\n    var snaps = []\n    var snapshot = await store.collection(\"users\").where(\"email\", \"not-in\", interacted).get()\n    console.log(\"SNAPSHOT\", snapshot)\n    snaps.push(snapshot);\n\n    console.log('SNAPS', snaps)\n\n    const images = [];\n\n    snapshot.docs.forEach((s) => {\n      images.push(s.data());\n    });\n    setImages(images);\n\n  }\n  \n  useEffect(() => {\n    cards()\n  }, [])\n\n  async function addLike(email){\n\n    store.collection('users').doc(props.route.params.user.email).update({\n      likes: firebase.firestore.FieldValue.arrayUnion(email)\n    })\n\n    const snapshot = await store.collection('users').doc(email).get();\n    const data = snapshot.data();\n    var likes = data.likes\n\n    console.log(\"SWIPE LIKE\", data.likes)\n\n    var liked = {name: data.name, email: email}\n    var otherliked = {name: props.route.params.user.name, email: props.route.params.user.email, conversation: convo }\n\n    if(likes.includes(props.route.params.user.email)){\n\n          console.log(\"New Match\")\n          store.collection('users').doc(props.route.params.user.email).update({\n              matches: firebase.firestore.FieldValue.arrayUnion(liked)\n          })\n\n          store.collection('users').doc(email).update({\n              matches: firebase.firestore.FieldValue.arrayUnion(otherliked)\n          })\n\n          if (Platform.OS == \"web\") {\n\n          } else {\n\n            Alert.alert(\n              \"New Match\",\n              \"\",\n              [\n                {\n                  text: \"Cancel\",\n                  onPress: () => console.log(\"Cancel Pressed\"),\n                  style: \"cancel\"\n                },\n                { text: \"Go to match\", onPress: () => navigation.navigate('Messages') }\n              ]\n            );\n\n          }\n\n    }\n\n  }\n\n  var addDislike = function(email){\n    store.collection('users').doc(props.route.params.user.email).update({\n      dislikes: firebase.firestore.FieldValue.arrayUnion(email)\n    })\n  }\n\n  var changeShadow = function(a){\n    setShadowColor('red')\n  }\n\n  const closeFilter = () =>  {\n    drawer.close()\n  };\n\n  const openFilter = () =>  {\n    console.log(\"OPEN\")\n    drawer.open()\n  };\n\n  return (\n    <Drawer\n      ref={(ref) => setDrawer(ref)}\n      content={<ControlPanel closeDrawer={closeFilter} />}\n    >\n    <View style={styles.body} id=\"main\">\n     <Alerts ref={alertRef}/>\n      <View style={styles.topNav}>\n          <StatusBar barStyle=\"light-content\"/>\n          <Text style={styles.text}></Text>\n          <TouchableOpacity style={styles.slider} onPress={() => { openFilter() }}>\n              <FontAwesomeIcon icon={ faSlidersH } size={ 30 } />\n          </TouchableOpacity> \n      </View>\n     <View style={styles.viewport}>\n      <CardStack \n        style={styles.content}\n        ref={swiper => { setSwiper(swiper) }}\n        onSwipeLeft={console.log(\"LEFT\")}\n        changeShadowColor={color => { changeShadow(color)} }\n      >\n       {images.map((i) => {\n        var name = i.name.split(\" \")[0]\n        return (\n          <Card style={[styles.card, styles.card1]} key={i.name} \n            onSwipedRight={(event) => addLike(i.email)} \n            onSwipedLeft={(event) => addDislike(i.email)}\n          >\n            <Image source={{uri: i.picture}} style={styles.image} />\n            <View style={styles.info}> \n             <Text style={styles.label}>{name}, {i.age}</Text>\n             <Text style={styles.description}>{i.city}, {i.state}</Text>\n            </View>\n          </Card>\n          )\n        })}\n      </CardStack>\n     </View>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={[styles.button]} onPress={() => {\n          swiper.swipeLeft();\n        }}>\n          <FontAwesomeIcon icon={ faTimesCircle } color={ '#ff2400' } size={ 40 } />\n        </TouchableOpacity>\n        <TouchableOpacity style={[styles.button]} onPress={() => {\n          swiper.swipeRight();\n        }}>\n          <FontAwesomeIcon icon={ faHeart } color={ '#02ff02' } size={ 40 } />\n        </TouchableOpacity>\n      </View>\n    </View>\n  </Drawer>\n  )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rando/Desktop/Impressive/screens/MessagesScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Background from \"./Background\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Navbar from \"./Navbar\";\nimport TextInput from \"./TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport \"./Chat.js\";\nimport firebase from 'firebase/app';\nimport { storage, store, authenticate } from \"../App.js\";\nvar convo = String(Math.floor(Math.random() * 1000000000000000));\nexport default function ChatScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useEffect(function () {\n    store.collection('messages').doc(convo).collection('convo').orderBy('createdAt').limit(50).onSnapshot(function (snapshot) {\n      setMessages(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n    });\n  }, []);\n\n  function sendMessage(e) {\n    var uid, avatar;\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            console.log(\"MESSAGE\");\n            uid = authenticate.currentUser.uid;\n            avatar = authenticate.currentUser.photoURL;\n\n            if (!(message.length > 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(store.collection('messages').doc(convo).set({\n              createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            }));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(store.collection('messages').doc(convo).collection('convo').add({\n              text: message,\n              avatar: avatar,\n              uid: uid,\n              createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            }));\n\n          case 9:\n            setMessage('');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var StyleSheets = function () {\n    function StyleSheets() {\n      _classCallCheck(this, StyleSheets);\n    }\n\n    _createClass(StyleSheets, null, [{\n      key: \"create\",\n      value: function create(obj) {\n        var result = {};\n\n        for (var key in obj) {\n          result[key] = obj[key];\n        }\n\n        return result;\n      }\n    }]);\n\n    return StyleSheets;\n  }();\n\n  var styles = StyleSheets.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      border: '1px solid #e7e6e7',\n      margin: '5 10 0 10'\n    },\n    contacts: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    messagesBox: {\n      flex: 4,\n      borderLeft: '1 solid #e7e6e7'\n    },\n    msg: {\n      display: 'block',\n      paddingTop: 0,\n      paddingBottom: 10,\n      paddingLeft: 0,\n      paddingRight: 10,\n      margin: 5,\n      marginTop: 40,\n      borderRadius: 4,\n      color: 'white',\n      backgroundColor: 'blue'\n    }\n  });\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.contacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"John George\"), React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"John George\"), React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"John George\"))), React.createElement(View, {\n    style: styles.messagesBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    className: \"msgs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, messages.map(function (_ref2) {\n    var id = _ref2.id,\n        text = _ref2.text,\n        photoURL = _ref2.photoURL,\n        uid = _ref2.uid;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      key: id,\n      style: styles.msg,\n      className: \"msg \" + (uid === authenticate.currentUser.uid ? 'sent' : 'received'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      src: photoURL,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      className: \"message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, text)));\n  })), React.createElement(TextInput, {\n    style: {\n      width: '78%',\n      fontSize: 15,\n      fontWeight: '600',\n      marginLeft: 5,\n      marginBottom: -3\n    },\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    placeholder: \"Message...\",\n    value: message,\n    onChangeText: function onChangeText(e) {\n      return setMessage(e);\n    },\n    onSubmitEditing: function onSubmitEditing(event) {\n      return sendMessage(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/rando/Desktop/Impressive/screens/MessagesScreen.js"],"names":["React","useState","useEffect","useCallback","Background","MaterialCommunityIcons","Navbar","TextInput","firebase","storage","store","authenticate","convo","String","Math","floor","random","ChatScreen","navigation","message","setMessage","messages","setMessages","collection","doc","orderBy","limit","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","console","log","uid","currentUser","avatar","photoURL","length","set","createdAt","firestore","FieldValue","serverTimestamp","add","text","StyleSheets","obj","result","key","styles","create","container","flex","flexDirection","border","margin","contacts","backgroundColor","messagesBox","borderLeft","msg","display","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","borderRadius","color","id","width","fontSize","fontWeight","marginLeft","marginBottom","colors","primary","underlineColor","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {View, ScrollView, Text, Button, StyleSheet} from 'react-native'\nimport Background from './Background'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Navbar from './Navbar'\nimport TextInput from './TextInput'\nimport { TouchableOpacity, Image } from 'react-native';\n// import SendIcon from '@mui/icons-material/Send';\nimport './Chat.js';\n\nimport firebase from 'firebase/app';\n\nimport { storage, store, authenticate } from \"../App.js\";\nconst convo = String(Math.floor(Math.random()*1000000000000000))\n\nexport default function ChatScreen({ navigation }) {\n  const [message, setMessage] = useState([]);\n  const [messages, setMessages] = useState([])\n  useEffect(() => {\n      store.collection('messages').doc(convo).collection('convo').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n          setMessages(snapshot.docs.map(doc => doc.data()))\n      })\n  }, [])\n\n   async function sendMessage(e) {\n        e.preventDefault()\n        console.log(\"MESSAGE\")\n        const uid = authenticate.currentUser.uid\n        const avatar = authenticate.currentUser.photoURL\n\n        if (message.length > 0){\n          await store.collection('messages').doc(convo).set({\n              createdAt: firebase.firestore.FieldValue.serverTimestamp()\n          })\n\n          await store.collection('messages').doc(convo).collection('convo').add({\n              text: message,\n              avatar,\n              uid,\n              createdAt: firebase.firestore.FieldValue.serverTimestamp()\n          })\n        }\n        setMessage('')\n    }\n\n  class StyleSheets {\n    static create(obj) {\n      var result = {};\n      for (var key in obj) {\n        result[key] = obj[key]\n      }\n      return result;\n    }\n  }  \n\n  const styles = StyleSheets.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      border: '1px solid #e7e6e7',\n      margin: '5 10 0 10',\n    },\n    contacts: {\n      flex: 1,\n      backgroundColor: 'white',\n    },\n    messagesBox: {\n      flex: 4,\n      borderLeft: '1 solid #e7e6e7',\n    },\n    msg: {\n      display: 'block',\n      paddingTop: 0,\n      paddingBottom: 10,\n      paddingLeft: 0,\n      paddingRight: 10,\n      margin: 5,\n      marginTop: 40,\n      borderRadius: 4,\n      color: 'white',\n      backgroundColor: 'blue',\n    },\n  });\n\n  return (\n    <Background>\n     <ScrollView>\n      <Navbar />\n      <View style={styles.container}>\n        <View style={styles.contacts}>\n            <ul>\n              <li>John George</li>\n              <li>John George</li>\n              <li>John George</li>\n            </ul>\n        </View>\n        <View style={styles.messagesBox}>\n          <View className=\"msgs\">\n                {messages.map(({ id, text, photoURL, uid }) => (\n                    <View>\n                        <View key={id} style={styles.msg} className={`msg ${uid === authenticate.currentUser.uid ? 'sent' : 'received'}`}>\n                            <Image src={photoURL} alt=\"\" />\n                            <Text className=\"message\">{text}</Text>\n                        </View>\n                    </View>\n                ))}\n          </View>\n          <TextInput \n             style={{ width: '78%', fontSize: 15, fontWeight: '600', marginLeft: 5, marginBottom: -3 }}\n             theme={{ colors: { primary: 'blue',underlineColor:'transparent',}}}\n             placeholder='Message...'\n             value={message}\n             onChangeText={e => setMessage(e)} \n             onSubmitEditing={(event) => sendMessage(event)}\n          />\n       </View>\n      </View>\n      </ScrollView>\n    </Background>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}
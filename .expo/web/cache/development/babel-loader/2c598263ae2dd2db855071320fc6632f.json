{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rando/Desktop/Impressive/App.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport { Provider } from 'react-native-paper';\nimport { NavigationContainer, createSwitchNavigator, createAppContainer, createNavigatorFactory } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport Realm from \"realm\";\nimport Amplify from 'aws-amplify';\nimport awsconfig from \"./aws-exports.js\";\nAmplify.configure(awsconfig);\nimport StartScreen from \"./screens/StartScreen.js\";\nimport LoginScreen from \"./screens/LoginScreen.js\";\nimport RegisterScreen from \"./screens/RegisterScreen.js\";\nimport Dashboard from \"./screens/Dashboard.js\";\nimport MessagesScreen from \"./screens/MessagesScreen.js\";\nimport SettingsScreen from \"./screens/SettingsScreen.js\";\nimport ImageScreen from \"./screens/ImageScreen.js\";\nimport SwipeScreen from \"./screens/SwipeScreen.js\";\nvar AuthContext = createContext(null);\nvar PERSISTENCE_KEY = 'NAVIGATION_STATE';\n\nfunction AuthNavigator() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  function login(a) {\n    setUser(a);\n    var userRef = store.collection('users').doc(a.email);\n    console.log(\"EMAIL\", a.email);\n    userRef.get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Login\");\n      } else {\n        console.log(\"Sign UP\");\n\n        if (a.picture) {\n          userRef.set({\n            name: a.name || \"\",\n            email: a.email || \"\",\n            picture: a.picture.data.url,\n            likes: [\"blank\"],\n            dislikes: [\"blank\"],\n            conversations: []\n          });\n        } else {\n          userRef.set({\n            name: a.name || \"\",\n            email: a.email || \"\",\n            picture: \"https://www.edmundsgovtech.com/wp-content/uploads/2020/01/default-picture_0_0.png\",\n            likes: [\"blank\"],\n            dislikes: [\"blank\"],\n            conversations: []\n          });\n        }\n      }\n    });\n  }\n\n  function logout() {\n    firebase.auth().signOut();\n    setUser(null);\n  }\n\n  function isUser() {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"IS USER\");\n        return user;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  return user ? React.createElement(MyTabs, {\n    user: user,\n    logout: logout,\n    onStateChange: function onStateChange(state) {\n      return console.log(\"CHANGED\", state);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }) : React.createElement(MyStack, {\n    login: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  });\n}\n\nvar AuthStack = createStackNavigator();\n\nfunction MyStack(props) {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"StartScreen\",\n    component: StartScreen,\n    options: {\n      title: 'TalkLater'\n    },\n    initialParams: {\n      login: props.login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    initialParams: {\n      login: props.login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    initialParams: {\n      login: props.login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar AppStack = createBottomTabNavigator();\n\nfunction MyTabs(props) {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, React.createElement(AppStack.Navigator, {\n    initialRouteName: \"Swipe\",\n    tabBarOptions: {\n      style: {\n        padding: 10\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(AppStack.Screen, {\n    name: \"Swipe\",\n    component: SwipeScreen,\n    initialParams: {\n      user: props.user\n    },\n    options: {\n      tabBarLabel: '',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: 26,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), React.createElement(AppStack.Screen, {\n    name: \"Messages\",\n    component: MessagesScreen,\n    initialParams: {\n      user: props.user\n    },\n    options: {\n      tabBarLabel: '',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"chat\",\n          color: color,\n          size: 26,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), React.createElement(AppStack.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    initialParams: {\n      user: props.user\n    },\n    options: {\n      tabBarLabel: '',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account-circle\",\n          color: color,\n          size: 26,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), React.createElement(AppStack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    initialParams: {\n      user: props.user,\n      logout: props.logout\n    },\n    options: {\n      tabBarButton: function tabBarButton() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), React.createElement(AppStack.Screen, {\n    name: \"Image\",\n    component: ImageScreen,\n    initialParams: {\n      user: props.user,\n      logout: props.logout\n    },\n    options: {\n      tabBarButton: function tabBarButton() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDLeiyd8iai6akLcumpP5-A1yxs7t5wflk\",\n  authDomain: \"socially-b729a.firebaseapp.com\",\n  databaseURL: \"https://socially-b729a-default-rtdb.firebaseio.com\",\n  projectId: \"socially-b729a\",\n  storageBucket: \"socially-b729a.appspot.com\",\n  messagingSenderId: \"804187430311\",\n  appId: \"1:804187430311:web:6dad7a05a011fb3a032a82\",\n  measurementId: \"G-P1NKXT7943\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({\n  timestampsInSnapshots: true\n});\nvar storage = firebase.storage();\nvar store = firebase.firestore();\nvar authenticate = firebase.auth();\nconsole.log(\"DATABASE INIT\");\nvar matchRef = store.collection(\"users\");\nmatchRef.onSnapshot('value', function (snap) {\n  console.log(snap, \"CHANGED\");\n});\nexport { storage, store, authenticate, AuthNavigator as default };","map":{"version":3,"sources":["/Users/rando/Desktop/Impressive/App.js"],"names":["React","useState","createContext","useEffect","Provider","NavigationContainer","createSwitchNavigator","createAppContainer","createNavigatorFactory","createStackNavigator","createBottomTabNavigator","MaterialCommunityIcons","MaterialIcons","Realm","Amplify","awsconfig","configure","StartScreen","LoginScreen","RegisterScreen","Dashboard","MessagesScreen","SettingsScreen","ImageScreen","SwipeScreen","AuthContext","PERSISTENCE_KEY","AuthNavigator","user","setUser","login","a","userRef","store","collection","doc","email","console","log","get","then","exists","picture","set","name","data","url","likes","dislikes","conversations","logout","firebase","auth","signOut","isUser","onAuthStateChanged","state","AuthStack","MyStack","props","headerShown","title","AppStack","MyTabs","style","padding","tabBarLabel","tabBarIcon","color","tabBarButton","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","settings","timestampsInSnapshots","storage","authenticate","matchRef","onSnapshot","snap","default"],"mappings":"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","sourcesContent":["import React, {useState, createContext, useEffect} from 'react';\nimport { Provider } from 'react-native-paper';\nimport { NavigationContainer, createSwitchNavigator, createAppContainer, createNavigatorFactory } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport Realm from \"realm\";\n\nimport Amplify from 'aws-amplify'\nimport awsconfig from './aws-exports.js'\nAmplify.configure(awsconfig)\n\nimport StartScreen from './screens/StartScreen.js'\nimport LoginScreen from './screens/LoginScreen.js'\nimport RegisterScreen from './screens/RegisterScreen.js'\n\nimport Dashboard from './screens/Dashboard.js'\nimport MessagesScreen from './screens/MessagesScreen.js'\nimport SettingsScreen from './screens/SettingsScreen.js'\nimport ImageScreen from './screens/ImageScreen.js'\nimport SwipeScreen from './screens/SwipeScreen.js'\n\nconst AuthContext = createContext(null)\n// const [initialState, setInitialState] = useState();\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE';\n\nfunction AuthNavigator() {\n  const [user, setUser] = useState(null)\n\n  function login(a) {\n    setUser(a)\n    const userRef = store.collection('users').doc(a.email);\n    console.log(\"EMAIL\", a.email)\n\n    userRef.get().then((doc) => {\n      if (doc.exists){\n        console.log(\"Login\")\n      } else {\n        console.log(\"Sign UP\")\n        if (a.picture) {\n          userRef.set({\n            name: a.name || \"\",\n            email: a.email || \"\",\n            picture: a.picture.data.url,\n            likes: [\"blank\"],\n            dislikes: [\"blank\"],\n            conversations: [],\n          })\n        } else {\n          userRef.set({\n            name: a.name || \"\",\n            email: a.email || \"\",\n            picture: \"https://www.edmundsgovtech.com/wp-content/uploads/2020/01/default-picture_0_0.png\",\n            likes: [\"blank\"],\n            dislikes: [\"blank\"],\n            conversations: [],\n          })\n        }\n      }\n    })\n\n  }\n\n  function logout() {\n    firebase.auth().signOut()\n    setUser(null)\n  }\n\n  function isUser() {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        console.log(\"IS USER\")\n        return user\n      } else {\n        return false\n      }\n    });\n  }\n\n    return user ? (\n    <MyTabs \n      user={user} \n      logout={logout}\n      onStateChange={(state) =>\n        console.log(\"CHANGED\", state)\n      }\n     />\n  ) : (\n    <MyStack login={login} />\n  )\n}\n\nconst AuthStack = createStackNavigator();\n\nfunction MyStack(props) {\n\n  return (\n    <NavigationContainer>\n      <AuthStack.Navigator screenOptions={{\n        headerShown: false\n        }}>\n        <AuthStack.Screen name=\"StartScreen\" component={StartScreen} options={{ title: 'TalkLater' }} initialParams={{login: props.login}} />\n        <AuthStack.Screen name=\"LoginScreen\" component={LoginScreen} initialParams={{login: props.login}} />\n        <AuthStack.Screen name=\"RegisterScreen\" component={RegisterScreen} initialParams={{login: props.login}} />\n      </AuthStack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst AppStack = createBottomTabNavigator();\n\nfunction MyTabs(props) {\n\n  return (\n    <NavigationContainer>\n      <AppStack.Navigator\n        initialRouteName=\"Swipe\"\n        tabBarOptions={{\n          style: {\n            padding: 10\n          }\n        }}\n      >\n\n        <AppStack.Screen\n          name=\"Swipe\"\n          component={SwipeScreen}\n          initialParams={{user: props.user}}\n          options={{\n            tabBarLabel: '',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <AppStack.Screen\n          name=\"Messages\"\n          component={MessagesScreen}\n          initialParams={{user: props.user}}\n          options={{\n            tabBarLabel: '',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"chat\" color={color} size={26} />\n            ),\n          }}\n        />\n        <AppStack.Screen\n          name=\"Dashboard\"\n          component={Dashboard}\n          initialParams={{user: props.user}}\n          options={{\n            tabBarLabel: '',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} />\n            ),\n          }}\n        />\n        <AppStack.Screen\n          name=\"Settings\"\n          component={SettingsScreen}\n          initialParams={{user: props.user, logout: props.logout}}\n          options={{\n            tabBarButton: () => null,\n          }}\n        />\n        <AppStack.Screen\n          name=\"Image\"\n          component={ImageScreen}\n          initialParams={{user: props.user, logout: props.logout}}\n          options={{\n            tabBarButton: () => null,\n          }}\n        />\n      </AppStack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDLeiyd8iai6akLcumpP5-A1yxs7t5wflk\",\n  authDomain: \"socially-b729a.firebaseapp.com\",\n  databaseURL: \"https://socially-b729a-default-rtdb.firebaseio.com\",\n  projectId: \"socially-b729a\",\n  storageBucket: \"socially-b729a.appspot.com\",\n  messagingSenderId: \"804187430311\",\n  appId: \"1:804187430311:web:6dad7a05a011fb3a032a82\",\n  measurementId: \"G-P1NKXT7943\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings( { timestampsInSnapshots: true })\n// firebase.analytics();\n\nconst storage = firebase.storage();\nconst store = firebase.firestore();\nconst authenticate = firebase.auth();\n\nconsole.log(\"DATABASE INIT\")\nvar matchRef = store.collection(\"users\")\n\n// check if matching likes\nmatchRef.onSnapshot('value', snap => {\n  console.log(snap, \"CHANGED\")\n})\n\nexport  {\n   storage, store, authenticate, AuthNavigator as default\n }"]},"metadata":{},"sourceType":"module"}
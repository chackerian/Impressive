{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/menu/screens/drawers/PushyHorizontalMenu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Interactable from 'react-native-interactable';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Menu from \"./../../components/Menu\";\nimport DemoScreen from \"./../DemoScreen\";\nimport colors from \"./../../resources/styles/colors\";\nvar Screen = Dimensions.get('window');\nvar SideMenuWidth = 300;\nvar RemainingWidth = Screen.width - SideMenuWidth;\n\nvar SideMenu = function (_Component) {\n  _inherits(SideMenu, _Component);\n\n  var _super = _createSuper(SideMenu);\n\n  function SideMenu(props) {\n    var _this;\n\n    _classCallCheck(this, SideMenu);\n\n    _this = _super.call(this, props);\n\n    _this.onMenuPress = function () {\n      var menuOpened = !_this.state.menuOpened;\n\n      if (menuOpened) {\n        _this.refs['menuInstance'].snapTo({\n          index: 1\n        });\n      } else {\n        _this.refs['menuInstance'].snapTo({\n          index: 0\n        });\n      }\n    };\n\n    _this.state = {\n      deltaX: new Animated.Value(-SideMenuWidth),\n      menuOpened: false\n    };\n    _this.deltaX = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(SideMenu, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }), React.createElement(Interactable.View, {\n        style: {\n          flex: 1\n        },\n        ref: \"menuInstance\",\n        horizontalOnly: true,\n        snapPoints: [{\n          x: 0,\n          damping: 0.6\n        }, {\n          x: SideMenuWidth,\n          damping: 0.6\n        }],\n        boundaries: {\n          right: SideMenuWidth\n        },\n        initialPosition: {\n          x: 0\n        },\n        animatedValueX: this.deltaX,\n        onSnap: this.onStopInteraction.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, React.createElement(DemoScreen, {\n        style: styles.demoScreen,\n        navigation: this.props.navigation,\n        onMenuPress: this.onMenuPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"onStopInteraction\",\n    value: function onStopInteraction(event, check) {\n      var menuOpened = true;\n\n      if (event.nativeEvent.index == 0) {\n        menuOpened = false;\n      }\n\n      this.setState(function (preState, props) {\n        return {\n          menuOpened: menuOpened\n        };\n      });\n    }\n  }]);\n\n  return SideMenu;\n}(Component);\n\nexport { SideMenu as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'stretch',\n    backgroundColor: colors.bgMain\n  },\n  demoScreen: {\n    backgroundColor: colors.bgMainRed\n  },\n  header: {\n    height: 60,\n    paddingLeft: 20,\n    flexDirection: 'row',\n    backgroundColor: 'red',\n    alignItems: 'center',\n    zIndex: 1001\n  },\n  body: {\n    flex: 1,\n    zIndex: 1000,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#000000'\n  },\n  menuIcon: {\n    width: 30,\n    height: 30\n  },\n  headerTitle: {\n    marginLeft: 30,\n    color: 'white',\n    fontSize: 20\n  },\n  content: {\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/menu/screens/drawers/PushyHorizontalMenu.js"],"names":["React","Component","Interactable","Icon","Menu","DemoScreen","colors","Screen","Dimensions","get","SideMenuWidth","RemainingWidth","width","SideMenu","props","onMenuPress","menuOpened","state","refs","snapTo","index","deltaX","Animated","Value","styles","container","flex","x","damping","right","onStopInteraction","bind","demoScreen","navigation","event","check","nativeEvent","setState","preState","StyleSheet","create","alignItems","backgroundColor","bgMain","bgMainRed","header","height","paddingLeft","flexDirection","zIndex","body","justifyContent","menuIcon","headerTitle","marginLeft","color","fontSize","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, View, TouchableOpacity, Image, Text, Button, Dimensions, Animated } from 'react-native'\nimport Interactable from 'react-native-interactable'\nimport Icon                     from 'react-native-vector-icons/FontAwesome'\nimport Menu                     from './../../components/Menu'\nimport DemoScreen               from './../DemoScreen'\nimport colors                   from './../../resources/styles/colors'\n\nconst Screen = Dimensions.get('window')\nconst SideMenuWidth = 300\nconst RemainingWidth = Screen.width - SideMenuWidth\n\nexport default class SideMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            deltaX: new Animated.Value(-SideMenuWidth),\n            menuOpened: false\n        }\n        this.deltaX = new Animated.Value(0)\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Menu />\n                <Interactable.View\n                    style={{ flex: 1}}\n                    ref='menuInstance'\n                    horizontalOnly={true}\n                    snapPoints={[{x: 0, damping: 0.6}, {x: SideMenuWidth, damping: 0.6}] }\n                    boundaries={{right: SideMenuWidth}}\n                    initialPosition={{x: 0}}\n                    animatedValueX={this.deltaX}\n                    onSnap={ this.onStopInteraction.bind(this) }\n                >\n                    <DemoScreen style={ styles.demoScreen } navigation={this.props.navigation} onMenuPress={ this.onMenuPress } />\n                </Interactable.View>\n            </View>\n        )\n    }\n\n    onStopInteraction(event, check) {\n        let menuOpened = true\n        if(event.nativeEvent.index == 0) {\n            menuOpened = false\n        }\n        this.setState((preState, props) => {\n            return { menuOpened }\n        })\n    }\n\n    onMenuPress = () => {\n        const menuOpened = !this.state.menuOpened\n        if(menuOpened) {\n            this.refs['menuInstance'].snapTo({index: 1})\n        } else {\n            this.refs['menuInstance'].snapTo({index: 0})\n        }\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'stretch',\n        backgroundColor: colors.bgMain,\n    },\n    demoScreen: {\n        backgroundColor: colors.bgMainRed\n    },\n\n    header: {\n        height: 60,\n        paddingLeft: 20,\n        flexDirection: 'row',\n        backgroundColor: 'red',\n        alignItems: 'center',\n        zIndex: 1001\n    },\n    body: {\n        flex: 1,\n        zIndex: 1000,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#000000'\n    },\n    menuIcon: {\n        width: 30,\n        height: 30\n    },\n    headerTitle: {\n        marginLeft: 30,\n        color: 'white',\n        fontSize: 20\n    },\n    content: {\n        fontSize: 18\n    }\n})\n"]},"metadata":{},"sourceType":"module"}
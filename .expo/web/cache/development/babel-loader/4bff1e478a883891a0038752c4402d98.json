{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/MessagesScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Background from \"./Background\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Navbar from \"./Navbar\";\nimport TextInput from \"./TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase/app';\nimport { storage, store, authenticate } from \"../App.js\";\nexport default function ChatScreen(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      matches = _useState6[0],\n      setMatches = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      conversation = _useState8[0],\n      setConversation = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedId = _useState10[0],\n      setSelectedId = _useState10[1];\n\n  var window = useWindowDimensions();\n  var msgStyle = {\n    maxHeight: window.height - 400,\n    overflow: 'scroll',\n    minHeight: 200\n  };\n  useEffect(function () {\n    store.collection('users').doc(props.route.params.user.email).get().then(function (doc) {\n      setMatches(doc.data().matches);\n    });\n  }, []);\n\n  function sendMessage(_x) {\n    return _sendMessage.apply(this, arguments);\n  }\n\n  function _sendMessage() {\n    _sendMessage = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(e) {\n      var uid, avatar;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              uid = authenticate.currentUser.uid;\n              avatar = authenticate.currentUser.photoURL;\n\n              if (!(message.length > 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return store.collection('messages').doc(selectedId).set({\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              });\n\n            case 6:\n              _context.next = 8;\n              return store.collection('messages').doc(selectedId).collection('convo').add({\n                text: message,\n                uid: uid,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              });\n\n            case 8:\n              setMessage('');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sendMessage.apply(this, arguments);\n  }\n\n  function chooseConvo(x) {\n    setSelectedId(x.conversation);\n    store.collection('messages').doc(selectedId).collection('convo').orderBy('createdAt').limit(50).onSnapshot(function (snapshot) {\n      setMessages(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n    });\n  }\n\n  var Item = function Item(_ref) {\n    var item = _ref.item,\n        onPress = _ref.onPress,\n        backgroundColor = _ref.backgroundColor,\n        textColor = _ref.textColor;\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      style: [styles.item, backgroundColor],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: [styles.title, textColor],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, item.name));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var backgroundColor = item.conversation === selectedId ? \"blue\" : \"white\";\n    var color = item.conversation === selectedId ? 'white' : 'black';\n    return React.createElement(Item, {\n      item: item,\n      style: {\n        width: \"100%\"\n      },\n      onPress: function onPress() {\n        return chooseConvo(item.conversation);\n      },\n      backgroundColor: {\n        backgroundColor: backgroundColor\n      },\n      textColor: {\n        color: color\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      borderWidth: 1,\n      borderColor: '#e7e6e7',\n      marginTop: 80,\n      marginLeft: 30,\n      marginRight: 30\n    },\n    contacts: {\n      flex: 2,\n      backgroundColor: 'white',\n      borderRightWidth: 1,\n      borderRightColor: '#e7e6e7'\n    },\n    messagesBox: {\n      flex: 4,\n      marginTop: 20\n    },\n    item: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderBottomColor: '#e7e6e7',\n      marginHorizontal: 8\n    },\n    msge: {\n      flexDirection: \"row\",\n      color: 'white'\n    },\n    message: {\n      alignSelf: \"flex-start\",\n      margin: 10,\n      borderRadius: 20,\n      borderWidth: 10,\n      borderColor: \"blue\",\n      color: 'white',\n      backgroundColor: 'blue'\n    },\n    sendMessage: {\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: '#e7e6e7'\n    }\n  });\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  }, React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.contacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: matches,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.name;\n    },\n    extraData: selectedId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.messagesBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: msgStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, messages.map(function (_ref3) {\n    var id = _ref3.id,\n        text = _ref3.text,\n        photoURL = _ref3.photoURL,\n        uid = _ref3.uid;\n    return React.createElement(View, {\n      key: id,\n      style: styles.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      src: photoURL,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      style: styles.msge,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }, text));\n  })), React.createElement(View, {\n    style: styles.sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      width: '78%',\n      fontSize: 15,\n      marginLeft: 15,\n      outline: 'none'\n    },\n    placeholder: \"Message...\",\n    value: message,\n    onChangeText: function onChangeText(e) {\n      return setMessage(e);\n    },\n    onSubmitEditing: function onSubmitEditing(event) {\n      return sendMessage(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/MessagesScreen.js"],"names":["React","useState","useEffect","useCallback","Background","MaterialCommunityIcons","Navbar","TextInput","firebase","storage","store","authenticate","ChatScreen","props","message","setMessage","messages","setMessages","matches","setMatches","conversation","setConversation","selectedId","setSelectedId","window","useWindowDimensions","msgStyle","maxHeight","height","overflow","minHeight","collection","doc","route","params","user","email","get","then","data","sendMessage","e","preventDefault","uid","currentUser","avatar","photoURL","length","set","createdAt","firestore","FieldValue","serverTimestamp","add","text","chooseConvo","x","orderBy","limit","onSnapshot","snapshot","docs","map","Item","item","onPress","backgroundColor","textColor","styles","title","name","renderItem","color","width","StyleSheet","create","container","flex","flexDirection","borderWidth","borderColor","marginTop","marginLeft","marginRight","contacts","borderRightWidth","borderRightColor","messagesBox","padding","borderBottomWidth","borderBottomColor","marginHorizontal","msge","alignSelf","margin","borderRadius","borderTopWidth","borderTopColor","id","fontSize","outline","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {View, ScrollView, Text, Button, StyleSheet, FlatList, useWindowDimensions, Platform} from 'react-native'\nimport Background from './Background'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Navbar from './Navbar'\nimport TextInput from './TextInput'\nimport { TouchableOpacity, Image } from 'react-native';\n\nimport firebase from 'firebase/app';\n\nimport { storage, store, authenticate } from \"../App.js\";\n\nexport default function ChatScreen(props) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([])\n  const [matches, setMatches] = useState([])\n  const [conversation, setConversation] = useState([])\n  const [selectedId, setSelectedId] = useState(\"\");\n\n  const window = useWindowDimensions();\n  const msgStyle = { maxHeight: window.height-400, overflow: 'scroll', minHeight: 200}\n  \n\n  useEffect(() => {\n      store.collection('users').doc(props.route.params.user.email).get().then((doc) => {\n          setMatches(doc.data().matches)\n      })\n\n  }, [])\n\n   async function sendMessage(e) {\n      e.preventDefault()\n      const uid = authenticate.currentUser.uid\n      const avatar = authenticate.currentUser.photoURL\n\n      if (message.length > 0){\n        await store.collection('messages').doc(selectedId).set({\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        await store.collection('messages').doc(selectedId).collection('convo').add({\n            text: message,\n            uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n      }\n      setMessage('')\n  }\n\n  function chooseConvo(x){\n\n    setSelectedId(x.conversation)\n\n    store.collection('messages').doc(selectedId).collection('convo').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()))\n    })\n  }\n\n  const Item = ({ item, onPress, backgroundColor, textColor }) => (\n    <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\n      <Text style={[styles.title, textColor]}>{item.name}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderItem = ({ item }) => {\n    const backgroundColor = item.conversation === selectedId ? \"blue\" : \"white\";\n    const color = item.conversation === selectedId ? 'white' : 'black';\n\n    return (\n      <Item\n        item={item}\n        style={{width: \"100%\"}}\n        onPress={() => chooseConvo(item.conversation)}\n        backgroundColor={{ backgroundColor }}\n        textColor={{ color }}\n      />\n    );\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      borderWidth: 1,\n      borderColor: '#e7e6e7',\n      marginTop: 80,\n      marginLeft: 30,\n      marginRight: 30,\n    },\n    contacts: {\n      flex: 2,\n      backgroundColor: 'white',\n      borderRightWidth: 1,\n      borderRightColor: '#e7e6e7',\n    },\n    messagesBox: {\n      flex: 4,\n      marginTop: 20,\n    },\n    item: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderBottomColor: '#e7e6e7',\n      marginHorizontal: 8,\n    },\n    msge: {\n      flexDirection: \"row\",\n      color: 'white',\n    },\n    message: {\n      alignSelf: \"flex-start\",\n      margin: 10,\n      borderRadius: 20,\n      borderWidth: 10,\n      borderColor: \"blue\",\n      color: 'white',\n      backgroundColor: 'blue',\n    },\n    sendMessage: {\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: '#e7e6e7',\n    }\n  });\n\n  return (\n    <Background>\n     <ScrollView>\n      <Navbar />\n      <View style={styles.container}>\n        <View style={styles.contacts}>\n          <FlatList\n            data={matches}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.name}\n            extraData={selectedId}\n          /> \n        </View>\n        <View style={styles.messagesBox}>\n          <View style={msgStyle}>\n              {messages.map(({ id, text, photoURL, uid }) => (\n                  <View key={id} style={styles.message}>\n                      <Image src={photoURL} alt=\"\" />\n                      <Text style={styles.msge}>{text}</Text>\n                  </View>\n              ))}\n          </View>\n          <View style={styles.sendMessage}>\n            <TextInput \n               style={{ width: '78%', fontSize: 15, marginLeft: 15, outline: 'none' }}\n               placeholder='Message...'\n               value={message}\n               onChangeText={e => setMessage(e)} \n               onSubmitEditing={(event) => sendMessage(event)}\n            />\n        </View>\n       </View>\n      </View>\n      </ScrollView>\n    </Background>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}
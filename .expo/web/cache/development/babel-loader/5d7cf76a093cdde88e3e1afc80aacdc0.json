{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rando/Desktop/Impressive/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Button from \"./Button\";\nimport Logo from \"./Logo\";\nimport TextInput from \"./TextInput\";\nimport Navbar from \"./Navbar\";\nimport BackButton from \"./BackButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { emailValidator } from \"./helpers/emailValidator\";\nimport { passwordValidator } from \"./helpers/passwordValidator\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nexport default function LoginScreen(props) {\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    console.log(email, password);\n    firebase.auth().signInWithEmailAndPassword(email.value, password.value).then(function (userCredential) {\n      var user = userCredential.user;\n      console.log(\"logging in\", user);\n      props.route.params.login(user);\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed,\n    style: styles.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'column',\n    marginTop: 4,\n    alignItems: 'center'\n  },\n  forgot: {\n    fontSize: 13,\n    color: \"red\"\n  },\n  link: {\n    fontWeight: 'bold'\n  },\n  form: {\n    alignItems: 'center'\n  },\n  default: {\n    backgroundColor: 'black'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/rando/Desktop/Impressive/screens/LoginScreen.js"],"names":["React","useState","Text","Button","Logo","TextInput","Navbar","BackButton","useNavigation","emailValidator","passwordValidator","firebase","LoginScreen","props","value","error","email","setEmail","password","setPassword","navigation","onLoginPressed","emailError","passwordError","console","log","auth","signInWithEmailAndPassword","then","userCredential","user","route","params","login","catch","errorCode","code","errorMessage","message","styles","container","goBack","form","colors","primary","underlineColor","text","forgotPassword","navigate","forgot","row","default","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","fontWeight","backgroundColor","flex"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,kBAA0BZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgChB,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGZ,aAAa,EAAhC;;AAEA,MAAMa,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,UAAU,GAAGb,cAAc,CAACO,KAAK,CAACF,KAAP,CAAjC;AACA,QAAMS,aAAa,GAAGb,iBAAiB,CAACQ,QAAQ,CAACJ,KAAV,CAAvC;;AACA,QAAIQ,UAAU,IAAIC,aAAlB,EAAiC;AAC/BN,MAAAA,QAAQ,iCAAMD,KAAN;AAAaD,QAAAA,KAAK,EAAEO;AAApB,SAAR;AACAH,MAAAA,WAAW,iCAAMD,QAAN;AAAgBH,QAAAA,KAAK,EAAEQ;AAAvB,SAAX;AACA;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAmBE,QAAnB;AACAP,IAAAA,QAAQ,CAACe,IAAT,GAAgBC,0BAAhB,CAA2CX,KAAK,CAACF,KAAjD,EAAwDI,QAAQ,CAACJ,KAAjE,EACGc,IADH,CACQ,UAACC,cAAD,EAAoB;AAExB,UAAIC,IAAI,GAAGD,cAAc,CAACC,IAA1B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,IAA1B;AACAjB,MAAAA,KAAK,CAACkB,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBH,IAAzB;AAED,KAPH,EAQGI,KARH,CAQS,UAACnB,KAAD,EAAW;AAChB,UAAIoB,SAAS,GAAGpB,KAAK,CAACqB,IAAtB;AACA,UAAIC,YAAY,GAAGtB,KAAK,CAACuB,OAAzB;AACD,KAXH;AAaD,GAvBD;;AAyBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEpB,UAAU,CAACqB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAErB,UAAU,CAACqB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAkBC,QAAAA,cAAc,EAAC;AAAjC;AAAV,KAHT;AAIE,IAAA,KAAK,EAAE7B,KAAK,CAACF,KAJf;AAKE,IAAA,YAAY,EAAE,sBAACgC,IAAD;AAAA,aAAU7B,QAAQ,CAAC;AAAEH,QAAAA,KAAK,EAAEgC,IAAT;AAAe/B,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAlB;AAAA,KALhB;AAME,IAAA,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KANjB;AAOE,IAAA,SAAS,EAAEC,KAAK,CAACD,KAPnB;AAQE,IAAA,cAAc,EAAC,MARjB;AASE,IAAA,gBAAgB,EAAC,OATnB;AAUE,IAAA,eAAe,EAAC,cAVlB;AAWE,IAAA,YAAY,EAAC,eAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAE;AAAE4B,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAkBC,QAAAA,cAAc,EAAC;AAAjC;AAAV,KAHT;AAIE,IAAA,KAAK,EAAE3B,QAAQ,CAACJ,KAJlB;AAKE,IAAA,YAAY,EAAE,sBAACgC,IAAD;AAAA,aAAU3B,WAAW,CAAC;AAAEL,QAAAA,KAAK,EAAEgC,IAAT;AAAe/B,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAArB;AAAA,KALhB;AAME,IAAA,KAAK,EAAE,CAAC,CAACG,QAAQ,CAACH,KANpB;AAOE,IAAA,SAAS,EAAEG,QAAQ,CAACH,KAPtB;AAQE,IAAA,eAAe,MARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAJF,EA6BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACQ,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAM3B,UAAU,CAAC4B,QAAX,CAAoB,qBAApB,CAAN;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF,CA7BF,EAmCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAE7B,cAAlC;AAAkD,IAAA,KAAK,EAAEkB,MAAM,CAACY,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJF,EAKE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM/B,UAAU,CAACgC,OAAX,CAAmB,gBAAnB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CALF,CAnCF,CADF;AA+CD;AAED,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,cAAc,EAAE;AACdS,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,QAFE;AAGdC,IAAAA,YAAY,EAAE;AAHA,GADe;AAM/BR,EAAAA,GAAG,EAAE;AACHS,IAAAA,aAAa,EAAE,QADZ;AAEHC,IAAAA,SAAS,EAAE,CAFR;AAGHH,IAAAA,UAAU,EAAE;AAHT,GAN0B;AAW/BR,EAAAA,MAAM,EAAE;AACNY,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAE;AAFD,GAXuB;AAe/BT,EAAAA,IAAI,EAAE;AACJU,IAAAA,UAAU,EAAE;AADR,GAfyB;AAkB/BrB,EAAAA,IAAI,EAAE;AACJe,IAAAA,UAAU,EAAE;AADR,GAlByB;AAqB/BN,EAAAA,OAAO,EAAE;AACPa,IAAAA,eAAe,EAAE;AADV,GArBsB;AAwB/BxB,EAAAA,SAAS,EAAE;AACPyB,IAAAA,IAAI,EAAE,CADC;AAEPD,IAAAA,eAAe,EAAE;AAFV;AAxBoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Button from './Button'\nimport Logo from './Logo'\nimport TextInput from './TextInput'\nimport Navbar from './Navbar'\nimport BackButton from './BackButton'\nimport { useNavigation } from '@react-navigation/native';\nimport { emailValidator } from './helpers/emailValidator'\nimport { passwordValidator } from './helpers/passwordValidator'\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport default function LoginScreen(props) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const navigation = useNavigation();\n\n  const onLoginPressed = () => {\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n\n    console.log(email, password)\n    firebase.auth().signInWithEmailAndPassword(email.value, password.value)\n      .then((userCredential) => {\n        // Signed in\n        var user = userCredential.user;\n        console.log(\"logging in\", user)\n        props.route.params.login(user)\n        // ...\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <Navbar />\n      <BackButton goBack={navigation.goBack} />\n      <Logo goBack={navigation.goBack}/>\n      <View style={styles.form}>\n        <TextInput\n          label=\"Email\"\n          returnKeyType=\"next\"\n          theme={{ colors: { primary: 'blue',underlineColor:'transparent',}}}\n          value={email.value}\n          onChangeText={(text) => setEmail({ value: text, error: '' })}\n          error={!!email.error}\n          errorText={email.error}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"email\"\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n        />\n        <TextInput\n          label=\"Password\"\n          returnKeyType=\"done\"\n          theme={{ colors: { primary: 'blue',underlineColor:'transparent',}}}\n          value={password.value}\n          onChangeText={(text) => setPassword({ value: text, error: '' })}\n          error={!!password.error}\n          errorText={password.error}\n          secureTextEntry\n        />\n      </View>\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}>\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.row}>\n        <Button mode=\"contained\" onPress={onLoginPressed} style={styles.default}>\n          Login\n        </Button>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'column',\n    marginTop: 4,\n    alignItems: 'center',\n  },\n  forgot: {\n    fontSize: 13,\n    color: \"red\",\n  },\n  link: {\n    fontWeight: 'bold',\n  },\n  form: {\n    alignItems: 'center',\n  },\n  default: {\n    backgroundColor: 'black',\n  },\n  container: {\n      flex: 1,\n      backgroundColor: 'white',\n    },\n})\n"]},"metadata":{},"sourceType":"module"}
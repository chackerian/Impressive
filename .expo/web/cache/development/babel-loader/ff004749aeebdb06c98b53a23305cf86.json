{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _AppleAuthenticationB, _AppleAuthenticationB2, _AppleAuthenticationB3, _ButtonComponents;\n\nvar _excluded = [\"onPress\", \"buttonStyle\", \"buttonType\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { AppleAuthenticationButtonStyle, AppleAuthenticationButtonType } from \"./AppleAuthentication.types\";\nimport { ExpoAppleAuthenticationButtonSignInWhite, ExpoAppleAuthenticationButtonSignInWhiteOutline, ExpoAppleAuthenticationButtonSignInBlack, ExpoAppleAuthenticationButtonContinueWhite, ExpoAppleAuthenticationButtonContinueWhiteOutline, ExpoAppleAuthenticationButtonContinueBlack, ExpoAppleAuthenticationButtonSignUpWhite, ExpoAppleAuthenticationButtonSignUpWhiteOutline, ExpoAppleAuthenticationButtonSignUpBlack } from \"./ExpoAppleAuthenticationButton\";\n\nvar AppleAuthenticationButton = function AppleAuthenticationButton(_ref) {\n  var onPress = _ref.onPress,\n      buttonStyle = _ref.buttonStyle,\n      buttonType = _ref.buttonType,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  if (!ExpoAppleAuthenticationButtonSignInWhite) {\n    if (__DEV__) {\n      console.warn(\"'AppleAuthenticationButton' is not available.\");\n    }\n\n    return null;\n  }\n\n  var AppleAuthenticationButtonComponent = selectButtonComponent(buttonType, buttonStyle);\n  return React.createElement(AppleAuthenticationButtonComponent, _objectSpread({\n    onButtonPress: onPress\n  }, restProps));\n};\n\nvar ButtonComponents = (_ButtonComponents = {}, _defineProperty(_ButtonComponents, AppleAuthenticationButtonType.SIGN_IN, (_AppleAuthenticationB = {}, _defineProperty(_AppleAuthenticationB, AppleAuthenticationButtonStyle.WHITE, ExpoAppleAuthenticationButtonSignInWhite), _defineProperty(_AppleAuthenticationB, AppleAuthenticationButtonStyle.WHITE_OUTLINE, ExpoAppleAuthenticationButtonSignInWhiteOutline), _defineProperty(_AppleAuthenticationB, AppleAuthenticationButtonStyle.BLACK, ExpoAppleAuthenticationButtonSignInBlack), _AppleAuthenticationB)), _defineProperty(_ButtonComponents, AppleAuthenticationButtonType.CONTINUE, (_AppleAuthenticationB2 = {}, _defineProperty(_AppleAuthenticationB2, AppleAuthenticationButtonStyle.WHITE, ExpoAppleAuthenticationButtonContinueWhite), _defineProperty(_AppleAuthenticationB2, AppleAuthenticationButtonStyle.WHITE_OUTLINE, ExpoAppleAuthenticationButtonContinueWhiteOutline), _defineProperty(_AppleAuthenticationB2, AppleAuthenticationButtonStyle.BLACK, ExpoAppleAuthenticationButtonContinueBlack), _AppleAuthenticationB2)), _defineProperty(_ButtonComponents, AppleAuthenticationButtonType.SIGN_UP, (_AppleAuthenticationB3 = {}, _defineProperty(_AppleAuthenticationB3, AppleAuthenticationButtonStyle.WHITE, ExpoAppleAuthenticationButtonSignUpWhite), _defineProperty(_AppleAuthenticationB3, AppleAuthenticationButtonStyle.WHITE_OUTLINE, ExpoAppleAuthenticationButtonSignUpWhiteOutline), _defineProperty(_AppleAuthenticationB3, AppleAuthenticationButtonStyle.BLACK, ExpoAppleAuthenticationButtonSignUpBlack), _AppleAuthenticationB3)), _ButtonComponents);\n\nvar selectButtonComponent = function selectButtonComponent(type, style) {\n  return ButtonComponents[type][style];\n};\n\nexport default AppleAuthenticationButton;","map":{"version":3,"sources":["../src/AppleAuthenticationButton.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAEE,8BAFF,EAGE,6BAHF;AAKA,SACE,wCADF,EAEE,+CAFF,EAGE,wCAHF,EAIE,0CAJF,EAKE,iDALF,EAME,0CANF,EAOE,wCAPF,EAQE,+CARF,EASE,wCATF;;AAoCA,IAAM,yBAAyB,GAA6C,SAAtE,yBAAsE,OAKvE;AAAA,MAJH,OAIG,QAJH,OAIG;AAAA,MAHH,WAGG,QAHH,WAGG;AAAA,MAFH,UAEG,QAFH,UAEG;AAAA,MADA,SACA;;AACH,MAAI,CAAC,wCAAL,EAA+C;AAC7C,QAAI,OAAJ,EAAa;AACX,MAAA,OAAO,CAAC,IAAR,CAAa,+CAAb;AACD;;AACD,WAAO,IAAP;AACD;;AAED,MAAM,kCAAkC,GAAG,qBAAqB,CAAC,UAAD,EAAa,WAAb,CAAhE;AAEA,SAAO,KAAA,CAAA,aAAA,CAAC,kCAAD;AAAoC,IAAA,aAAa,EAAE;AAAnD,KAAgE,SAAhE,EAAP;AACD,CAhBD;;AAkBA,IAAM,gBAAgB,+DACnB,6BAA6B,CAAC,OADX,sEAEjB,8BAA8B,CAAC,KAFd,EAEsB,wCAFtB,0CAGjB,8BAA8B,CAAC,aAHd,EAG8B,+CAH9B,0CAIjB,8BAA8B,CAAC,KAJd,EAIsB,wCAJtB,+DAMnB,6BAA6B,CAAC,QANX,wEAOjB,8BAA8B,CAAC,KAPd,EAOsB,0CAPtB,2CAQjB,8BAA8B,CAAC,aARd,EAShB,iDATgB,2CAUjB,8BAA8B,CAAC,KAVd,EAUsB,0CAVtB,gEAYnB,6BAA6B,CAAC,OAZX,wEAajB,8BAA8B,CAAC,KAbd,EAasB,wCAbtB,2CAcjB,8BAA8B,CAAC,aAdd,EAc8B,+CAd9B,2CAejB,8BAA8B,CAAC,KAfd,EAesB,wCAftB,+CAAtB;;AAmBA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAC5B,IAD4B,EAE5B,KAF4B;AAAA,SAGN,gBAAgB,CAAC,IAAD,CAAhB,CAAuB,KAAvB,CAHM;AAAA,CAA9B;;AAKA,eAAe,yBAAf","sourcesContent":["import React from 'react';\n\nimport {\n  AppleAuthenticationButtonProps,\n  AppleAuthenticationButtonStyle,\n  AppleAuthenticationButtonType,\n} from './AppleAuthentication.types';\nimport {\n  ExpoAppleAuthenticationButtonSignInWhite,\n  ExpoAppleAuthenticationButtonSignInWhiteOutline,\n  ExpoAppleAuthenticationButtonSignInBlack,\n  ExpoAppleAuthenticationButtonContinueWhite,\n  ExpoAppleAuthenticationButtonContinueWhiteOutline,\n  ExpoAppleAuthenticationButtonContinueBlack,\n  ExpoAppleAuthenticationButtonSignUpWhite,\n  ExpoAppleAuthenticationButtonSignUpWhiteOutline,\n  ExpoAppleAuthenticationButtonSignUpBlack,\n} from './ExpoAppleAuthenticationButton';\n\n// @needsAudit\n/**\n * This component displays the proprietary \"Sign In with Apple\" / \"Continue with Apple\" button on\n * your screen. The App Store Guidelines require you to use this component to start the\n * authentication process instead of a custom button. Limited customization of the button is\n * available via the provided properties.\n *\n * You should only attempt to render this if [`AppleAuthentication.isAvailableAsync()`](#isavailableasync)\n * resolves to `true`. This component will render nothing if it is not available, and you will get\n * a warning in development mode (`__DEV__ === true`).\n *\n * The properties of this component extend from `View`; however, you should not attempt to set\n * `backgroundColor` or `borderRadius` with the `style` property. This will not work and is against\n * the App Store Guidelines. Instead, you should use the `buttonStyle` property to choose one of the\n * predefined color styles and the `cornerRadius` property to change the border radius of the\n * button.\n *\n * Make sure to attach height and width via the style props as without these styles, the button will\n * not appear on the screen.\n *\n * @see [Apple\n * Documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\n * for more details.\n */\nconst AppleAuthenticationButton: React.FC<AppleAuthenticationButtonProps> = ({\n  onPress,\n  buttonStyle,\n  buttonType,\n  ...restProps\n}) => {\n  if (!ExpoAppleAuthenticationButtonSignInWhite) {\n    if (__DEV__) {\n      console.warn(\"'AppleAuthenticationButton' is not available.\");\n    }\n    return null;\n  }\n\n  const AppleAuthenticationButtonComponent = selectButtonComponent(buttonType, buttonStyle);\n\n  return <AppleAuthenticationButtonComponent onButtonPress={onPress} {...restProps} />;\n};\n\nconst ButtonComponents: { [type: number]: { [style: number]: React.ElementType } } = {\n  [AppleAuthenticationButtonType.SIGN_IN]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonSignInWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonSignInWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonSignInBlack,\n  },\n  [AppleAuthenticationButtonType.CONTINUE]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonContinueWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]:\n      ExpoAppleAuthenticationButtonContinueWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonContinueBlack,\n  },\n  [AppleAuthenticationButtonType.SIGN_UP]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonSignUpWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonSignUpWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonSignUpBlack,\n  },\n};\n\nconst selectButtonComponent = (\n  type: AppleAuthenticationButtonType,\n  style: AppleAuthenticationButtonStyle\n): React.ElementType => ButtonComponents[type][style];\n\nexport default AppleAuthenticationButton;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
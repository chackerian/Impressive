{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/MessagesScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Background from \"./Background\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Navbar from \"./Navbar\";\nimport TextInput from \"./TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase/app';\nimport { storage, store, authenticate } from \"../App.js\";\nvar convo = String(Math.floor(Math.random() * 1000000000000000));\nexport default function ChatScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useEffect(function () {\n    store.collection('messages').doc(convo).collection('convo').orderBy('createdAt').limit(50).onSnapshot(function (snapshot) {\n      setMessages(snapshot.docs.map(function (doc) {\n        return doc.data();\n      }));\n    });\n  }, []);\n\n  function sendMessage(e) {\n    var uid, avatar;\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            console.log(\"MESSAGE\");\n            uid = authenticate.currentUser.uid;\n            avatar = authenticate.currentUser.photoURL;\n\n            if (!(message.length > 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(store.collection('messages').doc(convo).set({\n              createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            }));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(store.collection('messages').doc(convo).collection('convo').add({\n              text: message,\n              avatar: avatar,\n              uid: uid,\n              createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            }));\n\n          case 9:\n            setMessage('');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var DATA = [{\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'Sarah Williams'\n  }, {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Sarah Williams'\n  }, {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Sarah Williams'\n  }];\n\n  var Item = function Item(_ref2) {\n    var title = _ref2.title;\n    return React.createElement(View, {\n      style: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, title));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(Item, {\n      title: item.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var StyleSheets = function () {\n    function StyleSheets() {\n      _classCallCheck(this, StyleSheets);\n    }\n\n    _createClass(StyleSheets, null, [{\n      key: \"create\",\n      value: function create(obj) {\n        var result = {};\n\n        for (var key in obj) {\n          result[key] = obj[key];\n        }\n\n        return result;\n      }\n    }]);\n\n    return StyleSheets;\n  }();\n\n  var styles = StyleSheets.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      border: '1px solid #e7e6e7',\n      marginTop: 80,\n      marginLeft: 30,\n      marginRight: 30\n    },\n    contacts: {\n      flex: 2,\n      backgroundColor: 'white',\n      borderRightWidth: 1,\n      borderRightColor: '#e7e6e7'\n    },\n    messagesBox: {\n      flex: 4,\n      marginTop: 20,\n      maxHeight: 301\n    },\n    item: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderBottomColor: '#e7e6e7',\n      marginHorizontal: 8\n    },\n    msge: {\n      display: 'block',\n      flexDirection: \"row !important\",\n      paddingTop: 12,\n      paddingBottom: 12,\n      paddingLeft: 12,\n      paddingRight: 12,\n      margin: 10,\n      borderRadius: 40,\n      borderWidth: 0,\n      borderColor: \"blue\",\n      color: 'white',\n      backgroundColor: 'blue'\n    },\n    message: {\n      alignSelf: \"flex-start\"\n    },\n    sendMessage: {\n      width: '100%'\n    }\n  });\n  var window = useWindowDimensions();\n  var msgStyle = {\n    maxHeight: window.height - 400,\n    overflow: 'scroll',\n    minHeight: 200\n  };\n  console.log(\"Platform\", Platform.OS);\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }, React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, Platform.OS == \"ios\" ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 32\n    }\n  }) : React.createElement(View, {\n    style: styles.contacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.messagesBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: msgStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, messages.map(function (_ref4) {\n    var id = _ref4.id,\n        text = _ref4.text,\n        photoURL = _ref4.photoURL,\n        uid = _ref4.uid;\n    return React.createElement(View, {\n      key: id,\n      style: styles.message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      src: photoURL,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      style: styles.msge,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, text));\n  })), React.createElement(View, {\n    style: styles.sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      width: '78%',\n      fontSize: 15,\n      marginLeft: 15\n    },\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    placeholder: \"Message...\",\n    value: message,\n    onChangeText: function onChangeText(e) {\n      return setMessage(e);\n    },\n    onSubmitEditing: function onSubmitEditing(event) {\n      return sendMessage(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/MessagesScreen.js"],"names":["React","useState","useEffect","useCallback","Background","MaterialCommunityIcons","Navbar","TextInput","firebase","storage","store","authenticate","convo","String","Math","floor","random","ChatScreen","navigation","message","setMessage","messages","setMessages","collection","doc","orderBy","limit","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","console","log","uid","currentUser","avatar","photoURL","length","set","createdAt","firestore","FieldValue","serverTimestamp","add","text","DATA","id","title","Item","styles","item","renderItem","StyleSheets","obj","result","key","create","container","flex","flexDirection","border","marginTop","marginLeft","marginRight","contacts","backgroundColor","borderRightWidth","borderRightColor","messagesBox","maxHeight","padding","borderBottomWidth","borderBottomColor","marginHorizontal","msge","display","paddingTop","paddingBottom","paddingLeft","paddingRight","margin","borderRadius","borderWidth","borderColor","color","alignSelf","width","window","useWindowDimensions","msgStyle","height","overflow","minHeight","Platform","OS","fontSize","colors","primary","underlineColor","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {View, ScrollView, Text, Button, StyleSheet, FlatList, useWindowDimensions, Platform} from 'react-native'\nimport Background from './Background'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Navbar from './Navbar'\nimport TextInput from './TextInput'\nimport { TouchableOpacity, Image } from 'react-native';\n\nimport firebase from 'firebase/app';\n\nimport { storage, store, authenticate } from \"../App.js\";\nconst convo = String(Math.floor(Math.random()*1000000000000000))\n\nexport default function ChatScreen({ navigation }) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([])\n  useEffect(() => {\n      store.collection('messages').doc(convo).collection('convo').orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n          setMessages(snapshot.docs.map(doc => doc.data()))\n      })\n  }, [])\n\n   async function sendMessage(e) {\n      e.preventDefault()\n      console.log(\"MESSAGE\")\n      const uid = authenticate.currentUser.uid\n      const avatar = authenticate.currentUser.photoURL\n\n      if (message.length > 0){\n        await store.collection('messages').doc(convo).set({\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        await store.collection('messages').doc(convo).collection('convo').add({\n            text: message,\n            avatar,\n            uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n      }\n      setMessage('')\n  }\n\n  const DATA = [\n  {\n    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n    title: 'Sarah Williams',\n  },\n  {\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n    title: 'Sarah Williams',\n  },\n  {\n    id: '58694a0f-3da1-471f-bd96-145571e29d72',\n    title: 'Sarah Williams',\n  },\n];\n\n  const Item = ({ title }) => (\n    <View style={styles.item}>\n      <Text style={styles.title}>{title}</Text>\n    </View>\n  );\n\n  const renderItem = ({ item }) => (\n    <Item title={item.title} />\n  );\n\n  class StyleSheets {\n    static create(obj) {\n      var result = {};\n      for (var key in obj) {\n        result[key] = obj[key]\n      }\n      return result;\n    }\n  }  \n\n  const styles = StyleSheets.create({\n    container: {\n      flex: 1,\n      flexDirection: \"row\",\n      border: '1px solid #e7e6e7',\n      marginTop: 80,\n      marginLeft: 30,\n      marginRight: 30,\n    },\n    contacts: {\n      flex: 2,\n      backgroundColor: 'white',\n      borderRightWidth: 1,\n      borderRightColor: '#e7e6e7',\n    },\n    messagesBox: {\n      flex: 4,\n      marginTop: 20,\n      maxHeight: 301,\n    },\n    item: {\n      padding: 20,\n      borderBottomWidth: 1,\n      borderBottomColor: '#e7e6e7',\n      marginHorizontal: 8,\n    },\n    msge: {\n      display: 'block',\n      flexDirection: \"row !important\",\n      paddingTop: 12,\n      paddingBottom: 12,\n      paddingLeft: 12,\n      paddingRight: 12,\n      margin: 10,\n      borderRadius: 40,\n      borderWidth: 0,\n      borderColor: \"blue\",\n      color: 'white',\n      backgroundColor: 'blue',\n    },\n    message: {\n      alignSelf: \"flex-start\",\n    },\n    sendMessage: {\n      width: '100%',\n    }\n  });\n\n  const window = useWindowDimensions();\n  const msgStyle = { maxHeight: window.height-400, overflow: 'scroll', minHeight: 200}\n  console.log(\"Platform\", Platform.OS)\n\n  return (\n    <Background>\n     <ScrollView>\n      <Navbar />\n      <View style={styles.container}>\n       {Platform.OS == \"ios\" ? <Text></Text> : (\n        <View style={styles.contacts}>\n          <FlatList\n            data={DATA}\n            renderItem={renderItem}\n          /> \n        </View>)}\n        <View style={styles.messagesBox}>\n          <View style={msgStyle}>\n              {messages.map(({ id, text, photoURL, uid }) => (\n                  <View key={id} style={styles.message}>\n                      <Image src={photoURL} alt=\"\" />\n                      <Text style={styles.msge}>{text}</Text>\n                  </View>\n              ))}\n          </View>\n          <View style={styles.sendMessage}>\n            <TextInput \n               style={{ width: '78%', fontSize: 15, marginLeft: 15 }}\n               theme={{ colors: { primary: 'blue', underlineColor:'transparent'}}}\n               placeholder='Message...'\n               value={message}\n               onChangeText={e => setMessage(e)} \n               onSubmitEditing={(event) => sendMessage(event)}\n            />\n        </View>\n       </View>\n      </View>\n      </ScrollView>\n    </Background>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/SwipeScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef, createRef, setState, ReactNode } from 'react';\nimport Background from \"./Background\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { Slider } from \"@miblanchard/react-native-slider\";\nimport NavSwipe from \"./NavSwipe\";\nimport CardStack, { Card } from \"./swipe\";\nimport { storage, store } from \"../App.js\";\nimport firebase from 'firebase/app';\nimport { useNavigation } from '@react-navigation/native';\nimport Drawer from 'react-native-drawer';\nimport Alerts from \"./Alerts.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart, faTimesCircle, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    margin: 16,\n    paddingBottom: 32\n  },\n  sliderContainer: {\n    paddingVertical: 16\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar DEFAULT_VALUE = 0;\n\nvar SliderContainer = function SliderContainer(props) {\n  var caption = props.caption,\n      sliderValue = props.sliderValue,\n      trackMarks = props.trackMarks;\n\n  var _useState = useState(sliderValue ? sliderValue : DEFAULT_VALUE),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var renderTrackMarkComponent;\n\n  var renderChildren = function renderChildren() {\n    return React.Children.map(props.children, function (child) {\n      if (!!child && child.type === Slider) {\n        return React.cloneElement(child, {\n          onValueChange: setValue,\n          value: value\n        });\n      }\n\n      return child;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Location (miles)\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, value)), renderChildren());\n};\n\nvar ControlPanel = function (_Component) {\n  _inherits(ControlPanel, _Component);\n\n  var _super = _createSuper(ControlPanel);\n\n  function ControlPanel() {\n    var _this2;\n\n    _classCallCheck(this, ControlPanel);\n\n    _this2 = _super.call(this);\n\n    _this2.toggleSwitch = function (value) {\n      _this2.setState({\n        switchValue: value\n      });\n    };\n\n    _this2.state = {\n      switchValue: \"false\"\n    };\n    return _this2;\n  }\n\n  _createClass(ControlPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \"Filters\"), React.createElement(View, {\n        contentContainerStyle: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, React.createElement(SliderContainer, {\n        sliderValue: [1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, React.createElement(Slider, {\n        maximumValue: 25,\n        minimumValue: 0,\n        step: 1,\n        minimumTrackTintColor: \"blue\",\n        thumbTintColor: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      })))), React.createElement(Button, {\n        onPress: function onPress() {\n          _this3.props.closeDrawer();\n        },\n        title: \"Close Drawer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ControlPanel;\n}(Component);\n\nexport default function SwipeScreen(props) {\n  var _this4 = this;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      images = _useState4[0],\n      setImages = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      swiper = _useState6[0],\n      setSwiper = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      drawer = _useState8[0],\n      setDrawer = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      shadowColor = _useState10[0],\n      setShadowColor = _useState10[1];\n\n  var _useState11 = useState(createRef()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      slide = _useState12[0],\n      setSlide = _useState12[1];\n\n  var navigation = useNavigation();\n  var alertRef = React.createRef();\n  var styles = StyleSheet.create({\n    image: {\n      opacity: 1,\n      height: 420\n    },\n    info: {\n      padding: 20,\n      color: 'white',\n      fontWeight: \"bold\",\n      backgroundColor: \"#313174\"\n    },\n    description: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'white',\n      marginLeft: 12\n    },\n    viewport: {\n      height: 250,\n      marginTop: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      alignItems: 'center'\n    },\n    button: {\n      padding: 30\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    buttonContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    content: {\n      flex: 5,\n      marginTop: 200,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    card: {\n      width: 320,\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowOpacity: 0.5\n    },\n    label: {\n      marginLeft: 12,\n      fontSize: 25,\n      color: 'white',\n      fontWeight: 'bold',\n      fontFamily: 'System',\n      backgroundColor: 'transparent'\n    },\n    topNav: {\n      backgroundColor: 'rgb(12,0,51)',\n      position: 'absolute',\n      height: '10%',\n      top: 0,\n      width: 100 + '%'\n    },\n    slider: {\n      paddingTop: 70,\n      paddingRight: 20,\n      alignItems: \"flex-end\"\n    },\n    text: {\n      color: 'rgb(255,255,255)',\n      alignSelf: 'center',\n      fontSize: 30\n    }\n  });\n\n  function cards() {\n    var user, userLikes, userDislikes, interacted, batches, snaps, x, snapshot, images;\n    return _regeneratorRuntime.async(function cards$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(store.collection(\"users\").doc(props.route.params.user.email).get());\n\n          case 2:\n            user = _context.sent;\n            userLikes = user.data().likes || [];\n            userDislikes = user.data().dislikes || [];\n            interacted = userLikes.concat(userDislikes);\n            batches = [];\n\n            while (interacted.length) {\n              batches.push(interacted.splice(0, 10));\n            }\n\n            snaps = [];\n            x = 0;\n\n          case 10:\n            if (!(x < batches.length)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(store.collection(\"users\").where(\"email\", \"not-in\", batches[x]).get());\n\n          case 13:\n            snapshot = _context.sent;\n            snaps.push(snapshot);\n\n          case 15:\n            x++;\n            _context.next = 10;\n            break;\n\n          case 18:\n            console.log(snaps);\n            images = [];\n            snapshot.docs.forEach(function (s) {\n              images.push(s.data());\n            });\n            setImages(images);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    cards();\n  }, []);\n\n  function addLike(email) {\n    var snapshot, data, alert;\n    return _regeneratorRuntime.async(function addLike$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            store.collection('users').doc(props.route.params.user.email).update({\n              likes: firebase.firestore.FieldValue.arrayUnion(email)\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(store.collection('users').doc(email).get());\n\n          case 3:\n            snapshot = _context2.sent;\n            data = snapshot.data();\n\n            if (Platform.OS == \"web\") {\n              console.log(\"SLIDE\");\n              alert = new Alerts().slide();\n              console.log(\"SLIDE\", alert);\n            } else {\n              Alert.alert(\"New Match\", \"\", [{\n                text: \"Cancel\",\n                onPress: function onPress() {\n                  return console.log(\"Cancel Pressed\");\n                },\n                style: \"cancel\"\n              }, {\n                text: \"Go to match\",\n                onPress: function onPress() {\n                  return navigation.navigate('Messages');\n                }\n              }]);\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var addDislike = function addDislike(email) {\n    store.collection('users').doc(props.route.params.user.email).update({\n      dislikes: firebase.firestore.FieldValue.arrayUnion(email)\n    });\n  };\n\n  var changeShadow = function changeShadow(a) {\n    setShadowColor('red');\n  };\n\n  var closeFilter = function closeFilter() {\n    drawer.close();\n  };\n\n  var openFilter = function openFilter() {\n    console.log(\"OPEN\");\n    drawer.open();\n  };\n\n  return React.createElement(Drawer, {\n    ref: function ref(_ref) {\n      return setDrawer(_ref);\n    },\n    content: React.createElement(ControlPanel, {\n      closeDrawer: closeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.body,\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, React.createElement(Alerts, {\n    ref: alertRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 6\n    }\n  }), React.createElement(View, {\n    style: styles.topNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.slider,\n    onPress: function onPress() {\n      openFilter();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faSlidersH,\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.viewport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 6\n    }\n  }, React.createElement(CardStack, {\n    style: styles.content,\n    ref: function ref(swiper) {\n      setSwiper(swiper);\n    },\n    onSwipeLeft: console.log(\"LEFT\"),\n    changeShadowColor: function changeShadowColor(color) {\n      changeShadow(color);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, images.map(function (i) {\n    var name = i.name.split(\" \")[0];\n    return React.createElement(Card, {\n      style: [styles.card, styles.card1],\n      key: i.name,\n      onSwipedRight: function onSwipedRight(event) {\n        return addLike(i.email);\n      },\n      onSwipedLeft: function onSwipedLeft(event) {\n        return addDislike(i.email);\n      },\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: i.picture\n      },\n      style: styles.image,\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }), React.createElement(View, {\n      style: styles.info,\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 14\n      }\n    }, name, \", \", i.age), React.createElement(Text, {\n      style: styles.description,\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 14\n      }\n    }, i.city, \", \", i.state)));\n  }))), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: function onPress() {\n      swiper.swipeLeft();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faTimesCircle,\n    color: '#ff2400',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: function onPress() {\n      swiper.swipeRight();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faHeart,\n    color: '#02ff02',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/SwipeScreen.js"],"names":["React","Component","useState","useEffect","useRef","createRef","setState","ReactNode","Background","Slider","NavSwipe","CardStack","Card","storage","store","firebase","useNavigation","Drawer","Alerts","FontAwesomeIcon","faHeart","faTimesCircle","faSlidersH","SCREEN_HEIGHT","Dimensions","get","height","SCREEN_WIDTH","width","styles","StyleSheet","create","container","alignItems","justifyContent","margin","paddingBottom","sliderContainer","paddingVertical","titleContainer","DEFAULT_VALUE","SliderContainer","props","caption","sliderValue","trackMarks","value","setValue","renderTrackMarkComponent","renderChildren","Children","map","children","child","type","cloneElement","onValueChange","ControlPanel","toggleSwitch","switchValue","state","closeDrawer","SwipeScreen","images","setImages","swiper","setSwiper","drawer","setDrawer","shadowColor","setShadowColor","slide","setSlide","navigation","alertRef","image","opacity","info","padding","color","fontWeight","backgroundColor","description","fontSize","marginLeft","viewport","marginTop","marginRight","button","flex","flexDirection","buttonContainer","content","card","borderRadius","shadowOffset","shadowOpacity","label","fontFamily","topNav","position","top","slider","paddingTop","paddingRight","text","alignSelf","cards","collection","doc","route","params","user","email","userLikes","data","likes","userDislikes","dislikes","interacted","concat","batches","length","push","splice","snaps","x","where","snapshot","console","log","docs","forEach","s","addLike","update","firestore","FieldValue","arrayUnion","Platform","OS","alert","Alert","onPress","style","navigate","addDislike","changeShadow","a","closeFilter","close","openFilter","open","ref","body","i","name","split","card1","event","uri","picture","age","city","swipeLeft","swipeRight"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect, useRef, createRef, setState, ReactNode} from 'react'\nimport Background from './Background'\nimport {StyleSheet, SafeAreaView, ScrollView, StatusBar, Image, TextInput, Text, View, Platform, Dimensions, PanResponder, Animated, TouchableOpacity, Alert, Button, Switch } from 'react-native';\nimport { Slider } from \"@miblanchard/react-native-slider\";\nimport NavSwipe from './NavSwipe';\nimport CardStack, { Card } from './swipe';\nimport { storage, store } from \"../App.js\";\nimport firebase from 'firebase/app';\n// import './nobounce.js'\nimport { useNavigation } from '@react-navigation/native';\n\nimport Drawer from 'react-native-drawer';\nimport Alerts from './Alerts.js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart, faTimesCircle, faSlidersH } from '@fortawesome/free-solid-svg-icons';\n\nconst SCREEN_HEIGHT = Dimensions.get('window').height\nconst SCREEN_WIDTH = Dimensions.get('window').width\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'stretch',\n        justifyContent: 'flex-start',\n        margin: 16,\n        paddingBottom: 32,\n    },\n    sliderContainer: {\n        paddingVertical: 16,\n    },\n    titleContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nconst DEFAULT_VALUE = 0;\n\nconst SliderContainer = (props: {\n    caption: string;\n    children: React.ReactElement;\n    sliderValue?: Array<number>;\n}) => {\n    const {caption, sliderValue, trackMarks} = props;\n    const [value, setValue] = useState(\n        sliderValue ? sliderValue : DEFAULT_VALUE,\n    );\n    let renderTrackMarkComponent: ReactNode;\n\n    const renderChildren = () => {\n        return React.Children.map(\n            props.children,\n            (child: React.ReactElement) => {\n                if (!!child && child.type === Slider) {\n                    return React.cloneElement(child, {\n                        onValueChange: setValue,\n                        value,\n                    });\n                }\n\n                return child;\n            },\n        );\n    };\n\n    return (\n        <View style={styles.sliderContainer}>\n            <View style={styles.titleContainer}>\n                <Text>Location (miles)</Text>\n                <Text>{value}</Text>\n            </View>\n            {renderChildren()}\n        </View>\n    );\n};\n\nclass ControlPanel extends Component {\n\n  constructor() {\n    super();\n    this.state = {switchValue: \"false\"};\n  }\n\n  toggleSwitch = value => {\n    this.setState({ switchValue: value });\n  };\n\n  render() {\n    return (\n      <View>\n        <SafeAreaView style={styles.container}>\n          <Text style={styles.titleContainer}>\n            Filters\n          </Text>\n          <View contentContainerStyle={styles.container}>\n              <SliderContainer\n                  sliderValue={[1]}>\n                  <Slider maximumValue={25} minimumValue={0} step={1} minimumTrackTintColor=\"blue\" thumbTintColor=\"blue\" />\n              </SliderContainer>\n          </View>\n        </SafeAreaView>\n\n        <Button\n          onPress={() => {\n            this.props.closeDrawer();\n          }}\n          title=\"Close Drawer\"\n        />\n      </View>\n    )\n  }\n}\n\nexport default function SwipeScreen(props) {\n\n  const [images, setImages] = useState([]);\n  const [swiper, setSwiper] = useState();\n  const [drawer, setDrawer] = useState();\n  const [shadowColor, setShadowColor] = useState(\"\");\n  const [slide, setSlide] = useState(createRef());\n  const navigation = useNavigation();\n  const alertRef = React.createRef();\n\n  const styles = StyleSheet.create({\n    image: {\n      opacity: 1,\n      height: 420,\n    },\n    info: {\n      padding: 20,\n      color: 'white',\n      fontWeight: \"bold\",\n      backgroundColor: \"#313174\",\n    },\n    description: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'white',\n      marginLeft: 12,\n    },\n    viewport: {\n      height: 250,\n      marginTop: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      alignItems: 'center',\n    },\n    button: {\n      padding: 30,\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n    },\n    buttonContainer:{\n      flexDirection:'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    content:{\n      flex: 5,\n      marginTop: 200,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    card:{\n      width: 320,\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowOpacity:0.5,\n    },\n    label: {\n      marginLeft: 12,\n      fontSize: 25,\n      color: 'white',\n      fontWeight: 'bold',\n      fontFamily: 'System',\n      backgroundColor: 'transparent',\n    },\n    topNav: {\n        backgroundColor:'rgb(12,0,51)',\n        position:'absolute',\n        height: '10%',\n        top:0,\n        width:100+'%'\n    },\n    slider: {\n        paddingTop: 70,\n        paddingRight: 20,\n        alignItems: \"flex-end\",\n    },\n    text:{\n        color:'rgb(255,255,255)',\n        alignSelf: 'center',\n        fontSize: 30\n    },\n  })\n\n  async function cards(){\n    const user = await store.collection(\"users\").doc(props.route.params.user.email).get()\n    const userLikes = user.data().likes || []\n    const userDislikes = user.data().dislikes || []\n\n    var interacted = userLikes.concat(userDislikes)\n    var batches = [];\n\n    while(interacted.length) {\n      batches.push(interacted.splice(0, 10));\n    }\n\n    var snaps = []\n    for(var x=0; x<batches.length; x++){\n      var snapshot = await store.collection(\"users\").where(\"email\", \"not-in\", batches[x]).get()\n      snaps.push(snapshot);\n    }\n\n    console.log(snaps)\n\n    const images = [];\n\n    snapshot.docs.forEach((s) => {\n      images.push(s.data());\n    });\n    setImages(images);\n\n  }\n  \n  useEffect(() => {\n    cards()\n  }, [])\n\n  async function addLike(email){\n\n    store.collection('users').doc(props.route.params.user.email).update({\n      likes: firebase.firestore.FieldValue.arrayUnion(email)\n    })\n\n    const snapshot = await store.collection('users').doc(email).get();\n    const data = snapshot.data();\n\n    if (Platform.OS == \"web\") {\n      console.log(\"SLIDE\")\n      var alert = new Alerts().slide()\n      console.log(\"SLIDE\", alert)\n    } else {\n\n      Alert.alert(\n        \"New Match\",\n        \"\",\n        [\n          {\n            text: \"Cancel\",\n            onPress: () => console.log(\"Cancel Pressed\"),\n            style: \"cancel\"\n          },\n          { text: \"Go to match\", onPress: () => navigation.navigate('Messages') }\n        ]\n      );\n\n    }\n\n     // Create convo\n\n  }\n\n  var addDislike = function(email){\n    store.collection('users').doc(props.route.params.user.email).update({\n      dislikes: firebase.firestore.FieldValue.arrayUnion(email)\n    })\n  }\n\n  var changeShadow = function(a){\n    setShadowColor('red')\n  }\n\n  const closeFilter = () =>  {\n    drawer.close()\n  };\n\n  const openFilter = () =>  {\n    console.log(\"OPEN\")\n    drawer.open()\n  };\n\n  return (\n    <Drawer\n      ref={(ref) => setDrawer(ref)}\n      content={<ControlPanel closeDrawer={closeFilter} />}\n    >\n    <View style={styles.body} id=\"main\">\n     <Alerts ref={alertRef}/>\n      <View style={styles.topNav}>\n          <StatusBar barStyle=\"light-content\"/>\n          <Text style={styles.text}></Text>\n          <TouchableOpacity style={styles.slider} onPress={() => { openFilter() }}>\n              <FontAwesomeIcon icon={ faSlidersH } size={ 30 } />\n          </TouchableOpacity> \n      </View>\n     <View style={styles.viewport}>\n      <CardStack \n        style={styles.content}\n        ref={swiper => { setSwiper(swiper) }}\n        onSwipeLeft={console.log(\"LEFT\")}\n        changeShadowColor={color => { changeShadow(color)} }\n      >\n       {images.map((i) => {\n        var name = i.name.split(\" \")[0]\n        return (\n          <Card style={[styles.card, styles.card1]} key={i.name} \n            onSwipedRight={(event) => addLike(i.email)} \n            onSwipedLeft={(event) => addDislike(i.email)}\n          >\n            <Image source={{uri: i.picture}} style={styles.image} />\n            <View style={styles.info}> \n             <Text style={styles.label}>{name}, {i.age}</Text>\n             <Text style={styles.description}>{i.city}, {i.state}</Text>\n            </View>\n          </Card>\n          )\n        })}\n      </CardStack>\n     </View>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={[styles.button]} onPress={() => {\n          swiper.swipeLeft();\n        }}>\n          <FontAwesomeIcon icon={ faTimesCircle } color={ '#ff2400' } size={ 40 } />\n        </TouchableOpacity>\n        <TouchableOpacity style={[styles.button]} onPress={() => {\n          swiper.swipeRight();\n        }}>\n          <FontAwesomeIcon icon={ faHeart } color={ '#02ff02' } size={ 40 } />\n        </TouchableOpacity>\n      </View>\n    </View>\n  </Drawer>\n  )\n}"]},"metadata":{},"sourceType":"module"}
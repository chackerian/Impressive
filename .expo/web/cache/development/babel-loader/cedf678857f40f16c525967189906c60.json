{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nimport _interopRequireDefault from \"@babel/runtime/helpers/interopRequireDefault\";\nexports.default = registerRootComponent;\n\nrequire(\"expo/build/Expo.fx\");\n\nvar _AppRegistry = require(\"react-native-web/dist/exports/AppRegistry\");\n\nvar _AppRegistry2 = _interopRequireDefault(_AppRegistry);\n\nvar _Platform = require(\"react-native-web/dist/exports/Platform\");\n\nvar _Platform2 = _interopRequireDefault(_Platform);\n\nvar _withExpoRoot = require(\"./withExpoRoot\");\n\nvar _withExpoRoot2 = _interopRequireDefault(_withExpoRoot);\n\nfunction registerRootComponent(component) {\n  _AppRegistry2.default.registerComponent('main', function () {\n    return (0, _withExpoRoot2.default)(component);\n  });\n\n  if (_Platform2.default.OS === 'web') {\n    var _document$getElementB;\n\n    var rootTag = (_document$getElementB = document.getElementById('root')) != null ? _document$getElementB : document.getElementById('main');\n\n    _AppRegistry2.default.runApplication('main', {\n      rootTag: rootTag\n    });\n  }\n}","map":{"version":3,"sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":";;;;;;kBAOwB,qB;;AAPxB;;;;;;;;;;AAIA;;;;AAGc,SAAU,qBAAV,CACZ,SADY,EACqB;AAEjC,wBAAY,iBAAZ,CAA8B,MAA9B,EAAsC;AAAA,WAAM,4BAAa,SAAb,CAAN;AAAA,GAAtC;;AACA,MAAI,mBAAS,EAAT,KAAgB,KAApB,EAA2B;AAAA;;AACzB,QAAM,OAAO,4BAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAH,oCAAsC,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAnD;;AACA,0BAAY,cAAZ,CAA2B,MAA3B,EAAmC;AAAE,MAAA,OAAO,EAAP;AAAF,KAAnC;AACD;AACF","sourcesContent":["import 'expo/build/Expo.fx';\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\nimport withExpoRoot from './withExpoRoot';\nimport { InitialProps } from './withExpoRoot.types';\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  AppRegistry.registerComponent('main', () => withExpoRoot(component));\n  if (Platform.OS === 'web') {\n    const rootTag = document.getElementById('root') ?? document.getElementById('main');\n    AppRegistry.runApplication('main', { rootTag });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
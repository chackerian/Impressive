{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanchackerian/Desktop/Impressive/screens/RegisterScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"./Background\";\nimport Logo from \"./Logo\";\nimport Button from \"./Button\";\nimport TextInput from \"./TextInput\";\nimport Navbar from \"./Navbar\";\nimport BackButton from \"./BackButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { emailValidator } from \"./helpers/emailValidator\";\nimport { passwordValidator } from \"./helpers/passwordValidator\";\nimport { nameValidator } from \"./helpers/nameValidator\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { authenticate } from \"../App.js\";\nexport default function RegisterScreen(props) {\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var navigation = useNavigation();\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      console.log(\"ERROR\", emailError, passwordError, nameError);\n    }\n\n    var user = {\n      name: name.value,\n      email: email.value\n    };\n    console.log(\"register\", email.value, password.value, name.value);\n    props.route.params.login(user);\n\n    var createUser = function () {\n      var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(email, password) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return firebase.auth().createUserWithEmailAndPassword(email, password);\n\n              case 3:\n                response = _context.sent;\n\n                if (response) {\n                  console.log(\"RESPONSE\");\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0.message);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function createUser(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    createUser(email.value, password.value);\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Create Account\"), React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: name.value,\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    theme: {\n      colors: {\n        primary: 'blue',\n        underlineColor: 'transparent'\n      }\n    },\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onSignUpPressed,\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  form: {\n    alignItems: 'center'\n  },\n  signup: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  link: {\n    fontWeight: 'bold',\n    color: \"blue\"\n  }\n});","map":{"version":3,"sources":["/Users/nathanchackerian/Desktop/Impressive/screens/RegisterScreen.js"],"names":["React","useState","Text","Background","Logo","Button","TextInput","Navbar","BackButton","useNavigation","emailValidator","passwordValidator","nameValidator","firebase","authenticate","RegisterScreen","props","value","error","name","setName","email","setEmail","password","setPassword","navigation","onSignUpPressed","nameError","emailError","passwordError","console","log","user","route","params","login","createUser","auth","createUserWithEmailAndPassword","response","message","goBack","styles","form","signup","colors","primary","underlineColor","text","marginTop","row","replace","link","StyleSheet","create","flexDirection","alignItems","color","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from './Background'\nimport Logo from './Logo'\nimport Button from './Button'\nimport TextInput from './TextInput'\nimport Navbar from './Navbar'\nimport BackButton from './BackButton'\nimport { useNavigation } from '@react-navigation/native';\nimport { emailValidator } from './helpers/emailValidator'\nimport { passwordValidator } from './helpers/passwordValidator'\nimport { nameValidator } from './helpers/nameValidator'\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { authenticate } from \"../App.js\";\n\nexport default function RegisterScreen(props) {\n  const [name, setName] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const navigation = useNavigation();\n\n  const onSignUpPressed = () => {\n    const nameError = nameValidator(name.value)\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError })\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      console.log(\"ERROR\", emailError, passwordError, nameError)\n    }\n      var user = {\n        name: name.value,\n        email: email.value\n      }\n      console.log(\"register\", email.value, password.value, name.value)\n      props.route.params.login(user)\n\n    // Register\n    const createUser = async (email, password) => {\n      try {\n       let response = await firebase.auth().createUserWithEmailAndPassword(email, password);\n        if(response){\n          console.log(\"RESPONSE\")\n        }\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n    createUser(email.value, password.value)\n  }\n\n  return (\n    <Background>\n      <Navbar />\n      <BackButton goBack={navigation.goBack} />\n      <Logo goBack={navigation.goBack}/>\n      <View style={styles.form}>\n        <Text style={styles.signup}>Create Account</Text>\n        <TextInput\n          label=\"Name\"\n          returnKeyType=\"next\"\n          value={name.value}\n          theme={{ colors: { primary: 'blue',underlineColor:'transparent',}}}\n          onChangeText={(text) => setName({ value: text, error: '' })}\n          error={!!name.error}\n          errorText={name.error}\n        />\n        <TextInput\n          label=\"Email\"\n          returnKeyType=\"next\"\n          theme={{ colors: { primary: 'blue',underlineColor:'transparent',}}}\n          value={email.value}\n          onChangeText={(text) => setEmail({ value: text, error: '' })}\n          error={!!email.error}\n          errorText={email.error}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"email\"\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n        />\n        <TextInput\n          label=\"Password\"\n          returnKeyType=\"done\"\n          theme={{ colors: { primary: 'blue',underlineColor:'transparent',}}}\n          value={password.value}\n          onChangeText={(text) => setPassword({ value: text, error: '' })}\n          error={!!password.error}\n          errorText={password.error}\n          secureTextEntry\n        />\n        <Button\n          mode=\"contained\"\n          onPress={onSignUpPressed}\n          style={{ marginTop: 24 }}\n        >\n          Sign Up\n        </Button>\n        <View style={styles.row}>\n          <Text>Already have an account? </Text>\n          <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n            <Text style={styles.link}>Login</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  form: {\n    alignItems: 'center',\n  },\n  signup: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  link: {\n    fontWeight: 'bold',\n    color: \"blue\",\n  },\n})\n"]},"metadata":{},"sourceType":"module"}
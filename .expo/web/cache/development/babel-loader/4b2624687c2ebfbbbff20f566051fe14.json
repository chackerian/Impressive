{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"onFocus\", \"onBlur\", \"onChangeText\", \"clearButtonMode\", \"InputComp\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/rando/Desktop/Impressive/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, { forwardRef, useMemo, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row'\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  },\n  description: {},\n  separator: {\n    height: 0.5,\n    backgroundColor: '#c8c7cc'\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5\n  },\n  powered: {}\n};\nexport var GooglePlacesAutocomplete = forwardRef(function (props, ref) {\n  var _results = [];\n  var _requests = [];\n\n  var hasNavigator = function hasNavigator() {\n    var _navigator;\n\n    if ((_navigator = navigator) != null && _navigator.geolocation) {\n      return true;\n    } else {\n      console.warn('If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR');\n      return false;\n    }\n  };\n\n  var buildRowsFromResults = function buildRowsFromResults(results) {\n    var res = [];\n\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = _toConsumableArray(props.predefinedPlaces.filter(function (place) {\n        return place == null ? void 0 : place.description.length;\n      }));\n\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true\n        });\n      }\n    }\n\n    res = res.map(function (place) {\n      return _objectSpread(_objectSpread({}, place), {}, {\n        isPredefinedPlace: true\n      });\n    });\n    return [].concat(_toConsumableArray(res), _toConsumableArray(results));\n  };\n\n  var getRequestUrl = function getRequestUrl(requestUrl) {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api'\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateText = _useState2[0],\n      setStateText = _useState2[1];\n\n  var _useState3 = useState(buildRowsFromResults([])),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataSource = _useState4[0],\n      setDataSource = _useState4[1];\n\n  var _useState5 = useState(props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listViewDisplayed = _useState6[0],\n      setListViewDisplayed = _useState6[1];\n\n  var _useState7 = useState(getRequestUrl(props.requestUrl)),\n      _useState8 = _slicedToArray(_useState7, 1),\n      url = _useState8[0];\n\n  var inputRef = useRef();\n  useEffect(function () {\n    _handleChangeText(stateText);\n\n    return function () {\n      _abortRequests();\n    };\n  }, []);\n  useEffect(function () {\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n  useImperativeHandle(ref, function () {\n    return {\n      setAddressText: function setAddressText(address) {\n        setStateText(address);\n      },\n      getAddressText: function getAddressText() {\n        return stateText;\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      }\n    };\n  });\n\n  var requestShouldUseWithCredentials = function requestShouldUseWithCredentials() {\n    return url === 'https://maps.googleapis.com/maps/api';\n  };\n\n  var _abortRequests = function _abortRequests() {\n    _requests.map(function (i) {\n      return i.abort();\n    });\n\n    _requests = [];\n  };\n\n  var supportedPlatform = function supportedPlatform() {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn('This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.');\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  var getCurrentLocation = function getCurrentLocation() {\n    var options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000\n      };\n    }\n\n    var getCurrentPosition = navigator.geolocation.getCurrentPosition || navigator.geolocation.default.getCurrentPosition;\n    getCurrentPosition && getCurrentPosition(function (position) {\n      if (props.nearbyPlacesAPI === 'None') {\n        var currentLocation = {\n          description: props.currentLocationLabel,\n          geometry: {\n            location: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }\n        };\n\n        _disableRowLoaders();\n\n        props.onPress(currentLocation, currentLocation);\n      } else {\n        _requestNearby(position.coords.latitude, position.coords.longitude);\n      }\n    }, function (error) {\n      _disableRowLoaders();\n\n      console.error(error.message);\n    }, options);\n  };\n\n  var _onPress = function _onPress(rowData) {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      _enableRowLoader(rowData);\n\n      var request = new XMLHttpRequest();\n\n      _requests.push(request);\n\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            var details = responseJSON.result;\n\n            _disableRowLoaders();\n\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn('google places autocomplete: ' + responseJSON.status);\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn('google places autocomplete: request could not be completed or has been aborted');\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open('GET', url + \"/place/details/json?\" + Qs.stringify(_objectSpread({\n        key: props.query.key,\n        placeid: rowData.place_id,\n        language: props.query.language\n      }, props.GooglePlacesDetailsQuery)));\n      request.withCredentials = requestShouldUseWithCredentials();\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n\n      delete rowData.isLoading;\n\n      var predefinedPlace = _getPredefinedPlace(rowData);\n\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  var _enableRowLoader = function _enableRowLoader(rowData) {\n    var rows = buildRowsFromResults(_results);\n\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  var _disableRowLoaders = function _disableRowLoaders() {\n    for (var i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n  };\n\n  var _getPredefinedPlace = function _getPredefinedPlace(rowData) {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (var i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  var _filterResultsByTypes = function _filterResultsByTypes(unfilteredResults, types) {\n    if (types.length === 0) return unfilteredResults;\n    var results = [];\n\n    for (var i = 0; i < unfilteredResults.length; i++) {\n      var found = false;\n\n      for (var j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n\n    return results;\n  };\n\n  var _requestNearby = function _requestNearby(latitude, longitude) {\n    _abortRequests();\n\n    if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n      var request = new XMLHttpRequest();\n\n      _requests.push(request);\n\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            var results = [];\n\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(responseJSON.results, props.filterReverseGeocodingByTypes);\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n          }\n\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n\n      var requestUrl = '';\n\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        requestUrl = url + \"/geocode/json?\" + Qs.stringify(_objectSpread({\n          latlng: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GoogleReverseGeocodingQuery));\n      } else {\n        requestUrl = url + \"/place/nearbysearch/json?\" + Qs.stringify(_objectSpread({\n          location: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GooglePlacesSearchQuery));\n      }\n\n      request.open('GET', requestUrl);\n      request.withCredentials = requestShouldUseWithCredentials();\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  var _request = function _request(text) {\n    _abortRequests();\n\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      var request = new XMLHttpRequest();\n\n      _requests.push(request);\n\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n\n          if (typeof responseJSON.predictions !== 'undefined') {\n            var results = props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _filterResultsByTypes(responseJSON.predictions, props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n          }\n\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      request.open('GET', url + \"/place/autocomplete/json?&input=\" + encodeURIComponent(text) + '&' + Qs.stringify(props.query));\n      request.withCredentials = requestShouldUseWithCredentials();\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  var debounceData = useMemo(function () {\n    return debounce(_request, props.debounce);\n  }, [props.query]);\n\n  var _onChangeText = function _onChangeText(text) {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  var _handleChangeText = function _handleChangeText(text) {\n    var _props$textInputProps;\n\n    _onChangeText(text);\n\n    var onChangeText = props == null ? void 0 : (_props$textInputProps = props.textInputProps) == null ? void 0 : _props$textInputProps.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  var _getRowLoader = function _getRowLoader() {\n    return React.createElement(ActivityIndicator, {\n      animating: true,\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var _renderRowData = function _renderRowData(rowData, index) {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return React.createElement(Text, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.description, props.styles.description, rowData.isPredefinedPlace ? props.styles.predefinedPlacesDescription : {}],\n      numberOfLines: props.numberOfLines,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 7\n      }\n    }, _renderDescription(rowData));\n  };\n\n  var _renderDescription = function _renderDescription(rowData) {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  var _renderLoader = function _renderLoader(rowData) {\n    if (rowData.isLoading === true) {\n      return React.createElement(View, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.loader, props.styles.loader],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 9\n        }\n      }, _getRowLoader());\n    }\n\n    return null;\n  };\n\n  var _renderRow = function _renderRow() {\n    var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return React.createElement(ScrollView, {\n      contentContainerStyle: props.isRowScrollable ? {\n        minWidth: '100%'\n      } : {\n        width: '100%'\n      },\n      scrollEnabled: props.isRowScrollable,\n      keyboardShouldPersistTaps: props.keyboardShouldPersistTaps,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      style: props.isRowScrollable ? {\n        minWidth: '100%'\n      } : {\n        width: '100%'\n      },\n      onPress: function onPress() {\n        return _onPress(rowData);\n      },\n      underlayColor: props.listUnderlayColor || '#c8c7cc',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.row, props.styles.row, rowData.isPredefinedPlace ? props.styles.specialItemRow : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 11\n      }\n    }, _renderLoader(rowData), _renderRowData(rowData, index))));\n  };\n\n  var _renderSeparator = function _renderSeparator(sectionID, rowID) {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return React.createElement(View, {\n      key: sectionID + \"-\" + rowID,\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.separator, props.styles.separator],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var isNewFocusInAutocompleteResultList = function isNewFocusInAutocompleteResultList(_ref) {\n    var relatedTarget = _ref.relatedTarget,\n        currentTarget = _ref.currentTarget;\n    if (!relatedTarget) return false;\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  var _onBlur = function _onBlur(e) {\n    var _inputRef$current;\n\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n    setListViewDisplayed(false);\n    inputRef == null ? void 0 : (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.blur();\n  };\n\n  var _onFocus = function _onFocus() {\n    return setListViewDisplayed(true);\n  };\n\n  var _renderPoweredLogo = function _renderPoweredLogo() {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return React.createElement(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, props.styles.poweredContainer],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.powered, props.styles.powered],\n      resizeMode: \"contain\",\n      source: require(\"./images/powered_by_google_on_white.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var _shouldShowPoweredLogo = function _shouldShowPoweredLogo() {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var row = dataSource[i];\n\n      if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var _renderLeftButton = function _renderLeftButton() {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  var _renderRightButton = function _renderRightButton() {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  var _getFlatList = function _getFlatList() {\n    var keyGenerator = function keyGenerator() {\n      return Math.random().toString(36).substr(2, 10);\n    };\n\n    if (supportedPlatform() && (stateText !== '' || props.predefinedPlaces.length > 0 || props.currentLocation === true) && listViewDisplayed === true) {\n      return React.createElement(FlatList, _extends({\n        nativeID: \"result-list-id\",\n        scrollEnabled: !props.disableScroll,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.listView, props.styles.listView],\n        data: dataSource,\n        keyExtractor: keyGenerator,\n        extraData: [dataSource, props],\n        ItemSeparatorComponent: _renderSeparator,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return _renderRow(item, index);\n        },\n        ListEmptyComponent: stateText.length > props.minLength && props.listEmptyComponent,\n        ListHeaderComponent: props.renderHeaderComponent && props.renderHeaderComponent(stateText),\n        ListFooterComponent: _renderPoweredLogo\n      }, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  var _props$textInputProps2 = props.textInputProps,\n      onFocus = _props$textInputProps2.onFocus,\n      onBlur = _props$textInputProps2.onBlur,\n      onChangeText = _props$textInputProps2.onChangeText,\n      clearButtonMode = _props$textInputProps2.clearButtonMode,\n      InputComp = _props$textInputProps2.InputComp,\n      userProps = _objectWithoutProperties(_props$textInputProps2, _excluded);\n\n  var TextInputComp = InputComp || TextInput;\n  return React.createElement(View, {\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.container, props.styles.container],\n    pointerEvents: \"box-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 5\n    }\n  }, !props.textInputHide && React.createElement(View, {\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, props.styles.textInputContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 9\n    }\n  }, _renderLeftButton(), React.createElement(TextInputComp, _extends({\n    ref: inputRef,\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.textInput, props.styles.textInput],\n    value: stateText,\n    placeholder: props.placeholder,\n    onFocus: onFocus ? function () {\n      _onFocus();\n\n      onFocus();\n    } : _onFocus,\n    onBlur: onBlur ? function (e) {\n      _onBlur(e);\n\n      onBlur();\n    } : _onBlur,\n    clearButtonMode: clearButtonMode || 'while-editing',\n    onChangeText: _handleChangeText\n  }, userProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 11\n    }\n  })), _renderRightButton()), _getFlatList(), props.children);\n});\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  listViewDisplayed: PropTypes.oneOf(['auto', PropTypes.bool]),\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all'])\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number\n};\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: function onFail() {},\n  onNotFound: function onNotFound() {},\n  onPress: function onPress() {},\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000\n};\nexport default {\n  GooglePlacesAutocomplete: GooglePlacesAutocomplete\n};","map":{"version":3,"sources":["/Users/rando/Desktop/Impressive/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"names":["debounce","PropTypes","Qs","React","forwardRef","useMemo","useEffect","useImperativeHandle","useRef","useState","defaultStyles","container","flex","textInputContainer","flexDirection","textInput","backgroundColor","height","borderRadius","paddingVertical","paddingHorizontal","fontSize","marginBottom","listView","row","padding","minHeight","loader","justifyContent","description","separator","poweredContainer","alignItems","borderBottomRightRadius","borderBottomLeftRadius","borderColor","borderTopWidth","powered","GooglePlacesAutocomplete","props","ref","_results","_requests","hasNavigator","navigator","geolocation","console","warn","buildRowsFromResults","results","res","length","predefinedPlacesAlwaysVisible","predefinedPlaces","filter","place","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","isPredefinedPlace","getRequestUrl","requestUrl","useOnPlatform","url","Platform","select","web","default","stateText","setStateText","dataSource","setDataSource","listViewDisplayed","setListViewDisplayed","inputRef","_handleChangeText","_abortRequests","setAddressText","address","getAddressText","blur","current","focus","isFocused","clear","requestShouldUseWithCredentials","i","abort","supportedPlatform","OS","getCurrentLocation","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","message","_onPress","rowData","fetchDetails","isLoading","Keyboard","dismiss","_enableRowLoader","request","XMLHttpRequest","push","ontimeout","onTimeout","onreadystatechange","readyState","status","responseJSON","JSON","parse","responseText","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","onFail","open","stringify","key","query","placeid","place_id","language","GooglePlacesDetailsQuery","withCredentials","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","undefined","filterReverseGeocodingByTypes","error_message","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","text","minLength","predictions","preProcess","encodeURIComponent","debounceData","_onChangeText","onChangeText","textInputProps","_getRowLoader","_renderRowData","index","renderRow","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","renderDescription","formatted_address","name","_renderLoader","_renderRow","isRowScrollable","minWidth","width","keyboardShouldPersistTaps","listUnderlayColor","specialItemRow","_renderSeparator","sectionID","rowID","isNewFocusInAutocompleteResultList","relatedTarget","currentTarget","node","parentNode","id","e","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","disableScroll","item","listEmptyComponent","renderHeaderComponent","onFocus","onBlur","clearButtonMode","InputComp","userProps","TextInputComp","TextInput","textInputHide","placeholder","children","propTypes","bool","string","number","array","object","oneOf","func","shape","defaultProps","rankby","type"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  Keyboard,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5,\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row',\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n  description: {},\n  separator: {\n    height: 0.5,\n    backgroundColor: '#c8c7cc',\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5,\n  },\n  powered: {},\n};\n\nexport const GooglePlacesAutocomplete = forwardRef((props, ref) => {\n  let _results = [];\n  let _requests = [];\n\n  const hasNavigator = () => {\n    if (navigator?.geolocation) {\n      return true;\n    } else {\n      console.warn(\n        'If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR',\n      );\n      return false;\n    }\n  };\n\n  const buildRowsFromResults = (results) => {\n    let res = [];\n\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = [\n        ...props.predefinedPlaces.filter((place) => place?.description.length),\n      ];\n\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true,\n        });\n      }\n    }\n\n    res = res.map((place) => ({\n      ...place,\n      isPredefinedPlace: true,\n    }));\n\n    return [...res, ...results];\n  };\n\n  const getRequestUrl = (requestUrl) => {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api',\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  const [stateText, setStateText] = useState('');\n  const [dataSource, setDataSource] = useState(buildRowsFromResults([]));\n  const [listViewDisplayed, setListViewDisplayed] = useState(\n    props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed,\n  );\n  const [url] = useState(getRequestUrl(props.requestUrl));\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    // This will load the default value's search results after the view has\n    // been rendered\n    _handleChangeText(stateText);\n    return () => {\n      _abortRequests();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // Update dataSource if props.predefinedPlaces changed\n    setDataSource(buildRowsFromResults([])) \n  }, [props.predefinedPlaces])\n\n  useImperativeHandle(ref, () => ({\n    setAddressText: (address) => {\n      setStateText(address);\n    },\n    getAddressText: () => stateText,\n    blur: () => inputRef.current.blur(),\n    focus: () => inputRef.current.focus(),\n    isFocused: () => inputRef.current.isFocused(),\n    clear: () => inputRef.current.clear(),\n  }));\n\n  const requestShouldUseWithCredentials = () =>\n    url === 'https://maps.googleapis.com/maps/api';\n\n  const _abortRequests = () => {\n    _requests.map((i) => i.abort());\n    _requests = [];\n  };\n\n  const supportedPlatform = () => {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn(\n        'This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.',\n      );\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000,\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000,\n      };\n    }\n    const getCurrentPosition =\n      navigator.geolocation.getCurrentPosition ||\n      navigator.geolocation.default.getCurrentPosition;\n\n    getCurrentPosition &&\n      getCurrentPosition(\n        (position) => {\n          if (props.nearbyPlacesAPI === 'None') {\n            let currentLocation = {\n              description: props.currentLocationLabel,\n              geometry: {\n                location: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude,\n                },\n              },\n            };\n\n            _disableRowLoaders();\n            props.onPress(currentLocation, currentLocation);\n          } else {\n            _requestNearby(position.coords.latitude, position.coords.longitude);\n          }\n        },\n        (error) => {\n          _disableRowLoaders();\n          console.error(error.message);\n        },\n        options,\n      );\n  };\n\n  const _onPress = (rowData) => {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      // display loader\n      _enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            // if (_isMounted === true) {\n            const details = responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n            // }\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn(\n                'google places autocomplete: ' + responseJSON.status,\n              );\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted',\n            );\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open(\n        'GET',\n        `${url}/place/details/json?` +\n          Qs.stringify({\n            key: props.query.key,\n            placeid: rowData.place_id,\n            language: props.query.language,\n            ...props.GooglePlacesDetailsQuery,\n          }),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = _getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  const _enableRowLoader = (rowData) => {\n    let rows = buildRowsFromResults(_results);\n    for (let i = 0; i < rows.length; i++) {\n      if (\n        rows[i].place_id === rowData.place_id ||\n        (rows[i].isCurrentLocation === true &&\n          rowData.isCurrentLocation === true)\n      ) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  const _disableRowLoaders = () => {\n    // if (_isMounted === true) {\n    for (let i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n    // }\n  };\n\n  const _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  const _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n\n  const _requestNearby = (latitude, longitude) => {\n    _abortRequests();\n\n    if (\n      latitude !== undefined &&\n      longitude !== undefined &&\n      latitude !== null &&\n      longitude !== null\n    ) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            // if (_isMounted === true) {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(\n                responseJSON.results,\n                props.filterReverseGeocodingByTypes,\n              );\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        requestUrl =\n          `${url}/geocode/json?` +\n          Qs.stringify({\n            latlng: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GoogleReverseGeocodingQuery,\n          });\n      } else {\n        requestUrl =\n          `${url}/place/nearbysearch/json?` +\n          Qs.stringify({\n            location: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GooglePlacesSearchQuery,\n          });\n      }\n\n      request.open('GET', requestUrl);\n\n      request.withCredentials = requestShouldUseWithCredentials();\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  const _request = (text) => {\n    _abortRequests();\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            // if (_isMounted === true) {\n            const results =\n              props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                ? _filterResultsByTypes(\n                    responseJSON.predictions,\n                    props.filterReverseGeocodingByTypes,\n                  )\n                : responseJSON.predictions;\n\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      request.open(\n        'GET',\n        `${url}/place/autocomplete/json?&input=` +\n          encodeURIComponent(text) +\n          '&' +\n          Qs.stringify(props.query),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceData = useMemo(() => debounce(_request, props.debounce), [props.query]);\n\n  const _onChangeText = (text) => {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  const _handleChangeText = (text) => {\n    _onChangeText(text);\n\n    const onChangeText = props?.textInputProps?.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  const _getRowLoader = () => {\n    return <ActivityIndicator animating={true} size='small' />;\n  };\n\n  const _renderRowData = (rowData, index) => {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return (\n      <Text\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.description,\n          props.styles.description,\n          rowData.isPredefinedPlace\n            ? props.styles.predefinedPlacesDescription\n            : {},\n        ]}\n        numberOfLines={props.numberOfLines}\n      >\n        {_renderDescription(rowData)}\n      </Text>\n    );\n  };\n\n  const _renderDescription = (rowData) => {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  const _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.loader,\n            props.styles.loader,\n          ]}\n        >\n          {_getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const _renderRow = (rowData = {}, index) => {\n    return (\n      <ScrollView\n        contentContainerStyle={\n          props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n        }\n        scrollEnabled={props.isRowScrollable}\n        keyboardShouldPersistTaps={props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <TouchableHighlight\n          style={\n            props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n          }\n          onPress={() => _onPress(rowData)}\n          underlayColor={props.listUnderlayColor || '#c8c7cc'}\n        >\n          <View\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.row,\n              props.styles.row,\n              rowData.isPredefinedPlace ? props.styles.specialItemRow : {},\n            ]}\n          >\n            {_renderLoader(rowData)}\n            {_renderRowData(rowData, index)}\n          </View>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  };\n\n  const _renderSeparator = (sectionID, rowID) => {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return (\n      <View\n        key={`${sectionID}-${rowID}`}\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.separator,\n          props.styles.separator,\n        ]}\n      />\n    );\n  };\n\n  const isNewFocusInAutocompleteResultList = ({\n    relatedTarget,\n    currentTarget,\n  }) => {\n    if (!relatedTarget) return false;\n\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  const _onBlur = (e) => {\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n\n    setListViewDisplayed(false);\n    inputRef?.current?.blur();\n  };\n\n  const _onFocus = () => setListViewDisplayed(true);\n\n  const _renderPoweredLogo = () => {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return (\n      <View\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.row,\n          defaultStyles.poweredContainer,\n          props.styles.poweredContainer,\n        ]}\n      >\n        <Image\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.powered,\n            props.styles.powered,\n          ]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  };\n\n  const _shouldShowPoweredLogo = () => {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let row = dataSource[i];\n\n      if (\n        !row.hasOwnProperty('isCurrentLocation') &&\n        !row.hasOwnProperty('isPredefinedPlace')\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const _renderLeftButton = () => {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  const _renderRightButton = () => {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  const _getFlatList = () => {\n    const keyGenerator = () => Math.random().toString(36).substr(2, 10);\n\n    if (\n      supportedPlatform() &&\n      (stateText !== '' ||\n        props.predefinedPlaces.length > 0 ||\n        props.currentLocation === true) &&\n      listViewDisplayed === true\n    ) {\n      return (\n        <FlatList\n          nativeID='result-list-id'\n          scrollEnabled={!props.disableScroll}\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.listView,\n            props.styles.listView,\n          ]}\n          data={dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[dataSource, props]}\n          ItemSeparatorComponent={_renderSeparator}\n          renderItem={({ item, index }) => _renderRow(item, index)}\n          ListEmptyComponent={\n            stateText.length > props.minLength && props.listEmptyComponent\n          }\n          ListHeaderComponent={\n            props.renderHeaderComponent &&\n            props.renderHeaderComponent(stateText)\n          }\n          ListFooterComponent={_renderPoweredLogo}\n          {...props}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  let {\n    onFocus,\n    onBlur,\n    onChangeText, // destructuring here stops this being set after onChangeText={_handleChangeText}\n    clearButtonMode,\n    InputComp,\n    ...userProps\n  } = props.textInputProps;\n  const TextInputComp = InputComp || TextInput;\n  return (\n    <View\n      style={[\n        props.suppressDefaultStyles ? {} : defaultStyles.container,\n        props.styles.container,\n      ]}\n      pointerEvents='box-none'\n    >\n      {!props.textInputHide && (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer,\n            props.styles.textInputContainer,\n          ]}\n        >\n          {_renderLeftButton()}\n          <TextInputComp\n            ref={inputRef}\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.textInput,\n              props.styles.textInput,\n            ]}\n            value={stateText}\n            placeholder={props.placeholder}\n            onFocus={\n              onFocus\n                ? () => {\n                    _onFocus();\n                    onFocus();\n                  }\n                : _onFocus\n            }\n            onBlur={\n              onBlur\n                ? (e) => {\n                    _onBlur(e);\n                    onBlur();\n                  }\n                : _onBlur\n            }\n            clearButtonMode={clearButtonMode || 'while-editing'}\n            onChangeText={_handleChangeText}\n            {...userProps}\n          />\n          {_renderRightButton()}\n        </View>\n      )}\n      {_getFlatList()}\n      {props.children}\n    </View>\n  );\n});\n\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  listViewDisplayed: PropTypes.oneOf(['auto', PropTypes.bool]),\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n};\n\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant',\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: () => {},\n  onNotFound: () => {},\n  onPress: () => {},\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n};\n\nexport default { GooglePlacesAutocomplete };\n"]},"metadata":{},"sourceType":"module"}
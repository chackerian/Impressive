{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CodedError, EventEmitter, UnavailabilityError } from '@unimodules/core';\nimport { AppleAuthenticationOperation } from \"./AppleAuthentication.types\";\nimport ExpoAppleAuthentication from \"./ExpoAppleAuthentication\";\nexport function isAvailableAsync() {\n  return _regeneratorRuntime.async(function isAvailableAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!ExpoAppleAuthentication || !ExpoAppleAuthentication.isAvailableAsync)) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", false);\n\n        case 2:\n          return _context.abrupt(\"return\", ExpoAppleAuthentication.isAvailableAsync());\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signInAsync(options) {\n  var requestOptions, credential;\n  return _regeneratorRuntime.async(function signInAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(!ExpoAppleAuthentication || !ExpoAppleAuthentication.requestAsync)) {\n            _context2.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('expo-apple-authentication', 'signInAsync');\n\n        case 2:\n          requestOptions = _objectSpread(_objectSpread({}, options), {}, {\n            requestedOperation: AppleAuthenticationOperation.LOGIN\n          });\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(ExpoAppleAuthentication.requestAsync(requestOptions));\n\n        case 5:\n          credential = _context2.sent;\n\n          if (!(!credential.authorizationCode || !credential.identityToken || !credential.user)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw new CodedError('ERR_APPLE_AUTHENTICATION_REQUEST_FAILED', 'The credential returned by `signInAsync` is missing one or more required fields.');\n\n        case 8:\n          return _context2.abrupt(\"return\", credential);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function refreshAsync(options) {\n  var requestOptions, credential;\n  return _regeneratorRuntime.async(function refreshAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(!ExpoAppleAuthentication || !ExpoAppleAuthentication.requestAsync)) {\n            _context3.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('expo-apple-authentication', 'refreshAsync');\n\n        case 2:\n          requestOptions = _objectSpread(_objectSpread({}, options), {}, {\n            requestedOperation: AppleAuthenticationOperation.REFRESH\n          });\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(ExpoAppleAuthentication.requestAsync(requestOptions));\n\n        case 5:\n          credential = _context3.sent;\n\n          if (!(!credential.authorizationCode || !credential.identityToken || !credential.user)) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw new CodedError('ERR_APPLE_AUTHENTICATION_REQUEST_FAILED', 'The credential returned by `refreshAsync` is missing one or more required fields.');\n\n        case 8:\n          return _context3.abrupt(\"return\", credential);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signOutAsync(options) {\n  var requestOptions;\n  return _regeneratorRuntime.async(function signOutAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(!ExpoAppleAuthentication || !ExpoAppleAuthentication.requestAsync)) {\n            _context4.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('expo-apple-authentication', 'signOutAsync');\n\n        case 2:\n          requestOptions = _objectSpread(_objectSpread({}, options), {}, {\n            requestedOperation: AppleAuthenticationOperation.LOGOUT\n          });\n          return _context4.abrupt(\"return\", ExpoAppleAuthentication.requestAsync(requestOptions));\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getCredentialStateAsync(user) {\n  return _regeneratorRuntime.async(function getCredentialStateAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!(!ExpoAppleAuthentication || !ExpoAppleAuthentication.getCredentialStateAsync)) {\n            _context5.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('expo-apple-authentication', 'getCredentialStateAsync');\n\n        case 2:\n          return _context5.abrupt(\"return\", ExpoAppleAuthentication.getCredentialStateAsync(user));\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar ExpoAppleAuthenticationEventEmitter = new EventEmitter(ExpoAppleAuthentication);\nexport function addRevokeListener(listener) {\n  return ExpoAppleAuthenticationEventEmitter.addListener('Expo.appleIdCredentialRevoked', listener);\n}","map":{"version":3,"sources":["../src/AppleAuthentication.ts"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, EventEmitter, Subscription, UnavailabilityError } from '@unimodules/core';\n\nimport {\n  AppleAuthenticationSignInOptions,\n  AppleAuthenticationRefreshOptions,\n  AppleAuthenticationSignOutOptions,\n  AppleAuthenticationCredential,\n  AppleAuthenticationCredentialState,\n  AppleAuthenticationOperation,\n  AppleAuthenticationRevokeListener,\n} from './AppleAuthentication.types';\nimport ExpoAppleAuthentication from './ExpoAppleAuthentication';\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (!ExpoAppleAuthentication || !ExpoAppleAuthentication.isAvailableAsync) {\n    return false;\n  }\n  return ExpoAppleAuthentication.isAvailableAsync();\n}\n\nexport async function signInAsync(\n  options?: AppleAuthenticationSignInOptions\n): Promise<AppleAuthenticationCredential> {\n  if (!ExpoAppleAuthentication || !ExpoAppleAuthentication.requestAsync) {\n    throw new UnavailabilityError('expo-apple-authentication', 'signInAsync');\n  }\n  const requestOptions = {\n    ...options,\n    requestedOperation: AppleAuthenticationOperation.LOGIN,\n  };\n  const credential = await ExpoAppleAuthentication.requestAsync(requestOptions);\n  if (!credential.authorizationCode || !credential.identityToken || !credential.user) {\n    throw new CodedError(\n      'ERR_APPLE_AUTHENTICATION_REQUEST_FAILED',\n      'The credential returned by `signInAsync` is missing one or more required fields.'\n    );\n  }\n  return credential;\n}\n\nexport async function refreshAsync(\n  options: AppleAuthenticationRefreshOptions\n): Promise<AppleAuthenticationCredential> {\n  if (!ExpoAppleAuthentication || !ExpoAppleAuthentication.requestAsync) {\n    throw new UnavailabilityError('expo-apple-authentication', 'refreshAsync');\n  }\n  const requestOptions = {\n    ...options,\n    requestedOperation: AppleAuthenticationOperation.REFRESH,\n  };\n  const credential = await ExpoAppleAuthentication.requestAsync(requestOptions);\n  if (!credential.authorizationCode || !credential.identityToken || !credential.user) {\n    throw new CodedError(\n      'ERR_APPLE_AUTHENTICATION_REQUEST_FAILED',\n      'The credential returned by `refreshAsync` is missing one or more required fields.'\n    );\n  }\n  return credential;\n}\n\nexport async function signOutAsync(\n  options: AppleAuthenticationSignOutOptions\n): Promise<AppleAuthenticationCredential> {\n  if (!ExpoAppleAuthentication || !ExpoAppleAuthentication.requestAsync) {\n    throw new UnavailabilityError('expo-apple-authentication', 'signOutAsync');\n  }\n  const requestOptions = {\n    ...options,\n    requestedOperation: AppleAuthenticationOperation.LOGOUT,\n  };\n  return ExpoAppleAuthentication.requestAsync(requestOptions);\n}\n\nexport async function getCredentialStateAsync(\n  user: string\n): Promise<AppleAuthenticationCredentialState> {\n  if (!ExpoAppleAuthentication || !ExpoAppleAuthentication.getCredentialStateAsync) {\n    throw new UnavailabilityError('expo-apple-authentication', 'getCredentialStateAsync');\n  }\n  return ExpoAppleAuthentication.getCredentialStateAsync(user);\n}\n\nconst ExpoAppleAuthenticationEventEmitter = new EventEmitter(ExpoAppleAuthentication);\n\nexport function addRevokeListener(listener: AppleAuthenticationRevokeListener): Subscription {\n  return ExpoAppleAuthenticationEventEmitter.addListener('Expo.appleIdCredentialRevoked', listener);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
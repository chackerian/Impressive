{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { PermissionStatus } from 'unimodules-permissions-interface';\nimport ExponentFacebook from \"./ExponentFacebook\";\nexport { PermissionStatus };\nvar androidPermissionsResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED\n};\nexport function requestPermissionsAsync() {\n  return _regeneratorRuntime.async(function requestPermissionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Promise.resolve(androidPermissionsResponse));\n\n        case 2:\n          if (ExponentFacebook.requestPermissionsAsync) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'requestPermissionsAsync');\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(ExponentFacebook.requestPermissionsAsync());\n\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getPermissionsAsync() {\n  return _regeneratorRuntime.async(function getPermissionsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context2.next = 2;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", Promise.resolve(androidPermissionsResponse));\n\n        case 2:\n          if (ExponentFacebook.getPermissionsAsync) {\n            _context2.next = 4;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'getPermissionsAsync');\n\n        case 4:\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(ExponentFacebook.getPermissionsAsync());\n\n        case 6:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function logInWithReadPermissionsAsync() {\n  var options,\n      nativeLoginResult,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function logInWithReadPermissionsAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n\n          if (ExponentFacebook.logInWithReadPermissionsAsync) {\n            _context3.next = 3;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'logInWithReadPermissionsAsync');\n\n        case 3:\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(ExponentFacebook.logInWithReadPermissionsAsync(options));\n\n        case 5:\n          nativeLoginResult = _context3.sent;\n          return _context3.abrupt(\"return\", transformNativeFacebookLoginResult(nativeLoginResult));\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAuthenticationCredentialAsync() {\n  var nativeAccessTokenResult;\n  return _regeneratorRuntime.async(function getAuthenticationCredentialAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (ExponentFacebook.getAuthenticationCredentialAsync) {\n            _context4.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'getAuthenticationCredentialAsync');\n\n        case 2:\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(ExponentFacebook.getAuthenticationCredentialAsync());\n\n        case 4:\n          nativeAccessTokenResult = _context4.sent;\n          return _context4.abrupt(\"return\", transformNativeFacebookAuthenticationCredential(nativeAccessTokenResult));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function logOutAsync() {\n  return _regeneratorRuntime.async(function logOutAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (ExponentFacebook.logOutAsync) {\n            _context5.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'logOutAsync');\n\n        case 2:\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(ExponentFacebook.logOutAsync());\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function setAdvertiserTrackingEnabledAsync(enabled) {\n  return _regeneratorRuntime.async(function setAdvertiserTrackingEnabledAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (ExponentFacebook.setAdvertiserTrackingEnabledAsync) {\n            _context6.next = 2;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", false);\n\n        case 2:\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(ExponentFacebook.setAdvertiserTrackingEnabledAsync(enabled));\n\n        case 4:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function setAutoLogAppEventsEnabledAsync(enabled) {\n  return _regeneratorRuntime.async(function setAutoLogAppEventsEnabledAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (ExponentFacebook.setAutoLogAppEventsEnabledAsync) {\n            _context7.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'setAutoLogAppEventsEnabledAsync');\n\n        case 2:\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(ExponentFacebook.setAutoLogAppEventsEnabledAsync(enabled));\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function setAutoInitEnabledAsync(enabled) {\n  return _regeneratorRuntime.async(function setAutoInitEnabledAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          console.warn('The `autoInitEnabled` option has been removed from Facebook SDK â€” we recommend to explicitly use `initializeAsync` instead.');\n\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function initializeAsync(optionsOrAppId, appName) {\n  var options;\n  return _regeneratorRuntime.async(function initializeAsync$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          if (ExponentFacebook.initializeAsync) {\n            _context9.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'initializeAsync');\n\n        case 2:\n          options = {};\n\n          if (typeof optionsOrAppId === 'string') {\n            options.appId = optionsOrAppId;\n            options.appName = appName;\n            console.warn('The parameters of `initializeAsync(appId, appName)` have changed to support future platforms, you must now provide an object instead: initializeAsync({ appId, appName }).');\n          } else {\n            options = optionsOrAppId;\n          }\n\n          _context9.next = 6;\n          return _regeneratorRuntime.awrap(ExponentFacebook.initializeAsync(options));\n\n        case 6:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function setAdvertiserIDCollectionEnabledAsync(enabled) {\n  return _regeneratorRuntime.async(function setAdvertiserIDCollectionEnabledAsync$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          if (ExponentFacebook.setAdvertiserIDCollectionEnabledAsync) {\n            _context10.next = 2;\n            break;\n          }\n\n          throw new UnavailabilityError('Facebook', 'setAdvertiserIDCollectionEnabledAsync');\n\n        case 2:\n          _context10.next = 4;\n          return _regeneratorRuntime.awrap(ExponentFacebook.setAdvertiserIDCollectionEnabledAsync(enabled));\n\n        case 4:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction transformNativeFacebookLoginResult(input) {\n  if (input.type === 'cancel') return input;\n  return _objectSpread(_objectSpread({}, input), {}, {\n    refreshDate: typeof input.refreshDate === 'number' ? new Date(input.refreshDate) : input.refreshDate,\n    dataAccessExpirationDate: new Date(input.dataAccessExpirationDate),\n    expirationDate: new Date(input.expirationDate)\n  });\n}\n\nfunction transformNativeFacebookAuthenticationCredential(input) {\n  if (!input) return input;\n  return _objectSpread(_objectSpread({}, input), {}, {\n    refreshDate: typeof input.refreshDate === 'number' ? new Date(input.refreshDate) : input.refreshDate,\n    dataAccessExpirationDate: new Date(input.dataAccessExpirationDate),\n    expirationDate: new Date(input.expirationDate)\n  });\n}","map":{"version":3,"sources":["../src/Facebook.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { Platform } from 'react-native';\nimport {\n  PermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n} from 'unimodules-permissions-interface';\n\nimport ExponentFacebook from './ExponentFacebook';\nimport {\n  FacebookAuthenticationCredential,\n  FacebookLoginResult,\n  FacebookOptions,\n  FacebookInitializationOptions,\n} from './Facebook.types';\n\nexport {\n  FacebookLoginResult,\n  FacebookOptions,\n  FacebookAuthenticationCredential,\n  PermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n};\n\nconst androidPermissionsResponse: PermissionResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED,\n};\n\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  if (Platform.OS === 'android') {\n    return Promise.resolve(androidPermissionsResponse);\n  }\n\n  if (!ExponentFacebook.requestPermissionsAsync) {\n    throw new UnavailabilityError('Facebook', 'requestPermissionsAsync');\n  }\n  return await ExponentFacebook.requestPermissionsAsync();\n}\n\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  if (Platform.OS === 'android') {\n    return Promise.resolve(androidPermissionsResponse);\n  }\n\n  if (!ExponentFacebook.getPermissionsAsync) {\n    throw new UnavailabilityError('Facebook', 'getPermissionsAsync');\n  }\n  return await ExponentFacebook.getPermissionsAsync();\n}\n\nexport async function logInWithReadPermissionsAsync(\n  options: FacebookOptions = {}\n): Promise<FacebookLoginResult> {\n  if (!ExponentFacebook.logInWithReadPermissionsAsync) {\n    throw new UnavailabilityError('Facebook', 'logInWithReadPermissionsAsync');\n  }\n\n  const nativeLoginResult = await ExponentFacebook.logInWithReadPermissionsAsync(options);\n\n  return transformNativeFacebookLoginResult(nativeLoginResult);\n}\n\n/**\n * Returns the `FacebookAuthenticationCredential` object if a user is authenticated, and `null` if no valid authentication exists.\n *\n * You can use this method to check if the user should sign in or not.\n */\nexport async function getAuthenticationCredentialAsync(): Promise<FacebookAuthenticationCredential | null> {\n  if (!ExponentFacebook.getAuthenticationCredentialAsync) {\n    throw new UnavailabilityError('Facebook', 'getAuthenticationCredentialAsync');\n  }\n\n  const nativeAccessTokenResult = await ExponentFacebook.getAuthenticationCredentialAsync();\n\n  return transformNativeFacebookAuthenticationCredential(nativeAccessTokenResult);\n}\n\n/**\n * Logs out of the currently authenticated session.\n */\nexport async function logOutAsync(): Promise<void> {\n  if (!ExponentFacebook.logOutAsync) {\n    throw new UnavailabilityError('Facebook', 'logOutAsync');\n  }\n\n  await ExponentFacebook.logOutAsync();\n}\n\n/**\n * Sets whether Facebook SDK should enable advertising tracking,\n * (more info [here](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)).\n *\n * Limitations:\n * 1. AdvertiserTrackingEnabled is only available for iOS 14+.\n * 2. For iOS 13 or earlier, AdvertiserTrackingEnabled uses the Limit Ad Tracking setting as its value.\n *\n * This method corresponds to [this](https://developers.facebook.com/docs/app-events/guides/advertising-tracking-enabled)\n *\n * @param enabled Whether advertising tracking of the Facebook SDK should be enabled\n * @return Whether the value is set successfully. It will always return false in Android, iOS 13 and below.\n */\nexport async function setAdvertiserTrackingEnabledAsync(enabled: boolean): Promise<boolean> {\n  if (!ExponentFacebook.setAdvertiserTrackingEnabledAsync) {\n    return false;\n  }\n  return await ExponentFacebook.setAdvertiserTrackingEnabledAsync(enabled);\n}\n\n/**\n * Sets whether Facebook SDK should log app events. App events involve eg. app installs,\n * app launches (more info [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#auto-events)\n * and [here](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#auto-events)).\n *\n * In some cases, you may want to disable or delay the collection of automatically logged events,\n * such as to obtain user consent or fulfill legal obligations.\n *\n * This method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-auto-events)\n * and [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-auto-events) native SDK methods.\n *\n * @param enabled Whether automatic events logging of the Facebook SDK should be enabled\n */\nexport async function setAutoLogAppEventsEnabledAsync(enabled: boolean): Promise<void> {\n  if (!ExponentFacebook.setAutoLogAppEventsEnabledAsync) {\n    throw new UnavailabilityError('Facebook', 'setAutoLogAppEventsEnabledAsync');\n  }\n  await ExponentFacebook.setAutoLogAppEventsEnabledAsync(enabled);\n}\n\n/**\n * @deprecated Explicitly call `initializeAsync` instead.\n */\nexport async function setAutoInitEnabledAsync(enabled: boolean): Promise<void> {\n  console.warn(\n    'The `autoInitEnabled` option has been removed from Facebook SDK â€” we recommend to explicitly use `initializeAsync` instead.'\n  );\n}\n\n/**\n * Calling this method ensures that the SDK is initialized.\n * You have to call this method before calling any method that uses\n * the FBSDK (ex: `logInWithReadPermissionsAsync`, `logOutAsync`) to ensure that\n * Facebook support is initialized properly.\n *\n * - On Android and iOS you can optionally provide an `appId` argument.\n *   - If you don't provide `appId`, the Facebook SDK will try to use `appId` from native app resources (which in standalone apps you define in `app.json`, in app store development clients are unavailable, and in bare apps you configure yourself according to [Facebook's setup documentation for iOS](https://developers.facebook.com/docs/facebook-login/ios#4--configure-your-project) and [Android](https://developers.facebook.com/docs/facebook-login/android#manifest)). If the Facebook SDK fails to find an `appId` value, the returned promise will be rejected.\n *   - The same resolution mechanism works for `appName`.\n * - If you provide an explicit `appId`, it will override any other source.\n *\n * @param options The options used to configure how Facebook is initialized\n */\nexport async function initializeAsync(\n  optionsOrAppId: FacebookInitializationOptions | string,\n  appName?: string\n): Promise<void> {\n  if (!ExponentFacebook.initializeAsync) {\n    throw new UnavailabilityError('Facebook', 'initializeAsync');\n  }\n\n  let options: FacebookInitializationOptions = {};\n\n  if (typeof optionsOrAppId === 'string') {\n    options.appId = optionsOrAppId;\n    options.appName = appName;\n    console.warn(\n      'The parameters of `initializeAsync(appId, appName)` have changed to support future platforms, you must now provide an object instead: initializeAsync({ appId, appName }).'\n    );\n  } else {\n    options = optionsOrAppId;\n  }\n\n  await ExponentFacebook.initializeAsync(options);\n}\n\n/**\n * Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA\n * and Android Advertising ID, automatically. Advertiser IDs let you identify and target specific customers.\n * To learn more visit [Facebook documentation](https://developers.facebook.com/docs/app-ads/targeting/mobile-advertiser-ids)\n * describing that topic.\n *\n * In some cases, you may want to disable or delay the collection of `advertiser-id`,\n * such as to obtain user consent or fulfill legal obligations.\n *\n * This method corresponds to [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-ios#disable-advertiser-id)\n * and [this](https://developers.facebook.com/docs/app-events/getting-started-app-events-android/#disable-advertiser-id) native SDK methods.\n * @param enabled Whether `advertiser-id` should be collected\n */\nexport async function setAdvertiserIDCollectionEnabledAsync(enabled: boolean): Promise<void> {\n  if (!ExponentFacebook.setAdvertiserIDCollectionEnabledAsync) {\n    throw new UnavailabilityError('Facebook', 'setAdvertiserIDCollectionEnabledAsync');\n  }\n  await ExponentFacebook.setAdvertiserIDCollectionEnabledAsync(enabled);\n}\n\nfunction transformNativeFacebookLoginResult(input: FacebookLoginResult): FacebookLoginResult {\n  if (input.type === 'cancel') return input;\n\n  return {\n    ...input,\n    refreshDate:\n      typeof input.refreshDate === 'number' ? new Date(input.refreshDate) : input.refreshDate,\n    dataAccessExpirationDate: new Date(input.dataAccessExpirationDate),\n    expirationDate: new Date(input.expirationDate),\n  };\n}\n\nfunction transformNativeFacebookAuthenticationCredential(\n  input: any\n): FacebookAuthenticationCredential | null {\n  if (!input) return input;\n  return {\n    ...input,\n    refreshDate:\n      typeof input.refreshDate === 'number' ? new Date(input.refreshDate) : input.refreshDate,\n    dataAccessExpirationDate: new Date(input.dataAccessExpirationDate),\n    expirationDate: new Date(input.expirationDate),\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
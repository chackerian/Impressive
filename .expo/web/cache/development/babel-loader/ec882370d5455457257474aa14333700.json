{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rando/Desktop/impress/screens/SwipeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, setState } from 'react';\nimport Background from \"./Background\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NavSwipe from \"./NavSwipe\";\nimport CardStack, { Card } from 'react-native-card-stack-swiper';\nimport { storage, store } from \"../App.js\";\nimport firebase from 'firebase/app';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nexport default function SwipeScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      swiper = _useState4[0],\n      setSwiper = _useState4[1];\n\n  var styles = StyleSheet.create({\n    image: {\n      opacity: 1,\n      height: 470\n    },\n    info: {\n      padding: 2,\n      color: 'white',\n      fontWeight: \"bold\"\n    },\n    description: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'white',\n      marginLeft: 12\n    },\n    viewport: {\n      height: 250,\n      marginTop: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      alignItems: 'center'\n    },\n    button: {\n      padding: 30\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'column'\n    },\n    buttonContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    content: {\n      flex: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    card: {\n      width: 320,\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowOpacity: 0.5\n    },\n    label: {\n      marginLeft: 12,\n      fontSize: 25,\n      color: 'white',\n      fontWeight: 'bold',\n      fontFamily: 'System',\n      backgroundColor: 'transparent'\n    }\n  });\n\n  function cards() {\n    var user, userLikes, userDislikes, interacted, div, snaps, x, snapshot, images;\n    return _regeneratorRuntime.async(function cards$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(store.collection(\"users\").doc(props.route.params.user.email).get());\n\n          case 2:\n            user = _context.sent;\n            userLikes = user.data().likes || [];\n            userDislikes = user.data().dislikes || [];\n            interacted = userLikes.concat(userDislikes);\n            div = [];\n\n            while (interacted.length) {\n              div.push(interacted.splice(0, 10));\n            }\n\n            snaps = [];\n            x = 0;\n\n          case 10:\n            if (!(x < div.length)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(store.collection(\"users\").where(\"email\", \"not-in\", div[x]).get());\n\n          case 13:\n            snapshot = _context.sent;\n            snaps.push(snapshot);\n\n          case 15:\n            x++;\n            _context.next = 10;\n            break;\n\n          case 18:\n            console.log(snaps);\n            images = [];\n            snapshot.docs.forEach(function (s) {\n              images.push(s.data());\n            });\n            setImages(images);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    cards();\n  }, []);\n\n  function addLike(email) {\n    var snapshot, data;\n    return _regeneratorRuntime.async(function addLike$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            store.collection('users').doc(props.route.params.user.email).update({\n              likes: firebase.firestore.FieldValue.arrayUnion(email)\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(store.collection('users').doc(email).get());\n\n          case 3:\n            snapshot = _context2.sent;\n            data = snapshot.data();\n            console.log(data);\n\n            if (Platform.OS == \"web\") {\n              Alerts.success('Test message stackslide effect!', {\n                position: 'top-right',\n                effect: 'stackslide'\n              });\n            } else {\n              Alert.alert(\"New Match\", \"My Alert Msg\", [{\n                text: \"Cancel\",\n                onPress: function onPress() {\n                  return console.log(\"Cancel Pressed\");\n                },\n                style: \"cancel\"\n              }, {\n                text: \"Go to match\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var addDislike = function addDislike(email) {\n    store.collection('users').doc(props.route.params.user.email).update({\n      dislikes: firebase.firestore.FieldValue.arrayUnion(email)\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.body,\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, React.createElement(NavSwipe, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 6\n    }\n  }), React.createElement(View, {\n    style: styles.viewport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 6\n    }\n  }, React.createElement(CardStack, {\n    style: styles.content,\n    ref: function ref(swiper) {\n      setSwiper(swiper);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, images.map(function (i) {\n    var name = i.name.split(\" \")[0];\n    return React.createElement(Card, {\n      style: [styles.card, styles.card1],\n      key: i.name,\n      onSwipedRight: function onSwipedRight(event) {\n        return addLike(i.email);\n      },\n      onSwipedLeft: function onSwipedLeft(event) {\n        return addDislike(i.email);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: i.picture\n      },\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), React.createElement(View, {\n      style: styles.info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }\n    }, name, \", \", i.age), React.createElement(Text, {\n      style: styles.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 14\n      }\n    }, i.city, \", \", i.state)));\n  }))), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: function onPress() {\n      swiper.swipeLeft();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faTimesCircle,\n    color: '#ff2400',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: function onPress() {\n      swiper.swipeRight();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faHeart,\n    color: '#02ff02',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/rando/Desktop/impress/screens/SwipeScreen.js"],"names":["React","useState","useEffect","useRef","setState","Background","NavSwipe","CardStack","Card","storage","store","firebase","FontAwesomeIcon","faHeart","faTimesCircle","SCREEN_HEIGHT","Dimensions","get","height","SCREEN_WIDTH","width","SwipeScreen","props","images","setImages","swiper","setSwiper","styles","StyleSheet","create","image","opacity","info","padding","color","fontWeight","description","fontSize","marginLeft","viewport","marginTop","marginRight","alignItems","button","container","flex","flexDirection","buttonContainer","justifyContent","content","card","borderRadius","shadowColor","shadowOffset","shadowOpacity","label","fontFamily","backgroundColor","cards","collection","doc","route","params","user","email","userLikes","data","likes","userDislikes","dislikes","interacted","concat","div","length","push","splice","snaps","x","where","snapshot","console","log","docs","forEach","s","addLike","update","firestore","FieldValue","arrayUnion","Platform","OS","Alerts","success","position","effect","Alert","alert","text","onPress","style","addDislike","body","map","i","name","split","card1","event","uri","picture","age","city","state","swipeLeft","swipeRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, setState} from 'react'\nimport Background from './Background'\nimport {StyleSheet, Image, TextInput, Text, View, Platform, Dimensions, PanResponder, Animated, TouchableOpacity, Alert } from 'react-native';\nimport NavSwipe from './NavSwipe';\nimport CardStack, { Card } from 'react-native-card-stack-swiper';\nimport { storage, store } from \"../App.js\";\nimport firebase from 'firebase/app';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst SCREEN_HEIGHT = Dimensions.get('window').height\nconst SCREEN_WIDTH = Dimensions.get('window').width\n\nexport default function SwipeScreen(props) {\n\n  const [images, setImages] = useState([]);\n  const [swiper, setSwiper] = useState();\n\n  const styles = StyleSheet.create({\n    image: {\n      opacity: 1,\n      height: 470,\n    },\n    info: {\n      padding: 2,\n      color: 'white',\n      fontWeight: \"bold\",\n    },\n    description: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: 'white',\n      marginLeft: 12,\n    },\n    viewport: {\n      height: 250,\n      marginTop: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      alignItems: 'center',\n    },\n    button: {\n      padding: 30,\n    },\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n    },\n    buttonContainer:{\n      flexDirection:'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    content:{\n      flex: 5,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    card:{\n      width: 320,\n      borderRadius: 5,\n      shadowColor: 'rgba(0,0,0,0.5)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowOpacity:0.5,\n    },\n    label: {\n      marginLeft: 12,\n      fontSize: 25,\n      color: 'white',\n      fontWeight: 'bold',\n      fontFamily: 'System',\n      backgroundColor: 'transparent',\n    },\n  })\n\n  async function cards(){\n    const user = await store.collection(\"users\").doc(props.route.params.user.email).get()\n    const userLikes = user.data().likes || []\n    const userDislikes = user.data().dislikes || []\n\n    var interacted = userLikes.concat(userDislikes)\n    var div = [];\n\n    while(interacted.length) {\n      div.push(interacted.splice(0, 10));\n    }\n\n    var snaps = []\n    for(var x=0; x<div.length; x++){\n      var snapshot = await store.collection(\"users\").where(\"email\", \"not-in\", div[x]).get()\n      snaps.push(snapshot);\n    }\n\n    console.log(snaps)\n\n    const images = [];\n\n    snapshot.docs.forEach((s) => {\n      images.push(s.data());\n    });\n    setImages(images);\n  }\n  \n  useEffect(() => {\n    cards()\n  }, [])\n\n  async function addLike(email){\n\n    store.collection('users').doc(props.route.params.user.email).update({\n      likes: firebase.firestore.FieldValue.arrayUnion(email)\n    })\n\n    const snapshot = await store.collection('users').doc(email).get();\n    const data = snapshot.data();\n    console.log(data)\n\n    if (Platform.OS == \"web\") {\n      Alerts.success('Test message stackslide effect!', {\n        position: 'top-right',\n        effect: 'stackslide'\n      });\n    } else {\n\n      Alert.alert(\n        \"New Match\",\n        \"My Alert Msg\",\n        [\n          {\n            text: \"Cancel\",\n            onPress: () => console.log(\"Cancel Pressed\"),\n            style: \"cancel\"\n          },\n          { text: \"Go to match\", onPress: () => console.log(\"OK Pressed\") }\n        ]\n      );\n\n    }\n\n     // Create convo\n\n  }\n\n  var addDislike = function(email){\n    store.collection('users').doc(props.route.params.user.email).update({\n      dislikes: firebase.firestore.FieldValue.arrayUnion(email)\n    })\n  }\n\n  return (\n    <View style={styles.body} id=\"main\">\n     <NavSwipe />\n     <View style={styles.viewport}>\n      <CardStack \n        style={styles.content}\n        ref={swiper => { setSwiper(swiper) }}\n      >\n       {images.map((i) => {\n        var name = i.name.split(\" \")[0]\n        return (\n          <Card style={[styles.card, styles.card1]} key={i.name} \n            onSwipedRight={(event) => addLike(i.email)} \n            onSwipedLeft={(event) => addDislike(i.email)}\n          >\n            <Image source={{uri: i.picture}} style={styles.image} />\n            <View style={styles.info}> \n             <Text style={styles.label}>{name}, {i.age}</Text>\n             <Text style={styles.description}>{i.city}, {i.state}</Text>\n            </View>\n          </Card>\n          )\n        })}\n      </CardStack>\n     </View>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={[styles.button]} onPress={() => {\n          swiper.swipeLeft();\n        }}>\n          <FontAwesomeIcon icon={ faTimesCircle } color={ '#ff2400' } size={ 40 } />\n        </TouchableOpacity>\n        <TouchableOpacity style={[styles.button]} onPress={() => {\n          swiper.swipeRight();\n        }}>\n          <FontAwesomeIcon icon={ faHeart } color={ '#02ff02' } size={ 40 } />\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}